{"version":3,"sources":["app/utils/utils.js","app/components/headerfooter/CustomHeader.js","assets/img/logo.png","app/pages/home/home.js","app/pages/login/login.js","app/pages/update-password/update-password.js","app/components/tables/Filters.js","app/components/tables/TableContainer.js","app/components/ModalForm/modal.js","app/components/ModalForm/triggerButton.js","app/components/ModalForm/container.js","app/pages/societe/formSociete.js","app/components/contact/CardContact.js","app/pages/societe/AfficherExposant.js","app/pages/handle-accounts/registerForm.js","app/pages/handle-accounts/handle-accounts.js","app/components/festivals/FormLocalisation.js","app/pages/festivals/FormFestival.js","app/components/tables/SimpleTableContainer.js","app/components/festivals/CardFestival.js","app/pages/festivals/Festivals.js","app/pages/type-jeux/formType.js","app/pages/type-jeux/type-jeux.js","app/pages/jeux/formJeu.js","app/pages/jeux/jeux.js","app/routes/privateRoute.js","app/pages/festival-games/festival-games.js","app/components/contact/FormContact.js","app/components/game/FormGameReservation.js","app/components/game/game-exhibitor-monitoring.js","app/pages/exhibitor-monitoring/exhibitor-monitoring.js","app/pages/societe/AfficherSocieteRole.js","app/pages/reservation/Reservation.js","app/components/game/GameCard.js","app/pages/societe/AfficherEditeurs.js","app/pages/zone-festival/AffichageZone.js","app/pages/reservation/Facturation.js","app/routes/routes.js","app/components/headerfooter/CustomFooter.js","App.js","index.js"],"names":["isAdmin","token","localStorage","getItem","jwt_decode","user_estAdmin","isLogin","jwt","verify","err","decoded","email","user_email","CustomHeader","useState","setDateFestivalCourant","selectedFestival","useContext","FestivalContext","history","useHistory","useEffect","fes_id","Axios","get","then","res","data","festival","fes_date","Navbar","collapseOnSelect","fixed","expand","bg","variant","Toggle","aria-controls","Collapse","id","Nav","NavDropdown","title","className","to","Button","onClick","removeItem","push","window","location","reload","icon","faShapes","faChessKnight","faUser","faTheaterMasks","Moment","format","faCalendarAlt","faClipboardList","faFileInvoiceDollar","faAddressBook","faUserTag","faDice","faTh","Home","dateProchainFestival","setdateProchainFestival","console","log","setItem","closestFestival","src","logo","xmlns","width","height","fill","viewBox","d","Login","setEmail","password","setPassword","errortext","setErrortext","Form","onSubmit","event","dataToSend","JSON","stringify","fetch","method","body","headers","Accept","ok","json","responseJson","error","preventDefault","FormText","Group","size","controlId","Label","Control","autoFocus","type","value","onChange","e","target","block","disabled","length","UpdatePassword","olderPassword","setOlderPassword","newPassword","setNewPassword","confirmedPassword","setConfirmedPassword","show","setShow","Alert","success","Filter","column","style","marginTop","canFilter","render","DefaultColumnFilter","filterValue","setFilter","preFilteredRows","Input","undefined","placeholder","SelectColumnFilter","options","React","useMemo","Set","forEach","row","add","values","CustomInput","map","option","index","TableContainer","columns","renderRowSubComponent","useTable","defaultColumn","initialState","pageIndex","pageSize","useFilters","useSortBy","useExpanded","usePagination","getTableProps","getTableBodyProps","headerGroups","page","prepareRow","visibleColumns","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","state","generateSortingIndicator","isSorted","isSortedDesc","Table","bordered","hover","responsive","headerGroup","getHeaderGroupProps","getHeaderProps","getSortByToggleProps","cells","cell","getCellProps","isExpanded","colSpan","getRowProps","key","Row","maxWidth","margin","textAlign","Col","md","min","max","defaultValue","Number","Modal","onClickOutside","onKeyDown","modalRef","buttonRef","closeModal","Component","component","ReactDOM","createPortal","tag","role","tabIndex","aria-modal","ref","aria-label","aria-labelledby","document","Trigger","triggerText","showModal","Container","isShown","setState","closeButton","focus","toggleScrollLock","submit","props","TriggerButton","keyCode","modal","contains","querySelector","classList","toggle","Fragment","this","n","FormSociete","nom","setNom","ville","setVille","rue","setRue","codePostal","setCodePostal","pays","setPays","CardContact","contact","co_nom","co_prenom","co_telPortable","co_telFixe","co_principal","CardText","color","toUpperCase","marginRight","AfficherExposant","societe","setListSociete","optionsDiscussion","setOptionsDiscussion","libelle","response","societes","updateDateContact","suivE_id","numeroRelance","put","suivE_dateContact","Header","Cell","getToggleRowExpandedProps","faEyeSlash","faInfoCircle","accessor","href","soc_id","original","suivi_exposants","suivE_commentaire","suivD_id","toString","disableSortBy","filter","as","backgroundColor","find","element","parseInt","selected","suivD_libelle","suivE_benevole","defaultChecked","checked","suivE_nbBenevoles","suivE_deplacement","reservations","res_facture","res_id","post","commentaire","suivE_dateContact1","suivE_dateContact2","suivE_dateContact3","contacts","soc_nom","soc_rue","soc_ville","soc_codePostal","columnCount","display","padding","Card","CardBody","CardTitle","RegisterForm","estAdmin","setEstAdmin","Check","inline","label","HandleAccounts","userList","setUserList","delete","FormLocalisation","loc_libelle","setLibelle","loc_prixTable","setPrixTable","loc_prixM2","setPrixM2","FormFestival","setDate","SimpleTableContainer","CardFestival","fes","updateDate","festivalDate","localisationList","setLocalList","setSelectedFestival","setEspaces","rowIndex","loc_id","new_priceTable","updatePriceTable","new_priceM2","updatePriceM2","Festivals","festivals","setListFestivals","allFestivals","updateDateFestival","new_date","a","fest","i","FormType","TypeJeu","gameTypeList","setGameTypeList","typJ_id","updateType","FormJeu","setTitle","minAge","setMinAge","duration","setDuration","maxNumPlayers","setMaxNumPlayers","minNumPlayers","setMinNumPlayers","rulesLink","setRulesLink","companyId","setCompanyId","gameTypeId","setGameTypeId","editeursList","setEditeursList","object","typJ_libelle","Jeux","listeJeux","setListeJeux","j_id","editeurId","typeId","updateGameTypeId","ageMin","updateageMin","nbjMin","updatenbjMin","j_nbMinJoueurs","nbjMax","updatenbjMax","duree","updateDuree","lienNotice","updateNotice","PrivateRoute","rest","redirection","pathname","from","FestivalGames","zoneList","setZoneList","result","suivJ_id","zo_id","zo_libelle","reservation","suivJ_prototype","suivJ_place","res_envoiDebut","suivJ_recu","suivJ_aRenvoyer","suivJ_renvoye","suivJ_dateSaisie","suivJ_tombola","suivJ_dotation","suivJ_nbJeuxRecus","suivJ_nbJeuxExposes","jeu","j_ageMin","j_nbMaxJoueurs","j_duree","j_lienNotice","CardLink","FormContact","prenom","setPrenom","telPortable","setTelPortable","telFixe","setTelFixe","fonction","setFonction","principal","setPrincipal","FormGameReservation","gameList","setGameList","setJ_id","validateForm","setValidateForm","j_titre","GameExhibitor","setReservationGames","ExhibitorMonitoring","idExposant","useParams","contactList","setContactList","name","setName","showCom","setShowCom","showNewContact","setShowNewContact","showAdress","setShowAdress","setSoc_ville","setSoc_rue","setSoc_codePostal","soc_pays","setSoc_pays","suivi","setSuivi","setReservation","setCommentaire","espaces","resaExist","setResaExist","CalculerPrix","esp_enTables","esp_qte","faCheckCircle","Accordion","eventKey","Body","co_mail","co_rue","co_codePostal","co_ville","co_pays","res_prixRetour","res_dateFacturation","res_paiement","res_datePaiement","esp_id","qte","prix","CalculerPrixTOT","step","res_prixNegocie","AfficherSocieteRole","fetchData","soc_estInactif","role_festival","rolF_estExposant","rolF_estEditeur","Reservation","listReservations","setListReservations","setListLocalisation","GameCard","game","marginLeft","AfficherEditeur","jeus","games","ZonesFestivals","Facturation","Routes","exact","path","TypeJeux","CustomFooter","faFacebook","faTwitter","faInstagram","faMapMarker","faPhone","faEnvelope","createContext","Date","Function","App","prochainFestival","setProchainFestival","isWhatever","Provider","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.852d2ec7.chunk.js","sourcesContent":["import jwt_decode from \"jwt-decode\";\nimport jwt from \"jsonwebtoken\";\n\nexport function isAdmin() {\n    const token = localStorage.getItem(\"userToken\");\n    return token ? jwt_decode(token).user_estAdmin : null;\n}\n\nexport function isLogin() {\n    const token = localStorage.getItem(\"userToken\");\n    if (token) {\n        return jwt.verify(token, \"secret\", (err, decoded) => {\n            return !err;\n        })\n\n    } else {\n        return false\n    }\n}\n\nexport function email(){\n    const token = localStorage.getItem(\"userToken\");\n    return token ? jwt_decode(token).user_email : null\n}\n\n","import {Container, Nav, Navbar, NavDropdown} from \"react-bootstrap\";\nimport {email, isAdmin, isLogin} from \"../../utils/utils\";\nimport Button from \"react-bootstrap/Button\";\nimport {useHistory} from \"react-router-dom\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {Link} from \"react-router-dom\"\n\nimport {\n    faUser,\n    faAddressBook,\n    faCalendarAlt,\n    faDice,\n    faClipboardList,\n    faFileInvoiceDollar,\n    faTh,\n    faShapes,\n    faTheaterMasks,\n    faChessKnight,\n    faUserTag\n} from \"@fortawesome/free-solid-svg-icons\";\nimport './CustomHeader.css'\nimport React, {useContext, useEffect, useState} from \"react\";\nimport Axios from \"axios\";\nimport Moment from \"moment\";\nimport {FestivalContext} from \"../../../App\";\n\n\nconst CustomHeader = () => {\n\n    const [dateFestivalCourant, setDateFestivalCourant] = useState(null);\n\n    const {selectedFestival} = useContext(FestivalContext)\n\n    const history = useHistory();\n\n    function logout() {\n        localStorage.removeItem(\"userToken\")\n        history.push(\"/\")\n        window.location.reload(false)\n    }\n\n    //méthode qui s'appelle au chargement de la page\n    useEffect(() => {\n\n        const fes_id = localStorage.getItem(\"currentFestival\");\n\n        Axios.get(`/server/festivals/${fes_id}`)\n            .then((res) => {\n                setDateFestivalCourant(res.data.festival.fes_date)\n            })\n\n\n    });\n\n\n    //mettre dans isAdmin les pages accecibles uniquement à l'admin\n//idem pour isLogin ---------------------------------- si on est connecté\n// à la fin les pages accéssibles à tous\n\n    return (\n        <div>\n            <header>\n                <Navbar collapseOnSelect fixed='top' expand='lg' bg='dark' variant='dark'>\n                    <Container>\n                        <Navbar.Toggle aria-controls='responsive-navbar-nav'/>\n                        <Navbar.Collapse id='responsive-navbar-nav'>\n                            {\n                                isLogin() ? (\n                                    <Nav>\n                                        <NavDropdown title={email()} id=\"who\">\n                                            <Link className=\"nav-link\" id=\"dropdownItem\" to='/update-password'>Changer\n                                                de mot de\n                                                passe\n                                            </Link>\n                                            <Button variant=\"link\" onClick={logout}>Se déconnecter</Button>\n                                        </NavDropdown>\n                                    </Nav>\n                                ) : (\n\n                                    <Nav>\n                                        <Link className=\"nav-link\" to='/login'>Se connecter</Link>\n                                    </Nav>\n                                )\n                            }\n                            {\n                                isLogin() ? (\n                                    <Nav>\n                                        <NavDropdown title=\"Paramètres\">\n                                            <Link  className=\"nav-link\"id =\"dropdownItem\" to='/type-jeux'>\n                                                <FontAwesomeIcon className=\"faicon\" icon={faShapes}/>\n                                                Types de jeux\n                                            </Link>\n                                            <Link  className=\"nav-link\" id=\"dropdownItem\" to='/jeux'>\n                                                <FontAwesomeIcon className=\"faicon\" icon={faChessKnight}/>\n                                                Jeux\n                                            </Link>\n\n                                            {\n                                                isAdmin() ? (\n                                                    <Link className=\"nav-link\" id=\"dropdownItem\" to='/handle-accounts'>\n                                                        <FontAwesomeIcon className=\"faicon\" icon={faUser}/>\n                                                        Gérer les comptes\n                                                    </Link>\n\n                                                ) : null\n                                            }\n\n                                        </NavDropdown>\n                                        <Nav>\n                                            <div id=\"fesC\">\n                                                <FontAwesomeIcon className=\"faicon\" icon={faTheaterMasks}/> Festival\n                                                courant:\n                                            </div>\n\n                                            <NavDropdown title={Moment(selectedFestival.fes_date).format('DD/MM/YYYY')}\n                                                         id=\"who\">\n                                                <Link  className=\"nav-link\" id=\"dropdownItem\" to='/festivals'>\n                                                    <FontAwesomeIcon className=\"faicon\" icon={faCalendarAlt}/>\n                                                    Festivals\n                                                </Link>\n                                            </NavDropdown>\n\n                                            <Link className=\"nav-link\" to='/reservations'>\n                                                <FontAwesomeIcon className=\"faicon\" icon={faClipboardList}/>\n                                                Reservations\n                                            </Link>\n                                            {\n                                                isAdmin() ? (\n                                                    <Link  className=\"nav-link\" to='/facturation'>\n                                                        <FontAwesomeIcon className=\"faicon\" icon={faFileInvoiceDollar}/>\n                                                        Factures\n                                                    </Link>\n                                                ) : null\n                                            }\n                                        </Nav>\n                                    </Nav>\n                                ) : null\n                            }\n\n\n                            <Nav>\n\n                                {\n                                    isAdmin() ? (\n\n                                        <NavDropdown title={\"Gestion sociétés\"} id=\"who\">\n\n                                            <Link className=\"nav-link\" to='/exposants' id=\"dropdownItem\">\n                                                <FontAwesomeIcon className=\"faicon\" icon={faAddressBook}/>\n                                                Exposants\n                                            </Link>\n\n                                            <Link className=\"nav-link\" to='/societes' id=\"dropdownItem\">\n                                                <FontAwesomeIcon className=\"faicon\" icon={faUserTag}/>\n                                                Rôles Societes\n                                            </Link>\n                                        </NavDropdown>\n                                    ) : null\n                                }\n\n\n                                <Link className=\"nav-link\" to='/festival-games'>\n                                    <FontAwesomeIcon className=\"faicon\" icon={faDice}/>\n                                    Jeux festival\n                                </Link>\n                                <Link className=\"nav-link\" to='/festival-zones'>\n                                    <FontAwesomeIcon className=\"faicon\" icon={faTh}/>\n                                    Zones festival\n                                </Link>\n                                <Link className=\"nav-link\" to='/editeurs'>\n                                    <FontAwesomeIcon className=\"faicon\" icon={faAddressBook}/>\n                                    Editeurs\n                                </Link>\n                            </Nav>\n\n                        </Navbar.Collapse>\n                    </Container>\n                </Navbar>\n            </header>\n        </div>\n    )\n}\n\nexport default CustomHeader\n","export default __webpack_public_path__ + \"static/media/logo.b3125042.png\";","import logo from \"../../../assets/img/logo.png\";\nimport React, {useEffect, useState} from \"react\";\nimport Axios from \"axios\";\nimport Moment from 'moment';\nimport './home.css';\n\nexport default function Home() {\n    const [dateProchainFestival, setdateProchainFestival] = useState(null);\n\n    //méthode qui s'appelle au chargement de la page\n    useEffect(() => {\n        Axios.get(\"/server/festivals/closest\")\n            .then((res) => {\n                console.log(\"BONJOUR FESTIVAL\", res)\n                localStorage.setItem(\"currentFestival\", res.data.closestFestival[0].fes_id);\n                setdateProchainFestival(res.data.closestFestival[0].fes_date);\n            })\n\n\n    });\n\n    return (\n\n        <>\n            <body className=\"home\">\n\n            <div className=\"flex-container\">\n                <div className=\"flex-item\">\n                    <img id=\"image\" src={logo}/>\n                </div>\n                <div className=\"flex-item\">\n                    <h1>SORTONS JOUER !</h1>\n                    <h2> RENDEZ VOUS</h2>\n                    <h3>\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\"\n                             className=\"bi bi-caret-right-fill\" viewBox=\"0 0 16 16\">\n                            <path\n                                d=\"M12.14 8.753l-5.482 4.796c-.646.566-1.658.106-1.658-.753V3.204a1 1 0 0 1 1.659-.753l5.48 4.796a1 1 0 0 1 0 1.506z\"/>\n                        </svg>\n                        {Moment(dateProchainFestival).format('DD/MM/YYYY')}\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\"\n                             className=\"bi bi-caret-left-fill\" viewBox=\"0 0 16 16\">\n                            <path\n                                d=\"M3.86 8.753l5.482 4.796c.646.566 1.658.106 1.658-.753V3.204a1 1 0 0 0-1.659-.753l-5.48 4.796a1 1 0 0 0 0 1.506z\"/>\n                        </svg>\n                    </h3>\n                    <p id=\"phraseGratuite\">Entrée libre et gratuite</p>\n                </div>\n            </div>\n\n            </body>\n        </>\n    );\n}\n","import React, {useState} from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport FormText from \"react-bootstrap/FormText\";\n\nimport {useHistory} from \"react-router\"\nimport \"./login.css\";\nimport logo from \"../../../assets/img/logo.png\";\n\n\n\n\nconst Login = () => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [errortext, setErrortext] = useState(\"\");\n\n    const history = useHistory();\n\n    function validateForm() {\n        return email.length > 0 && password.length > 0;\n    }\n\n    function handleSubmit(event) {\n        setErrortext(\"\")\n\n        //variable à envoyer au back sous format JSON\n        let dataToSend = JSON.stringify({\n            email,\n            password,\n        });\n\n        //appel au back\n        fetch(`/server/login`, {\n            method: \"POST\",\n            body: dataToSend,\n            headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n            },\n        }).then((res) => {\n            // If response was successful parse the json and dispatch an update\n            if (res.ok) {\n                res.json().then((responseJson) => {\n                    if (responseJson.token) {\n                        //stock le token en local\n                        //localStorage.getItem(\"userToken\") pour y acceder\n                        localStorage.setItem(\"userToken\", responseJson.token)\n                        history.push(\"/festivals\")\n                        window.location.reload(false)\n                    } else {\n                        setErrortext(responseJson.error);\n\n                    }\n                })\n            }\n        });\n\n        event.preventDefault();\n\n    }\n\n    return (\n        <div className=\"EspaceFooter\">\n            <img id=\"logo\" src={logo}/>\n            <div className=\"Login\">\n                <Form onSubmit={handleSubmit}>\n                    {/* equivalent du if/else */}\n                    {errortext !== \"\" ? (\n                        <FormText id=\"errorLabel\">{errortext}</FormText>\n                    ) : null}\n                    <Form.Group size=\"lg\" controlId=\"email\">\n                        <Form.Label>Email</Form.Label>\n                        <Form.Control\n                            autoFocus\n                            type=\"email\"\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                        />\n                    </Form.Group>\n                    <Form.Group size=\"lg\" controlId=\"password\">\n                        <Form.Label>Mot de passe</Form.Label>\n                        <Form.Control\n                            type=\"password\"\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                        />\n                    </Form.Group>\n                    <Button id=\"btn-connexion\" block size=\"lg\" type=\"submit\" disabled={!validateForm()}>\n                        Connexion\n                    </Button>\n\n                </Form>\n            </div>\n        </div>\n    );\n}\n\nexport default Login\n","import React, {useEffect, useState} from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport FormText from \"react-bootstrap/FormText\";\nimport Alert from 'react-bootstrap/Alert';\nimport logo from \"../../../assets/img/logo.png\";\nimport {email} from \"../../utils/utils\";\n\nimport './update-password.css'\n\nexport default function UpdatePassword(){\n    const [olderPassword, setOlderPassword] = useState(\"\");\n    const [newPassword, setNewPassword] = useState(\"\");\n    const [confirmedPassword, setConfirmedPassword] = useState(\"\");\n    const [errortext, setErrortext] = useState(\"\");\n    const [show, setShow] = useState(false)\n\n    function validateForm() {\n        return olderPassword.length > 0 && newPassword.length > 0 && confirmedPassword.length > 0;\n    }\n\n    function handleSubmit(event) {\n\n        if(newPassword != confirmedPassword){\n            setErrortext(\"Les deux mots de passe doivent être identiques\");\n        }else{\n            setErrortext(\"\");\n            //variable à envoyer au back sous format JSON\n            let dataToSend = JSON.stringify({\n                newPassword,\n                olderPassword\n            });\n            //appel au back\n            fetch(`/server/update-password/${email()}`, {\n                method: \"POST\",\n                body: dataToSend,\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                },\n            }).then((res) => {\n\n                // If response was successful parse the json and dispatch an update\n                if (res.ok) {\n                    res.json().then((responseJson) => {\n                        if (responseJson.success) {\n                            setShow(true)\n                        } else {\n                            setErrortext(responseJson.error);\n                        }\n                    })\n                }\n            });\n            event.preventDefault();\n        }\n\n    }\n    return(\n        <div className=\"EspaceFooter\">\n            <Alert id=\"alertSucces\" variant=\"success\" show={show}>\n                Mot de passe modifié avec succès!\n            </Alert>\n            <img id=\"logo\" src={logo} />\n            <div className=\"Password\">\n                <Form onSubmit={handleSubmit}>\n                    {/* equivalent du if/else */}\n                    {errortext !== \"\" ? (\n                        <FormText id=\"errorLabel\">{errortext}</FormText>\n                    ) : null}\n                    <Form.Group size=\"lg\" controlId=\"oldPassword\">\n                        <Form.Label>Ancien mot de passe</Form.Label>\n                        <Form.Control\n                            autoFocus\n                            type=\"password\"\n                            value={olderPassword}\n                            onChange={(e) => setOlderPassword(e.target.value)}\n                        />\n                    </Form.Group>\n                    <Form.Group size=\"lg\" controlId=\"newPassword\">\n                        <Form.Label>Nouveau mot de passe</Form.Label>\n                        <Form.Control\n                            type=\"password\"\n                            value={newPassword}\n                            onChange={(e) => setNewPassword(e.target.value)}\n                        />\n                    </Form.Group>\n                    <Form.Group size=\"lg\" controlId=\"confirmedPassword\">\n                        <Form.Label>Confirmer le nouveau mot de passe</Form.Label>\n                        <Form.Control\n                            type=\"password\"\n                            value={confirmedPassword}\n                            onChange={(e) => setConfirmedPassword(e.target.value)}\n                        />\n                    </Form.Group>\n                    <Button id=\"btn-validate\" block size=\"lg\" type=\"submit\" disabled={!validateForm()}>\n                        Valider\n                    </Button>\n                </Form>\n            </div>\n\n        </div>\n    );\n}","import React from 'react';\nimport {Input, CustomInput} from 'reactstrap';\n\nexport const Filter = ({column}) => {\n    return (\n        <div style={{marginTop: 5}}>\n            {column.canFilter && column.render('Filter')}\n        </div>\n    );\n};\n\n/**\n * Default filter --> Search menu\n *\n * @param filterValue\n * @param setFilter\n * @param length\n * @returns {JSX.Element}\n * @constructor\n */\nexport const DefaultColumnFilter = (\n    {\n        column: {\n            filterValue,\n            setFilter,\n            preFilteredRows: {length},\n        },\n    }) => {\n    return (\n        <Input\n            value={filterValue || ''}\n            onChange={(e) => {\n                setFilter(e.target.value || undefined);\n            }}\n            placeholder={`Rechercher...`}\n            //style={{width: 'auto'}}\n        />\n    );\n};\n\n/**\n * Type selector filter\n *        --> Selection between different types in column\n *\n * @param filterValue\n * @param setFilter\n * @param preFilteredRows\n * @param id\n * @returns {JSX.Element}\n * @constructor\n */\nexport const SelectColumnFilter = (\n    {\n        column: {filterValue, setFilter, preFilteredRows, id},\n    }) => {\n    const options = React.useMemo(() => {\n        const options = new Set();\n        preFilteredRows.forEach((row) => {\n            options.add(row.values[id]);\n        });\n        return [...options.values()];\n    }, [id, preFilteredRows]);\n\n    return (\n        <CustomInput\n            id='custom-select'\n            type='select'\n            value={filterValue}\n            //style={{width: 'auto'}}\n            onChange={(e) => {\n                setFilter(e.target.value || undefined);\n            }}\n        >\n            <option value=''>Tous</option>\n            {options.map((option, index) => (\n                <option key={option} value={option}> {option} </option>\n            ))}\n        </CustomInput>\n    );\n};\n","import React, {Fragment} from 'react';\nimport './TableContainer.css'\nimport {\n    useTable,\n    useSortBy,\n    useFilters,\n    useExpanded,\n    usePagination,\n} from 'react-table';\nimport {Table, Row, Col, Button, Input, CustomInput} from 'reactstrap';\nimport {Filter, DefaultColumnFilter} from './Filters';\n\nconst TableContainer = ({columns, data, renderRowSubComponent}) => {\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        page,\n        prepareRow,\n        visibleColumns,\n        canPreviousPage,\n        canNextPage,\n        pageOptions,\n        pageCount,\n        gotoPage,\n        nextPage,\n        previousPage,\n        setPageSize,\n        state: {pageIndex, pageSize},\n    } = useTable(\n        {\n            columns,\n            data,\n            defaultColumn: {Filter: DefaultColumnFilter},\n            initialState: {pageIndex: 0, pageSize: 10},\n        },\n        useFilters,\n        useSortBy,\n        useExpanded,\n        usePagination\n    );\n\n    const generateSortingIndicator = (column) => {\n        return column.isSorted ? (column.isSortedDesc ? ' 🔽' : ' 🔼') : '';\n    };\n\n    const onChangeInSelect = (event) => {\n        setPageSize(Number(event.target.value));\n    };\n\n    const onChangeInInput = (event) => {\n        const page = event.target.value ? Number(event.target.value) - 1 : 0;\n        gotoPage(page);\n    };\n\n    return (\n        <Fragment>\n            <Table bordered hover {...getTableProps()} responsive>\n\n                {/* En-tete du tableau (avec les menu de recherches/tris)*/}\n                <thead>\n                {headerGroups.map((headerGroup) => (\n                    <tr  {...headerGroup.getHeaderGroupProps()}>\n                        {headerGroup.headers.map((column) => (\n                            <th {...column.getHeaderProps()}>\n                                <div {...column.getSortByToggleProps()}>\n                                    {column.render('Header')}\n                                    {generateSortingIndicator(column)}\n                                </div>\n                                <Filter column={column}/>\n                            </th>\n                        ))}\n                    </tr>\n                ))}\n                </thead>\n\n\n                {/* Affichage des données*/}\n                <tbody {...getTableBodyProps()} style={{width: 'auto'}}>\n                {page.map((row) => {\n                    prepareRow(row);\n                    return (\n                        <Fragment key={row.getRowProps().key}>\n\n                            {/* Contenu pour chaque ligne*/}\n                            <tr >\n                                {row.cells.map((cell) => {\n                                    return (\n                                        <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                                    );\n                                })}\n                            </tr>\n\n                            {/* Affichage du contenu supplémentaire (details) */}\n                            {row.isExpanded && (\n                                <tr>\n                                    <td colSpan={visibleColumns.length}>\n                                        {renderRowSubComponent(row)}\n                                    </td>\n                                </tr>\n                            )}\n\n                        </Fragment>\n                    );\n                })}\n                </tbody>\n\n\n            </Table>\n\n\n            {/* Bas du tableau (changement de pages)*/}\n            <Row style={{maxWidth: 1000, margin: '0 auto', textAlign: 'center'}}>\n                {/* Most Left button --> Go back to page 0*/}\n\n                {/* go back buttons*/}\n                <Col md={3}>\n                    <Button\n                        id=\"pagination\"\n                        onClick={() => gotoPage(0)}\n                        disabled={!canPreviousPage}\n                    >\n                        {'<<'}\n                    </Button>\n\n                    {/* Left button --> Go to previous page*/}\n                    <Button\n                        id=\"pagination\"\n                        onClick={previousPage}\n                        disabled={!canPreviousPage}\n                    >\n                        {'<'}\n                    </Button>\n                </Col>\n\n\n                {/* Display the current page number*/}\n                <Col md={2} style={{marginTop: 7}}>\n                    Page{' '}\n                    <strong>\n                        {pageIndex + 1} sur {pageOptions.length}\n                    </strong>\n                </Col>\n\n                {/* TextField for selecting the page number*/}\n                <Col md={2}>\n                    <Input\n                        type='number'\n                        min={1}\n                        style={{width: 70}}\n                        max={pageOptions.length}\n                        defaultValue={pageIndex + 1}\n                        onChange={onChangeInInput}\n                    />\n                </Col>\n\n                {/* Slector for changing the number of items displayed per page */}\n                <Col md={2}>\n                    <CustomInput\n                        type='select'\n                        value={pageSize}\n                        id={\"selectionPage\"}\n                        onChange={onChangeInSelect}\n                    >\n                        {[10, 20, 30, 40, 50].map((pageSize) => (\n                            <option key={pageSize} value={pageSize}>\n                                Afficher {pageSize}\n                            </option>\n                        ))}\n                    </CustomInput>\n                </Col>\n\n\n                {/*Go forward buttons*/}\n                <Col md={3}>\n                    {/* Right button --> Go to next page*/}\n                    <Button id=\"pagination\" onClick={nextPage} disabled={!canNextPage}>\n                        {'>'}\n                    </Button>\n\n                    {/* Go to last page*/}\n                    <Button\n                        id=\"pagination\"\n                        onClick={() => gotoPage(pageCount - 1)}\n                        disabled={!canNextPage}\n                    >\n                        {'>>'}\n                    </Button>\n                </Col>\n            </Row>\n        </Fragment>\n    );\n};\n\nexport default TableContainer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport FocusTrap from 'focus-trap-react';\n\n\nexport const Modal = ({\n                          onClickOutside,\n                          onKeyDown,\n                          modalRef,\n                          buttonRef,\n                          closeModal,\n                          onSubmit,\n                          component: Component\n                      }) => {\n\n    return ReactDOM.createPortal(\n        <FocusTrap>\n            <aside\n                tag=\"aside\"\n                role=\"dialog\"\n                tabIndex=\"-1\"\n                aria-modal=\"true\"\n                className=\"modal-cover\"\n                onClick={onClickOutside}\n                onKeyDown={onKeyDown}\n            >\n                <div className=\"modal-area\" ref={modalRef}>\n                    <button\n                        ref={buttonRef}\n                        aria-label=\"Close Modal\"\n                        aria-labelledby=\"close-modal\"\n                        className=\"_modal-close\"\n                        onClick={closeModal}\n                    >\n            <span id=\"close-modal\" className=\"_hide-visual\">\n              Close\n            </span>\n                        <svg className=\"_modal-close-icon\" viewBox=\"0 0 40 40\">\n                            <path d=\"M 10,10 L 30,30 M 30,10 L 10,30\"/>\n                        </svg>\n                    </button>\n\n                    <div className=\"modal-body\">\n                        <Component onSubmit={onSubmit}/>\n                    </div>\n\n\n                </div>\n            </aside>\n        </FocusTrap>,\n        document.body\n    );\n};\n","import React from 'react';\nimport Button from \"react-bootstrap/Button\";\nimport './triggerButton.css'\n\n\nconst Trigger = ({ triggerText, buttonRef, showModal }) => {\n    return (\n        <Button id='buttonModal'\n            ref={buttonRef}\n            onClick={showModal}\n        >\n            {triggerText}\n        </Button>\n    );\n};\nexport default Trigger;","import React, {Component} from 'react';\nimport {Modal} from './modal';\nimport TriggerButton from './triggerButton';\n\nexport class Container extends Component {\n    state = {isShown: false};\n\n    showModal = () => {\n        this.setState({isShown: true}, () => {\n            this.closeButton.focus();\n        });\n        this.toggleScrollLock();\n    };\n\n    submit = (event) => {\n        console.log(this.props)\n        this.closeModal();\n        this.props.onSubmit(event);\n    }\n\n    closeModal = () => {\n        this.setState({isShown: false});\n        this.TriggerButton.focus();\n        this.toggleScrollLock();\n    };\n    onKeyDown = (event) => {\n        if (event.keyCode === 27) {\n            this.closeModal();\n        }\n    };\n    onClickOutside = (event) => {\n        if (this.modal && this.modal.contains(event.target)) return;\n        this.closeModal();\n    };\n\n    toggleScrollLock = () => {\n        document.querySelector('html').classList.toggle('scroll-lock');\n    };\n\n    render() {\n        return (\n            <React.Fragment>\n                <TriggerButton\n                    showModal={this.showModal}\n                    buttonRef={(n) => (this.TriggerButton = n)}\n                    triggerText={this.props.triggerText}\n                />\n                {this.state.isShown ? (\n                    <Modal\n                        onSubmit={this.submit}\n                        modalRef={(n) => (this.modal = n)}\n                        buttonRef={(n) => (this.closeButton = n)}\n                        closeModal={this.closeModal}\n                        onKeyDown={this.onKeyDown}\n                        onClickOutside={this.onClickOutside}\n                        component={this.props.component}\n                    />\n                ) : null}\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Container;\n\n","import Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport React, {useState} from \"react\";\n\nconst FormSociete = ({onSubmit}) => {\n\n    const [nom, setNom] = useState(\"\");\n    const [ville, setVille] = useState(\"\");\n    const [rue, setRue] = useState(\"\");\n    const [codePostal, setCodePostal] = useState(\"\");\n    const [pays, setPays] = useState(\"\");\n\n\n    function validateForm() {\n        return nom.length > 0;\n    }\n\n    return (\n        <Form onSubmit={onSubmit}>\n            <h4 id=\"titleGameForm\">Informations societe</h4>\n\n            <Form.Group size=\"lg\" controlId=\"nom\">\n                <Form.Label>Nom*</Form.Label>\n                <Form.Control autoFocus value={nom} onChange={(e) => setNom(e.target.value)}/>\n            </Form.Group>\n            <Form.Group size=\"lg\" controlId=\"ville\">\n                <Form.Label>Ville</Form.Label>\n                <Form.Control autoFocus value={ville} onChange={(e) => setVille(e.target.value)}/>\n            </Form.Group>\n            <Form.Group size=\"lg\" controlId=\"rue\">\n                <Form.Label>Rue</Form.Label>\n                <Form.Control autoFocus value={rue} onChange={(e) => setRue(e.target.value)}/>\n            </Form.Group>\n            <Form.Group size=\"lg\" controlId=\"codePostal\">\n                <Form.Label>Code Postal</Form.Label>\n                <Form.Control autoFocus value={codePostal} onChange={(e) => setCodePostal(e.target.value)}/>\n            </Form.Group>\n            <Form.Group size=\"lg\" controlId=\"pays\">\n                <Form.Label>Pays</Form.Label>\n                <Form.Control autoFocus value={pays} onChange={(e) => setPays(e.target.value)}/>\n            </Form.Group>\n\n            <p>* Champ obligatoire</p>\n            <div className=\"form-group\">\n                <Button id=\"btn-formGame\" block size=\"lg\" type=\"submit\" disabled={!validateForm()}>\n                    Submit\n                </Button>\n            </div>\n\n        </Form>\n    )\n}\n\nexport default FormSociete\n","import {CardBody, CardText} from \"reactstrap\";\n\nconst CardContact = (contact, ...res) => {\n\n    const {\n        co_nom,\n        co_prenom,\n        co_telPortable,\n        co_telFixe,\n        co_principal\n    } = contact.props\n\n    return (\n        <div>\n                <CardText style={{color: co_principal ? \"red\" : \"default\"}}>\n                    {co_nom.toUpperCase()} {co_prenom}\n                    <br/>\n                    <span style={{marginRight: '1rem'}}>\n                    Portable : {co_telPortable}\n                </span>\n                    <span>\n                    Fixe : {co_telFixe}\n                </span>\n                </CardText>\n        </div>\n    );\n}\n\nexport default CardContact;\n","import React, {useEffect, useState, useMemo} from \"react\";\nimport Axios from \"axios\"\n\nimport TableContainer from \"../../components/tables/TableContainer\";\nimport {SelectColumnFilter} from \"../../components/tables/Filters\";\nimport {Container} from \"../../components/ModalForm/container\";\nimport FormSociete from \"./formSociete\";\nimport CardContact from \"../../components/contact/CardContact\";\n\nimport './AfficherSociete.css'\n\nimport {Card, Form, Button} from \"react-bootstrap\";\nimport {CardBody, CardText, CardTitle} from \"reactstrap\";\n\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faAddressBook, faEyeSlash, faInfoCircle} from \"@fortawesome/free-solid-svg-icons\";\nimport {useHistory} from \"react-router-dom\";\nimport {isLogin} from \"../../utils/utils\";\n\nexport default function AfficherExposant() {\n\n    const [societe, setListSociete] = useState([])\n    const [optionsDiscussion, setOptionsDiscussion] = useState([])\n\n    const history = useHistory()\n\n\n    const options = [\n        {id: 1, libelle: \"Absent\", color: \"rgb(200,56,56)\"},\n        {id: 2, libelle: \"Présence confirmée\", color: \"rgb(57,171,57)\"},\n        {id: 3, libelle: \"En discussion\", color: \"rgb(204, 255, 51)\"},\n        {id: 4, libelle: \"Présent (liste jeux demandée)\", color: \"rgb(57,171,57)\"},\n        {id: 5, libelle: \"Considéré absent\", color: \"rgb(255, 165, 0)\"},\n        {id: 6, libelle: \"Présent via distributeur\", color: \"rgb(57,171,57)\"},\n        {id: 7, libelle: \"Présent (liste jeux reçus)\", color: \"rgb(57,171,57)\"},\n        {id: 8, libelle: \"Non contacté\", color: \"rgb(212,226,234)\"}\n    ]\n\n\n    useEffect(() => {\n        Axios.get(`/server/festivals/affichageExposant/${localStorage.getItem(\"currentFestival\")}`)\n            .then((response) => {\n                setListSociete(response.data[0].societes)\n                console.log(response.data[0].societes)\n            })\n    }, [])\n\n    useEffect(() => {\n        Axios.get(\"/server/suiviExposant/getDiscussions\")\n            .then((response) => {\n                setOptionsDiscussion(response.data)\n                console.log(\"DISC\", response.data)\n            });\n    }, [])\n\n\n    const updateDateContact = (suivE_id, value, numeroRelance) => {\n        console.log(\"DATA\", suivE_id, numeroRelance)\n\n        Axios.put(`/server/suiviExposant/updateDateContact/${numeroRelance}`, {\n            suivE_id: suivE_id,\n            suivE_dateContact: value\n        })\n    }\n\n    const updateStatusFacture = (data, value) => {\n\n        Axios.put(\"/server/reservations/updateReservationFacture\", {\n            res_id: data.res_id, //row id=0 <==> soc_id = 1 --> d'où le +1\n            res_facture: value //'true' or 'false'\n        })\n    }\n\n    const updateStatusBenevole = (data, value) => {\n        Axios.put(\"/server/suiviExposant/updateBenevole\", {\n            suivE_id: data.suivE_id,\n            suivE_benevole: value\n        })\n    }\n\n    const updateStatusSeDeplace = (data, value) => {\n        console.log(data.suivE_id)\n        Axios.put(\"/server/suiviExposant/updateSeDeplace\", {\n            suivE_id: data.suivE_id,\n            suivE_deplacement: value\n        })\n    }\n\n    const updateNbBenevoles = (data, value) => {\n        Axios.put(\"/server/suiviExposant/updateNbBenevole\", {\n            suivE_id: data.suivE_id,\n            suivE_nbBenevoles: value\n        })\n    }\n\n\n    const updateStatusWorkflow = (data, value) => {\n\n        Axios.put(\"/server/suiviExposant/updateWorkflow\", {\n            suivE_id: data.suivE_id,\n            suivD_id: value\n        }).then((res) => {\n            window.location.reload()\n        })\n\n    }\n\n    const setAllAbsent = () => {\n        Axios.put(\"/server/suiviExposant/setAllAbsent\").then(\n            (response) => {\n                console.log(\"NOMBRE CONSIDERE ABS\", response)\n            }\n        )\n\n    }\n\n    const goToExhibitorMonitoring = (soc_id) => {\n        history.push('/exhibitor-monitoring/' + soc_id);\n        window.location.reload(false)\n\n    }\n\n\n    /**\n     * This method is declaring all the columns for the table\n     *\n     * @type {[{Header: (function(): null), id: string, Cell: (function({row: *}))}, {Header: string, accessor: string}, {filter: string, Header: string, Filter: (function({column: {filterValue: *, setFilter: *, preFilteredRows: *, id?: *}}): *), accessor: (function(*): string), id: string, disableSortBy: boolean, Cell: (function(*))}]}\n     */\n    const columns = useMemo(() => [\n            {\n                //This column is used for displaying more/less details\n                Header: () => null,\n                id: 'expander', // 'id' is required\n\n                Cell: ({row}) => (\n                    <span {...row.getToggleRowExpandedProps()}>\n                        {row.isExpanded ? <FontAwesomeIcon className=\"faiconDetail\" icon={faEyeSlash}/> :\n                            <FontAwesomeIcon className=\"faiconDetail\" icon={faInfoCircle}/>}\n                    </span>\n                ),\n            },\n            {\n                Header: \"Nom\",\n                accessor: \"soc_nom\",\n\n                Cell: row => {\n                    return (\n                        <a href=\"#\" onClick={() => goToExhibitorMonitoring(row.row.original.soc_id)}>{row.value}</a>\n                    )\n                }\n            },\n            {\n                Header: \"Commentaire\",\n                accessor: d => d,\n\n                Cell: row => {\n                    return (\n                        <Form onSubmit={(e) => onSubmit(e, row.value)}>\n                            <input type={\"textarea\"}\n                                   id={\"commentaire\"}\n                                   defaultValue={row.value.suivi_exposants.length === 0 ? \"\" : row.value.suivi_exposants[0].suivE_commentaire}\n                                   disabled={!isLogin()}>\n                            </input>\n                            <Button id={\"btn-commentaire\"} type={\"submit\"}> Valider </Button>\n                        </Form>\n                    )\n                }\n            },\n\n            {\n                Header: \"WorkFlow\",\n                accessor: d => d.suivi_exposants.length === 0 ? null : d.suivi_exposants[0].suivD_id.toString(), //required cast from boolean to string\n\n                disableSortBy: true,\n                Filter: SelectColumnFilter,\n                filter: 'equals',\n\n                Cell: row => {\n                    return (\n                        <div>\n                            <Form.Control as={\"select\"}\n                                          onChange={(e) => updateStatusWorkflow(row.row.original.suivi_exposants[0], e.target.value)}\n                                          style={{backgroundColor: row.value == null ? 'default' : options.find(element => element.id === parseInt(row.value)).color}}>\n                                {\n                                    optionsDiscussion.map((option) =>\n                                        <option value={option.suivD_id}\n                                                selected={option.suivD_id === parseInt(row.value)}\n                                                key={option.suivD_id}\n                                                style={{backgroundColor: options.find(element => element.id === parseInt(option.suivD_id)).color}}>\n                                            {option.suivD_libelle}\n                                        </option>\n                                    )\n                                }\n                            </Form.Control>\n                        </div>\n                    )\n                }\n\n            },\n            /*\n                {\n                    id: \"espaceQte\",\n                    Header: \"Tables\",\n                    accessor: d => d.reservations.length == 0 ? \"NULL\" : String(`${d.reservations[0].espace.esp_qte}` + ' ' + `${d.reservations[0].espace.esp_enTables == 0 ? \"m²\" : \"Tables\"}`), //required cast from boolea to string\n                },\n                */\n            {\n                id: \"benevoles\",\n                Header: \"Bénévoles\",\n                accessor: d => d.suivi_exposants.length == 0 ? null : d.suivi_exposants[0].suivE_benevole.toString(), //required cast from boolean to string\n\n                //Allows column to be sorted depending on all content type (true/false)\n                disableSortBy: true,\n                Filter: SelectColumnFilter,\n                filter: 'equals',\n\n                Cell: row => {\n                    return (\n                        <div style={{'textAlign': 'center'}}>\n                            <input\n                                type=\"checkbox\"\n                                disabled={row.value == null}\n                                defaultChecked={(row.value == null || row.value == 'false') ? false : true}\n                                onChange={(event) => updateStatusBenevole(row.row.original.suivi_exposants[0], event.target.checked ? 1 : 0)}\n                            />\n                        </div>)\n                },\n            },\n\n            {\n                Header: \"Nb bénvoles\",\n                accessor: d => d.suivi_exposants.length == 0 ? null : d.suivi_exposants[0].suivE_nbBenevoles,\n\n                Cell: row => {\n                    return (\n                        <div style={{'textAlign': 'center'}}>\n                            <input\n                                type=\"number\"\n                                disabled={row.value == null}\n                                defaultValue={row.value}\n                                onChange={(event) => updateNbBenevoles(row.row.original.suivi_exposants[0], event.target.value)}\n                            />\n                        </div>)\n                },\n\n            },\n            {\n                Header: \"Se deplace\",\n                accessor: d => d.suivi_exposants.length == 0 ? null : d.suivi_exposants[0].suivE_deplacement.toString(),\n\n                disableSortBy: true,\n                Filter: SelectColumnFilter,\n                filter: 'equals',\n\n                Cell: row => {\n                    return (\n                        <div style={{'textAlign': 'center'}}>\n                            <input\n                                type=\"checkbox\"\n                                disabled={row.value == null}\n                                defaultChecked={(row.value == null || row.value == 'false') ? false : true}\n                                onChange={(event) => updateStatusSeDeplace(row.row.original.suivi_exposants[0], event.target.checked ? 1 : 0)}\n                            />\n                        </div>)\n                },\n\n\n            },\n            {\n                id: \"facture\",\n                Header: \"Facture\",\n                accessor: d => d.reservations.length == 0 ? null : d.reservations[0].res_facture, //required cast from boolean to string\n\n\n                //Allows column to be sorted depending on all content type (true/false)\n                disableSortBy: true,\n                Filter: SelectColumnFilter,\n                filter: 'equals',\n\n                Cell: row => {\n                    return (\n                        <div style={{'textAlign': 'center'}}>\n                            <input\n                                disabled={row.value == null ? false : row.value ? true : false}\n                                type=\"checkbox\"\n                                defaultChecked={(row.value == null || row.value == false) ? false : true}\n                                onChange={(event) => updateStatusFacture(row.row.original.reservations[0], event.target.checked ? 1 : 0)}\n                            />\n                        </div>)\n                },\n            },\n\n        ], [optionsDiscussion, societe]\n    )\n\n    /**\n     * This method is used to display more details for a given object\n     * It is actived when clicking on the first column for a specific row\n     *\n     * @param row\n     * @returns {JSX.Element}\n     */\n    const detailsExposant = (row) => {\n\n        let suivE_dateContact1 = null\n        let suivE_dateContact2 = null\n        let suivE_dateContact3 = null\n        let suivE_id = null\n\n        if (row.original.suivi_exposants.length != 0) {\n            suivE_dateContact1 = row.original.suivi_exposants[0].suivE_dateContact1;\n            suivE_dateContact2 = row.original.suivi_exposants[0].suivE_dateContact2;\n            suivE_dateContact3 = row.original.suivi_exposants[0].suivE_dateContact3;\n            suivE_id = row.original.suivi_exposants[0].suivE_id;\n\n        }\n\n        const contacts = row.original.contacts;\n\n        //Name of the attributes in a societe\n        const {\n            soc_nom,\n            soc_rue,\n            soc_ville,\n            soc_codePostal,\n            soc_id\n        } = row.original;\n\n        //Display the cards (more details)\n        return (\n            <div style={{columnCount: 2, display: 'flex', padding: '1rem'}}>\n                <Card style={{width: '50%', margin: '0 auto', marginRight: '1rem'}}>\n                    <CardBody>\n                        {\n                            console.log(\"SUIVE ID\", suivE_id)\n                        }\n                        <CardTitle>\n                            <strong>{`${soc_nom}`} </strong>\n                        </CardTitle>\n                        <CardText>\n                            <strong>Address : </strong>\n                            {`${soc_rue} ${soc_ville} - ${soc_codePostal}`}\n                        </CardText>\n                        <CardText>\n                            <strong>Date contact 1 </strong>\n                            <input type={'date'}\n                                   defaultValue={`${suivE_dateContact1}`}\n                                   onChange={(event) => updateDateContact(suivE_id, event.target.value, 1)}\n                            />\n                        </CardText>\n                        <CardText>\n                            <strong>Date contact 2 </strong>\n                            <input type={'date'}\n                                   defaultValue={`${suivE_dateContact2}`}\n                                   onChange={(event) => updateDateContact(suivE_id, event.target.value, 2)}\n                            />\n                        </CardText>\n                        <CardText>\n                            <strong>Date contact 3 </strong>\n                            <input type={'date'}\n                                   defaultValue={`${suivE_dateContact3}`}\n                                   onChange={(event) => updateDateContact(suivE_id, event.target.value, 3)}\n                            />\n                        </CardText>\n                    </CardBody>\n                </Card>\n\n\n                <Card style={{width: '50%', margin: '0 auto'}}>\n                    <CardBody>\n                        <CardTitle>\n                            <strong> Contacts </strong>\n                        </CardTitle>\n                        {\n                            contacts.map((contact) => {\n                                return (\n                                    <CardContact props={contact}/>\n                                )\n                            })\n                        }\n                    </CardBody>\n                </Card>\n            </div>\n        );\n    };\n\n    const onSubmit = (event, value) => {\n        event.preventDefault(true)\n        Axios.post(`/server/suiviExposant/${value.suivi_exposants[0].soc_id}/update-commentaire`, {\n            suivE_commentaire: event.target.commentaire.value,\n            fes_id: localStorage.getItem(\"currentFestival\")\n        })\n    }\n\n\n    /**\n     * Display the table\n     *\n     * required :\n     *      the columns set up above\n     *      the data (list of societes)\n     * optional :\n     *      {renderRowSubComponent} only if you want the ability to display more details\n     */\n    return (\n        <div style={{marginTop: `50px`}} className=\"EspaceFooter\">\n\n            <div id=\"titlePageJeux\">\n                <h1>\n                    <FontAwesomeIcon className=\"faicon\" icon={faAddressBook}/>\n                    Exposants\n                </h1>\n            </div>\n\n            <Button onClick={setAllAbsent}> Mettre tous les exposant absent </Button>\n            <TableContainer columns={columns} data={societe} renderRowSubComponent={detailsExposant}/>\n        </div>\n    )\n}\n\n","import Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport React, {useState} from \"react\";\n\n\nexport const RegisterForm = ({ onSubmit }) => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [estAdmin, setEstAdmin] = useState(false);\n\n    function validateForm() {\n        return email.length > 0 && password.length > 0;\n    }\n\n\n    return(\n\n        <Form onSubmit={onSubmit}>\n            <h4 id=\"titleGameForm\"> Créer un compte</h4>\n\n            <Form.Group size=\"lg\" controlId=\"email\">\n                <Form.Label>Email</Form.Label>\n                <Form.Control\n                    autoFocus\n                    type=\"email\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                />\n            </Form.Group>\n            <Form.Group size=\"lg\" controlId=\"password\">\n                <Form.Label>Mot de passe</Form.Label>\n                <Form.Control\n                    type=\"password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                />\n            </Form.Group>\n            <Form.Group size=\"lg\" controlId=\"role\">\n                <Form.Check inline label=\"admin\"  value={estAdmin} onChange={(e)=> setEstAdmin(e.target.checked)} />\n                <p>*Si cette case n'est pas coché, ce sera un compte organisateur.</p>\n            </Form.Group>\n            <div className=\"form-group\">\n            <Button id=\"btn-valider\" block size=\"lg\" type=\"submit\" disabled={!validateForm()}>\n                Créer le compte\n            </Button>\n            </div>\n        </Form>\n    );\n};\nexport default RegisterForm;","import React, {useEffect, useMemo, useState} from \"react\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faUser} from \"@fortawesome/free-solid-svg-icons\";\n\nimport './handle-accounts.css'\nimport Alert from \"react-bootstrap/Alert\";\nimport RegisterForm from \"./registerForm\"\nimport {Container} from \"../../components/ModalForm/container\";\nimport Axios from \"axios\";\nimport FormText from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\"\n\nimport TableContainer from \"../../components/tables/TableContainer\";\nimport {SelectColumnFilter} from \"../../components/tables/Filters\";\n\n\n\n\nexport default function HandleAccounts(){\n    const [errortext, setErrortext] = useState(\"\");\n    const [show, setShow] = useState(false)\n    const [userList,setUserList] = useState([]);\n\n    const onSubmit = (event) => {\n\n        //Ne pas oublier cette ligne!!!\n        event.preventDefault(event);\n\n\n        Axios.post(\"/server/register\", {\n            //récupérer les valeurs du formulaire\n            email: event.target.email.value,\n            password : event.target.password.value,\n            estAdmin : event.target.role.value,\n\n        }).then((res) => {\n            //afficher alert succes\n                    if (res.data.success) {\n                        //afficher message de réussite\n                        console.log(\"compte crée\")\n                        setShow(true)\n                    } else {\n                        setErrortext(res.data.error);\n                    }\n        })\n    };\n    //méthode qui s'appelle au chargement de la page\n    useEffect(() => {\n        //Récupérer les infos de tous les users\n        Axios.get(\"/server/allUsers\")\n            .then((res) => {\n                setUserList(res.data);\n            });\n\n    }, []);\n\n\n\n    const deleteUser = (data) => {\n\n        Axios.delete(`/server/delete-profile/${data.user_email}`)\n            .then(\n                //userList.splice(userList.indexOf(data),1)\n                window.location.reload(false)\n            )\n\n\n\n    }\n\n    const columns = useMemo(() => [\n        {\n            Header: \"User\",\n            accessor: \"user_email\"\n        },\n        {\n            Header: \"Admin\",\n            accessor: d => d.user_estAdmin != null ? d.user_estAdmin.toString() : null, //required cast from boolea to string\n\n            disableSortBy: true,\n            Filter: SelectColumnFilter,\n            filter: 'equals',\n\n        },\n        {\n            id: 'supprimer',\n\n            Cell: row => {\n                return (\n                    <div>\n                        <Button id=\"btndelete\" onClick={(e) => deleteUser(row.row.original)}>Supprimer</Button>\n                    </div>\n                    )\n            },\n\n\n        }\n        ], [userList])\n\n    return (\n        <div className=\"EspaceFooter\">\n            <div id=\"titlePageJeux\">\n                <h1>\n                    <FontAwesomeIcon className=\"faicon\" icon={faUser}/>\n                    Gérer les comptes\n                </h1>\n            </div>\n            <Alert id=\"alertSucces\" variant=\"success\" show={show}>\n                Compté crée avec succès!\n            </Alert>\n\n            {/* equivalent du if/else */}\n            {errortext !== \"\" ? (\n                <FormText id=\"errorLabel\">{errortext}</FormText>\n            ) : null}\n            <div id=\"btn-NewUser\">\n                <Container triggerText=\"Créer un nouveau compte\" onSubmit={onSubmit} component={RegisterForm}/>\n            </div>\n\n            <div style={{marginTop: `50px`}}>\n                <TableContainer columns={columns} data={userList}/>\n            </div>\n\n\n        </div>\n    );\n}\n","import React, {useEffect, useState} from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport {CardBody, CardText, CardTitle} from \"reactstrap\";\nimport Axios from \"axios\";\nimport NumberFormat from 'react-number-format';\nimport Moment from \"moment\";\nimport Form from \"react-bootstrap/Form\";\nimport Alert from \"react-bootstrap/Alert\";\nimport Button from \"react-bootstrap/Button\";\nimport FormText from \"react-bootstrap/FormText\";\n\nconst FormLocalisation = ({onSubmit}) => {\n    const [loc_libelle, setLibelle] = useState(\"\");\n    const [loc_prixTable, setPrixTable] = useState(0);\n    const [loc_prixM2, setPrixM2] = useState(0);\n\n    const [errortext, setErrortext] = useState(\"\");\n\n\n    function validateForm() {\n        return loc_libelle.length > 0;\n    }\n\n    return (\n        <div>\n            <div className=\"CreateFestival\">\n                <Form onSubmit={onSubmit}>\n                    {errortext !== \"\" ? (\n                        <FormText id=\"errorLabel\">{errortext}</FormText>\n                    ) : null}\n                    <h4 id=\"titleForm\">Création d'un espace</h4>\n                    <Form.Group size=\"lg\" controlId=\"loc_libelle\">\n                        <Form.Label>Nom de l'espace *</Form.Label>\n                        <Form.Control\n                            type=\"text\"\n                            value={loc_libelle}\n                            onChange={(e) => setLibelle(e.target.value)}\n                        />\n                    </Form.Group>\n                    <Form.Group size=\"lg\" controlId=\"loc_prixTable\">\n                        <Form.Label>Prix d'une table </Form.Label>\n                        <Form.Control\n                            type=\"text\"\n                            min=\"0\"\n                            value={loc_prixTable}\n                            onChange={(e) => setPrixTable(e.target.value)}\n                        />\n                    </Form.Group>\n                    <Form.Group size=\"lg\" controlId=\"loc_prixM2\">\n                        <Form.Label>Prix d'un m² </Form.Label>\n                        <Form.Control\n                            type=\"text\"\n                            min=\"0\"\n                            value={loc_prixM2}\n                            onChange={(e) => setPrixM2(e.target.value)}\n                        />\n                    </Form.Group>\n                    <p>* Champ obligatoire</p>\n                    <div className=\"form-group\">\n                        <Button id=\"btn-formFestival\" block size=\"lg\" type=\"submit\" disabled={!validateForm()}>\n                            Créer l'espace\n                        </Button>\n                    </div>\n                </Form>\n            </div>\n        </div>\n    );\n}\n\nexport default FormLocalisation;\n","import React, {useEffect, useState} from 'react';\nimport Alert from \"react-bootstrap/Alert\";\nimport Form from \"react-bootstrap/Form\";\nimport FormText from \"react-bootstrap/FormText\";\nimport {Input} from \"reactstrap\";\nimport Button from \"react-bootstrap/Button\";\n\nimport './FormFestival.css';\nimport FormLocalisation from \"../../components/festivals/FormLocalisation\";\nimport Axios from \"axios\";\n\n\nconst FormFestival = ({onSubmit}) => {\n\n    const [fes_date, setDate] = useState(\"\");\n    const [festival, setFestival] = useState();\n    const [errortext, setErrortext] = useState(\"\");\n\n    const [showFestival, setShowFestival] = useState(false);\n\n    function validateForm() {\n        return fes_date.length > 0;\n    }\n\n    /*\n    function submitFestival(event) {\n        //variable to send in json format\n        let dataToSend = JSON.stringify({\n            fes_date,\n            fes_nbTables\n        });\n\n        fetch(\"/server/festivals/add\", {\n            method: \"POST\",\n            body: dataToSend,\n            headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n            },\n        }).then((res) => {\n\n            // If response was successful parse the json and dispatch an update\n            if (res.ok) {\n                res.json().then((resJson) => {\n                    if (resJson.success) {\n                        //afficher message de réussite\n                        console.log(\"festival créé\")\n                        setShowFestival(true)\n                    } else {\n                        setErrortext(resJson.error);\n                    }\n                })\n            }\n        });\n    }\n*/\n\n    return (\n        <div>\n            <div className=\"CreateFestival\">\n                <Form onSubmit={onSubmit}>\n                    {errortext !== \"\" ? (\n                        <FormText id=\"errorLabel\">{errortext}</FormText>\n                    ) : null}\n                    <h4 id=\"titleFestivalForm\">Création d'un festival</h4>\n                    <Form.Group size=\"lg\" controlId=\"fes_date\">\n                        <Form.Label>Date du festival *</Form.Label>\n                        <Form.Control\n                            autoFocus\n                            type=\"date\"\n                            value={fes_date}\n                            onChange={(e) => setDate(e.target.value)}\n                        />\n                    </Form.Group>\n                    <p>* Champ obligatoire</p>\n                    <div className=\"form-group\">\n                        <Button id=\"btn-formFestival\" block size=\"lg\" type=\"submit\" disabled={!validateForm()}>\n                            Créer le festival\n                        </Button>\n                    </div>\n                </Form>\n            </div>\n        </div>\n    )\n};\n\nexport default FormFestival;","import React, {Fragment} from 'react';\nimport {\n    useTable,\n    useSortBy,\n    useExpanded,\n    usePagination,\n} from 'react-table';\nimport {Table, Row, Col, Button, Input, CustomInput} from 'reactstrap';\nimport {Filter} from './Filters';\n\nconst SimpleTableContainer = ({columns, data, renderRowSubComponent}) => {\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        page,\n        prepareRow,\n        visibleColumns,\n        state: {pageIndex}\n    } = useTable(\n        {\n            columns,\n            data,\n            initialState: {pageIndex: 0},\n        },\n        useSortBy,\n        useExpanded,\n        usePagination\n    );\n\n    const generateSortingIndicator = (column) => {\n        return column.isSorted ? (column.isSortedDesc ? ' 🔽' : ' 🔼') : '';\n    };\n\n    return (\n        <Fragment>\n            <Table bordered hover {...getTableProps()} style={{width: '100%'}}>\n\n                {/* En-tete du tableau (avec les menu de recherches/tris)*/}\n                <thead>\n                {headerGroups.map((headerGroup) => (\n                    <tr  {...headerGroup.getHeaderGroupProps()}>\n                        {headerGroup.headers.map((column) => (\n                            <th {...column.getHeaderProps()}>\n                                <div {...column.getSortByToggleProps()}>\n                                    {column.render('Header')}\n                                    {generateSortingIndicator(column)}\n                                </div>\n                                <Filter column={column}/>\n                            </th>\n                        ))}\n                    </tr>\n                ))}\n                </thead>\n\n\n                {/* Affichage des données*/}\n                <tbody {...getTableBodyProps()} style={{width: 'auto'}}>\n                {page.map((row) => {\n\n                    prepareRow(row);\n                    return (\n                        <Fragment key={row.getRowProps().key}>\n\n                            {/* Contenu pour chaque ligne*/}\n                            <tr>\n                                {row.cells.map((cell) => {\n                                    return (\n                                        <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                                    );\n                                })}\n                            </tr>\n\n                            {/* Affichage du contenu supplémentaire (details) */}\n                            {row.isExpanded && (\n                                <tr>\n                                    <td colSpan={visibleColumns.length}>\n                                        {renderRowSubComponent(row)}\n                                    </td>\n                                </tr>\n                            )}\n\n                        </Fragment>\n                    );\n                })}\n                </tbody>\n            </Table>\n        </Fragment>\n    );\n};\n\nexport default SimpleTableContainer;","import React, {useEffect, useState, useMemo, useContext} from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport {CardBody, CardText, CardTitle} from \"reactstrap\";\nimport Axios from \"axios\";\nimport Moment from \"moment\";\nimport FormLocalisation from \"./FormLocalisation\";\nimport {Container} from \"../ModalForm/container\";\nimport \"./CardFestival.css\";\nimport Alert from \"react-bootstrap/Alert\";\nimport SimpleTableContainer from \"../../components/tables/SimpleTableContainer\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport {FestivalContext} from \"../../../App\";\nimport {isAdmin, isLogin} from \"../../utils/utils\";\nimport Table from \"react-bootstrap/Table\";\n\n\nconst CardFestival = ({fes, updateDate}) => {\n\n    const [festivalDate, setDate] = useState(fes.fes_date)\n    const [localisationList, setLocalList] = useState([])\n    const [show, setShow] = useState(false) // for the form of the localisation\n    const {selectedFestival, setSelectedFestival} = useContext(FestivalContext)\n\n    const [espaces, setEspaces] = useState([]);\n\n    useEffect(() => {\n        // Get details for the festivals\n        Axios.get(`/server/localisation/allDetails/${fes.fes_id}`)\n            .then((res) => {\n                setLocalList(res.data)\n            })\n    }, []);\n\n    useEffect(() => {\n        // Get all the espaces with a fes_id (need reservation table)\n        Axios.get(`/server/espaces/getAll/${fes.fes_id}/`)\n            .then((res) => {\n                setEspaces(res.data)\n            })\n    }, []);\n\n    const changeDate = event => {\n        updateDate(fes.fes_id, event.target.value) // update in the database\n        setDate(event.target.value) // update the value of the input calendar\n    }\n\n    /*\n    const changeNbTables = event => {\n        updateNbTables(fes.fes_id, event.target.value)\n    }\n     */\n\n    const updateCurrentFestival = event => {\n        localStorage.setItem(\"currentFestival\", fes.fes_id)\n        setSelectedFestival(fes);\n    }\n\n    /**\n     * Method called when the form is validated\n     * @param event\n     */\n    const onSubmit = (event) => {\n\n        event.preventDefault(event);\n        //get the information of the form\n        console.log(\"front lib :\", event.target.loc_libelle.value);\n        console.log(\"front id : \", fes.fes_id);\n\n\n        Axios.post(`/server/localisation/add/${fes.fes_id}`, {\n            loc_libelle: event.target.loc_libelle.value,\n            loc_prixTable: event.target.loc_prixTable.value,\n            loc_prixM2: event.target.loc_prixM2.value\n        }).then((res) => {\n            // to show the success with an alert\n            setShow(true);\n        })\n\n        window.location.reload(true)\n    }\n\n    /**\n     * Method to update the unit price of the table\n     * @param rowIndex\n     * @param data\n     * @param value\n     */\n    function updatePriceTable(rowIndex, data, value) {\n        const loc_id = data[rowIndex].loc_id;\n        Axios.put(\"/server/localisation/updatePriceTable/\", {\n            loc_id: loc_id,\n            new_priceTable: value\n        });\n    }\n\n    /**\n     * Method to update the price of m²\n     * @param rowIndex\n     * @param data\n     * @param value\n     */\n    function updatePriceM2(rowIndex, data, value) {\n        const loc_id = data[rowIndex].loc_id;\n        Axios.put(\"/server/localisation/updatePriceM2/\", {\n            loc_id: loc_id,\n            new_priceM2: value\n        });\n    }\n\n\n    //(e.esp_id,event.target.value)}\n    const updateQteEspace = (id, qte) => {\n        Axios.put(\"/server/espace/updateQte\", {\n            esp_id: id,\n            esp_qte: qte\n        })\n\n    }\n\n    const updateEnTables = (id, value) => {\n        console.log(\"ID\", id)\n        console.log(\"VALUUE\", value)\n        Axios.put(\"/server/espace/updateEnTables\", {\n            esp_id: id,\n            esp_enTables: value\n        })\n    }\n\n    const CalculerPrix = (e) => {\n\n        if (e.esp_enTables) {\n            return e.loc_prixTable * e.esp_qte\n        } else {\n            return e.loc_prixM2 * e.esp_qte\n        }\n\n    }\n\n    const CalculerPrixTOT = () => {\n        let prix = 0\n        espaces.map((e, i) => {\n            console.log(e)\n            if (e.esp_enTables) {\n                prix += e.loc_prixTable * e.esp_qte\n            } else {\n                prix += e.loc_prixM2 * e.esp_qte\n            }\n\n\n        })\n        return prix\n    }\n\n    const columns = useMemo(() => [\n        {\n            Header: \"Nom\",\n            accessor: \"loc_libelle\"\n        }, {\n            Header: \"Prix table\",\n            accessor: \"loc_prixTable\",\n\n            Cell: row => {\n                return (\n                    <Form.Control\n                        autoFocus\n                        type=\"text\"\n                        min=\"0\"\n                        defaultValue={row.value}\n                        onChange={(e) => updatePriceTable(row.row.id, row.data, e.target.value)}\n                    />\n                )\n            }\n        }, {\n            Header: \"Prix m²\",\n            accessor: \"loc_prixM2\",\n\n            Cell: row => {\n                return (\n                    <Form.Control\n                        autoFocus\n                        type=\"text\"\n                        min=\"0\"\n                        defaultValue={row.value}\n                        onChange={(e) => updatePriceM2(row.row.id, row.data, e.target.value)}\n                    />\n                )\n            }\n        }\n    ], [localisationList])\n\n\n    return (\n        <div>\n            <Alert id=\"alertSucces\" variant=\"success\" show={show}>\n                Espace créé avec succès!\n            </Alert>\n            <Card className=\"card\">\n                <CardBody>\n                    <CardTitle>\n                        <strong>Festival du {Moment(festivalDate).format('DD/MM/YYYY')}</strong>\n                    </CardTitle>\n                    <CardText>\n                        <Button block size=\"lg\" type=\"submit\" onClick={updateCurrentFestival}>\n                            Définir en tant que festival courant\n                        </Button>\n                    </CardText>\n                    {isAdmin() ? // user has to be logged to access to this page festivals\n                        <CardText>\n                            Date\n                            <input type={'date'}\n                                   className=\"inputCss\"\n                                   value={festivalDate}\n                                   onChange={changeDate}\n                            />\n                        </CardText>\n                        : null}\n                    {isAdmin() ?\n\n                        /*\n                        <Card.Body>\n                            <div>\n                                <Table responsive>\n                                    <thead>\n                                    <td className=\"tdUnderline\"></td>\n                                    <td className=\"tdUnderline\"></td>\n                                    <td className=\"tdUnderline\"></td>\n                                    <td className=\"tdUnderline\">Prix calculé</td>\n                                    </thead>\n                                    <tbody>\n                                    {espaces.map((e, i) => {\n                                        return (\n                                            <tr>\n                                                <td className=\"tdUnderline\">{e.localisation.loc_libelle}</td>\n                                                <td className=\"tdUnderline\">\n\n                                                    <input\n                                                        type=\"number\"\n                                                        defaultValue={e.esp_qte}\n                                                        style={{width: 'auto'}}\n                                                        onChange={(event) => updateQteEspace(e.esp_id, event.target.value)}\n                                                    />\n\n                                                </td>\n                                                <td className=\"tdUnderline\">\n                                                    <Form.Control\n                                                        style={{width: 'auto'}}\n                                                        as=\"select\"\n                                                        onChange={(event) => updateEnTables(e.esp_id, event.target.value ? 1 : 0)}>\n\n                                                        {console.log(\"[00000]\", e)}\n                                                        <option selected={e.esp_enTables} value={true}\n                                                                key={e.esp_enTables}>tables\n                                                        </option>\n                                                        <option selected={e.esp_enTables} value={false}\n                                                                key={e.esp_enTables}>M²\n                                                        </option>\n                                                    </Form.Control>\n                                                </td>\n                                                <td className=\"tdUnderline\">{CalculerPrix(e)}</td>\n                                            </tr>\n                                        )\n                                    })\n                                    }\n\n                                    <tr>\n                                        <td>Prix TOTAL calculé</td>\n                                        <td></td>\n                                        <td></td>\n                                        <td>{CalculerPrixTOT()} €</td>\n                                    </tr>\n                                    {/*<tr id=\"prixNego\">\n                                        <td>Prix TOTAL négocié</td>\n                                        <td>\n                                            <input\n                                                id=\"prixNego\"\n                                                type=\"number\"\n                                                step={\".01\"}\n                                                defaultValue={reservation.res_prixNegocie}\n                                                onChange={(event) => updatePrixNegocie(event.target.value)}\n                                            />€\n                                        </td>\n\n\n                                    </tr>\n                                    </tbody>\n                                </Table>\n                            </div>\n                        </Card.Body>*/\n\n\n\n                        <div className=\"tableLocalisation\">\n                            <SimpleTableContainer columns={columns} data={localisationList}/>\n                        </div>\n\n                        :null}\n\n                    {isAdmin() ?\n                        <Container triggerText=\"Créer un nouvel espace\" onSubmit={onSubmit}\n                                   component={FormLocalisation}/>\n                        : null}\n                </CardBody>\n            </Card>\n\n        </div>\n    );\n}\n\nexport default CardFestival;\n","import {isAdmin} from \"../../utils/utils\";\n\nimport React, {useEffect, useState} from \"react\";\nimport './Festivals.css';\nimport FormFestival from './FormFestival';\nimport {Container} from \"../../components/ModalForm/container\";\nimport CardFestival from \"../../components/festivals/CardFestival\";\nimport Axios from \"axios\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faTheaterMasks} from \"@fortawesome/free-solid-svg-icons\";\nimport Alert from \"react-bootstrap/Alert\";\n//const CardFestival = require('../../components/festivals/CardFestival');\n\nconst Festivals = () => {\n\n    const [form, setForm] = useState(false)\n    const [festivals, setListFestivals] = useState([]);\n    const [show, setShow] = useState(false)\n\n    /**\n     * Method which is called at the loading of the page\n     * to show all the festivals\n     */\n    useEffect(() => {\n        Axios.get(\"/server/festivals/allDetails\")\n            .then((res) => {\n                console.log(\"consolllle\", res.data.allFestivals);\n                setListFestivals(res.data.allFestivals)\n            });\n    }, []);\n\n    /**\n     * Method called when the form is validated\n     * @param event\n     */\n    const onSubmit = (event) => {\n        event.preventDefault(event);\n        //get the information of the form\n        Axios.post(\"/server/festivals/add\", {\n            fes_date: event.target.fes_date.value\n        })\n            .then((res) => {\n                // to show the success with an alert\n                setShow(true);\n            })\n        // The undefined zone, the list of suivi_exposant and the list of role_festival are created in the back\n    };\n\n    /**\n     * Method called by the input date to update the date of the festival of the card\n     * @param old_date : the current date\n     * @param new_date : the new date of the festival\n     */\n    const updateDateFestival = async (fes_id, new_date) => {\n        const res = await Axios.put(\"/server/festivals/updateDate\", {\n            fes_id: fes_id,\n            new_date: new_date\n        })\n    }\n\n\n    //ATTENTION : faire if  isAdmin la page admin else la page organisateur\n    return (\n        <>\n            <div className=\"EspaceFooter\">\n                <div id=\"titlePageFestivals\">\n                    <h1>\n                        <FontAwesomeIcon className=\"faicon\" icon={faTheaterMasks}/>\n                        Festivals\n                    </h1>\n\n                </div>\n                <Alert id=\"alertSucces\" variant=\"success\" show={show}>\n                    Le festival a été créé !\n                </Alert>\n                {isAdmin() ?\n                    <div id=\"btnNewFestival\">\n                        <Container triggerText=\"Créer un nouveau festival\" onSubmit={onSubmit}\n                                   component={FormFestival}/>\n                    </div>\n                    : null}\n                <div className=\"flex-container\">\n                    {festivals.map((fest, i) =>\n                        <div id={fest} className=\"flex-item\">\n                                <CardFestival fes={fest} updateDate={updateDateFestival}/>\n                        </div>\n                    )}\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default Festivals;\n","import React, {useState} from 'react';\n\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n\nexport const FormType = ({onSubmit}) => {\n    const [libelle, setLibelle] = useState(\"\");\n\n    function validateForm(){\n        return libelle.length > 0;\n    }\n\n    return(\n        <Form onSubmit={onSubmit}>\n            <h4 id=\"titleGameForm\">Détails du jeu</h4>\n\n            <Form.Group size=\"lg\"  controlId=\"libelle\">\n                <Form.Label>Type de jeu*</Form.Label>\n                <Form.Control autoFocus value={libelle} onChange={(e) => setLibelle(e.target.value)} />\n            </Form.Group>\n\n            <p>* Champ obligatoire</p>\n\n\n            <div className=\"form-group\">\n                <Button id=\"btn-formGame\" block size=\"lg\" type=\"submit\" disabled={!validateForm()}>\n                    Valider\n                </Button>\n            </div>\n\n        </Form>\n    );\n};\nexport default FormType;\n","import React, {useEffect, useState, useMemo} from \"react\";\nimport Axios from \"axios\"\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faShapes} from \"@fortawesome/free-solid-svg-icons\";\nimport TableContainer from \"../../components/tables/TableContainer\";\nimport Form from \"react-bootstrap/Form\";\nimport Alert from \"react-bootstrap/Alert\";\nimport {Container} from \"../../components/ModalForm/container\";\nimport FormType from './formType';\n\nconst TypeJeu = () => {\n\n    const [gameTypeList, setGameTypeList] = useState([]);\n    const [show, setShow] = useState(false)\n\n\n    useEffect(() => {\n        //Récupérer tous les types\n        Axios.get(\"/server/typeJeu/all\")\n            .then((res) => {\n                setGameTypeList(res.data)\n            })\n    }, [])\n\n\n    const onSubmit = (event) => {\n        //Ne pas oublier cette ligne!!!\n        event.preventDefault(event);\n\n        Axios.post(\"/server/typeJeu/add\", {\n            libelle: event.target.libelle.value\n        }).then((res) => {\n            //afficher alert succes\n            setShow(true);\n        })\n\n    }\n\n    const updateType = (rowIndex, data, value) => {\n        const typJ_id = data[rowIndex].typJ_id\n        Axios.post(`/server/typeJeu/${typJ_id}/update`,{\n            libelle: value,\n        })\n    }\n\n    const columns = useMemo ( () => [\n        {\n            Header: 'Type de jeu',\n            accessor: 'typJ_libelle',\n            Cell: row => {\n                return (\n                    <Form.Control autoFocus  defaultValue={row.value}\n                                  onChange={(e) => updateType(parseInt(row.row.id), row.data, e.target.value)}/>\n\n                )\n            },\n        }\n    ], [gameTypeList])\n\n    return(\n        <div className=\"EspaceFooter\">\n            <div id=\"titlePageJeux\">\n                <h1>\n                    <FontAwesomeIcon className=\"faicon\" icon={faShapes}/>\n                    Type de jeux</h1>\n            </div>\n            <Alert id=\"alertSucces\" variant=\"success\" show={show}>\n                Le type a été crée avec succès!\n            </Alert>\n            <div id=\"btnNewJeu\">\n                <Container triggerText=\"Créer un nouveau type\" onSubmit={onSubmit} component={FormType}/>\n            </div>\n            <div style={{marginTop: `50px`}}>\n                <TableContainer columns={columns} data={gameTypeList}/>\n            </div>\n        </div>\n    )\n}\nexport default TypeJeu","import React, {useEffect, useState} from 'react';\nimport './formJeu.css'\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Axios from \"axios\";\n\n\nexport const FormJeu = ({ onSubmit }) => {\n    const [title,setTitle] = useState(\"\");\n    const [minAge,setMinAge] = useState(\"\");\n    const [duration,setDuration] = useState(\"\");\n    const [maxNumPlayers,setMaxNumPlayers] = useState(\"\");\n    const [minNumPlayers,setMinNumPlayers] = useState(\"\");\n    const [rulesLink,setRulesLink] = useState(\"\");\n    const [companyId,setCompanyId] = useState(\"\");\n    const [gameTypeId,setGameTypeId] = useState(\"\");\n\n\n    const [gameTypeList,setGameTypeList] = useState([]);\n    const [editeursList,setEditeursList] = useState([]);\n\n\n\n\n    //méthode qui s'appelle au chargement de la page\n    useEffect(() => {\n        //Récupérer tous les types de jeux\n        Axios.get(\"/server/typeJeu/all\")\n            .then((res) => {\n               setGameTypeList(res.data)\n            })\n    }, []);\n\n    useEffect(() => {\n        //requetes tous les éditeurs\n        Axios.get(\"/server/societe/allEditeurs\")\n            .then((res) => {\n               setEditeursList(res.data)\n            })\n\n    }, []);\n\n    function validateForm() {\n        return title.length > 0 ;\n    }\n\n\n\n    return (\n\n        <Form onSubmit={onSubmit}>\n            <h4 id=\"titleGameForm\">Détails du jeu</h4>\n\n            <Form.Group size=\"lg\"  controlId=\"title\">\n                <Form.Label>Nom*</Form.Label>\n                <Form.Control autoFocus value={title} onChange={(e) => setTitle(e.target.value)} />\n            </Form.Group>\n            <Form.Group size=\"lg\"  controlId=\"minAge\">\n                <Form.Label>Age minimum</Form.Label>\n                <Form.Control autoFocus value={minAge} type=\"number\" min=\"0\"  onChange={(e) => setMinAge(e.target.value)} />\n            </Form.Group>\n            <Form.Group size=\"lg\"  controlId=\"duration\">\n                <Form.Label>Durée</Form.Label>\n                <Form.Control autoFocus value={duration} type=\"time\" onChange={(e) => setDuration(e.target.value)} />\n            </Form.Group>\n            <Form.Group size=\"lg\"  controlId=\"minNumPlayers\">\n                <Form.Label>Min joueurs</Form.Label>\n                <Form.Control autoFocus value={minNumPlayers} type=\"number\" min=\"0\" onChange={(e) => setMinNumPlayers(e.target.value)} />\n            </Form.Group>\n            <Form.Group size=\"lg\"  controlId=\"maxNumPlayers\">\n                <Form.Label>Max joueurs</Form.Label>\n                <Form.Control autoFocus value={maxNumPlayers} type=\"number\" min={minNumPlayers} onChange={(e) => setMaxNumPlayers(e.target.value)} />\n            </Form.Group>\n            <Form.Group size=\"lg\"  controlId=\"rulesLink\">\n                <Form.Label>Lien règles du jeu</Form.Label>\n                <Form.Control autoFocus value={rulesLink} type=\"url\" onChange={(e) => setRulesLink(e.target.value)} />\n            </Form.Group>\n            <Form.Group size=\"lg\"  controlId=\"gameTypeId\">\n                <Form.Label>Type de jeux</Form.Label>\n                <Form.Control autoFocus value={gameTypeId} as=\"select\" onChange={(e) => setGameTypeId(e.target.value)} >\n\n                {gameTypeList.map((object) =><option value={object.typJ_id}>{object.typJ_libelle} </option> )}\n                </Form.Control>\n            </Form.Group>\n            <Form.Group size=\"lg\"  controlId=\"companyId\">\n                <Form.Label>Éditeur</Form.Label>\n                <Form.Control autoFocus value={companyId} as=\"select\" onChange={(e) => setCompanyId(e.target.value)} >\n                    {editeursList.map((object) =><option value={object.soc_id}>{object.soc_nom} </option> )}\n                </Form.Control>\n            </Form.Group>\n\n            <p>* Champ obligatoire</p>\n\n\n            <div className=\"form-group\">\n                <Button id=\"btn-formGame\" block size=\"lg\" type=\"submit\" disabled={!validateForm()}>\n                    Valider\n                </Button>\n            </div>\n\n        </Form>\n    );\n};\nexport default FormJeu;\n","import './jeux.css'\nimport React, {useEffect, useState, useMemo} from \"react\";\nimport Axios from \"axios\"\n\nimport TableContainer from \"../../components/tables/TableContainer\";\nimport {SelectColumnFilter} from \"../../components/tables/Filters\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faChessKnight} from \"@fortawesome/free-solid-svg-icons\";\nimport {Container} from \"../../components/ModalForm/container\";\nimport FormJeu from \"./formJeu\";\nimport Form from \"react-bootstrap/Form\";\nimport Alert from \"react-bootstrap/Alert\";\n\nexport const Jeux = () => {\n\n\n\n    const [listeJeux, setListeJeux] = useState([]);\n    const [gameTypeList, setGameTypeList] = useState([]);\n    const [editeursList, setEditeursList] = useState([]);\n\n    const [show, setShow] = useState(false)\n\n\n    const onSubmit = (event) => {\n\n        //Ne pas oublier cette ligne!!!\n        event.preventDefault(event);\n\n        Axios.post(\"/server/jeux/add\", {\n            //récupérer les valeurs du formulaire\n            title: event.target.title.value,\n            minAge : event.target.minAge.value,\n            duration : event.target.duration.value,\n            maxNumPlayers : event.target.maxNumPlayers.value,\n            minNumPlayers : event.target.minNumPlayers.value,\n            rulesLink : event.target.rulesLink.value,\n            companyId : event.target.companyId.value,\n            gameTypeId : event.target.gameTypeId.value,\n        }).then((res) => {\n         //afficher alert succes\n            setShow(true);\n\n\n        })\n    };\n\n\n    //méthode qui s'appelle au chargement de la page\n    useEffect(() => {\n        //Récupérer les infos de tous les jeux\n        Axios.get(\"/server/Jeux/allDetails\")\n            .then((res) => {\n\n                setListeJeux(res.data)\n            });\n\n    }, []);\n\n    useEffect(() => {\n        //Récupérer tous les types\n        Axios.get(\"/server/typeJeu/all\")\n            .then((res) => {\n                setGameTypeList(res.data)\n            })\n    }, [])\n\n    useEffect(() => {\n        //récupérer tous les éditeurs\n        Axios.get(\"/server/societe/allEditeurs\")\n            .then((res) => {\n                setEditeursList(res.data)\n            })\n    }, [])\n\n\n    // update Editeur\n    const updateEditeurId = (data, value) => {\n        Axios.post(`/server/Jeux/${data.j_id}/update-editeurId`, {\n            editeurId: value,\n        })\n    }\n    // updtate Type jeu\n    const updateGameTypeId = (data, value) => {\n        const j_id = data.j_id\n        Axios.post(`/server/Jeux/${j_id}/update-typeId`, {\n            typeId: value,\n        })\n    }\n    //update ageMin\n    const updateageMin = (rowIndex, data, value) => {\n        const j_id = data[rowIndex].j_id\n        Axios.post(`/server/Jeux/${j_id}/update-ageMin`, {\n            ageMin: value,\n        })\n    }\n    // update joueurs Min\n    const updatenbjMin = (rowIndex, data, value) => {\n        const j_id = data[rowIndex].j_id\n        Axios.post(`/server/Jeux/${j_id}/update-nbjMin`, {\n            nbjMin: value,\n        })\n    }\n    // update joueurs Max\n    const updatenbjMax = (rowIndex, data, value) => {\n        const j_id = data[rowIndex].j_id\n        Axios.post(`/server/Jeux/${j_id}/update-nbjMax`, {\n            nbjMax: value,\n        })\n    }\n\n    // update DUREE\n    const updateDuree = (rowIndex, data, value) => {\n        const j_id = data[rowIndex].j_id\n        Axios.post(`/server/Jeux/${j_id}/update-duree`, {\n            duree: value,\n        })\n    }\n\n    //  update NOTICE\n    const updateNotice = (rowIndex, data, value) => {\n        const j_id = data[rowIndex].j_id\n        Axios.post(`/server/Jeux/${j_id}/update-lienNotice`, {\n            lienNotice: value,\n        })\n    }\n\n    //déclarer toutes les colonnes\n    const columns = useMemo(() => [\n\n        {\n            Header: \"Nom\",\n            accessor: \"j_titre\",\n        },\n        {\n            Header: \"Éditeur\",\n            accessor: \"societe.soc_nom\",\n\n\n            disableSortBy: true,\n            Filter: SelectColumnFilter,\n            filter: 'equals',\n\n\n            Cell: row => {\n\n                return (\n                    <div>\n                        <Form.Group>\n                            <Form.Control style={{width: 'auto'}} as=\"select\" onChange={(e) => updateEditeurId(row.row.original, e.target.value)}>\n                                {editeursList.map((object, i) =>\n                                    <option selected={row.value === object.soc_nom} value={object.soc_id} key={object.soc_id} > {object.soc_nom}</option>\n                                )}\n                            </Form.Control>\n                        </Form.Group>\n                    </div>\n                )\n            }\n\n\n        },\n        {\n            Header: \"Type de jeu\",\n            accessor: \"type_jeu.typJ_libelle\",\n\n            disableSortBy: true,\n            Filter: SelectColumnFilter,\n            filter: 'equals',\n\n\n            Cell: row => {\n                return (\n                    <div>\n                        <Form.Group>\n                            <Form.Control style={{width: 'auto'}} as=\"select\" onChange={(e) => updateGameTypeId(row.row.original, e.target.value)}>\n                                {gameTypeList.map((object, i) =>\n                                    <option selected={row.value === object.typJ_libelle} value={object.typJ_id} key={object.typJ_id} > {object.typJ_libelle}</option>\n                                )}\n                            </Form.Control>\n                        </Form.Group>\n                    </div>\n                )\n            }\n\n\n        },\n        {\n            Header: \"Age min\",\n            accessor: \"j_ageMin\",\n            Cell: row => {\n                return (\n                    <Form.Control  autoFocus type=\"number\" min=\"0\" defaultValue={row.value}\n                                  onChange={(e) => updateageMin(parseInt(row.row.id), row.data, e.target.value)}/>\n                )\n            },\n        },\n        {\n            Header: \"nb joueurs min\",\n            accessor: \"j_nbMinJoueurs\",\n            Cell: row => {\n                return (\n                    <Form.Control autoFocus type=\"number\" min=\"0\" defaultValue={row.value}\n                                  onChange={(e) => updatenbjMin(parseInt(row.row.id), row.data, e.target.value)}/>\n                )\n            },\n        },\n        {\n            Header: \"nb joueurs max\",\n            accessor: \"j_nbMaxJoueurs\",\n            Cell: row => {\n                return (\n                    <Form.Control autoFocus type=\"number\" min={row.row.original.j_nbMinJoueurs} defaultValue={row.value}\n                                  onChange={(e) => updatenbjMax(parseInt(row.row.id), row.data, e.target.value)}/>\n                )\n            },\n        },\n        {\n            Header: \"Durée\",\n            accessor: \"j_duree\",\n\n            Cell: row => {\n                return (\n                    <Form.Control autoFocus type=\"time\" defaultValue={row.value}\n                                  onChange={(e) => updateDuree(parseInt(row.row.id), row.data, e.target.value)}/>\n\n                )\n            },\n        },\n        {\n            Header: \"Notice\",\n            accessor: \"j_lienNotice\",\n\n            Cell: row => {\n                return (\n                    <Form.Control autoFocus type=\"url\" defaultValue={row.value}\n                                  onChange={(e) => updateNotice(parseInt(row.row.id), row.data, e.target.value)}/>\n\n                )\n            },\n        }\n    ], [listeJeux, editeursList, gameTypeList]) //les variables du tableau\n\n\n    return (\n        <div className=\"EspaceFooter\">\n            <div id=\"titlePageJeux\">\n                <h1>\n                    <FontAwesomeIcon className=\"faicon\" icon={faChessKnight}/>\n                    Jeux\n                </h1>\n\n            </div>\n            <Alert id=\"alertSucces\" variant=\"success\" show={show}>\n                Le jeu a été crée avec succès!\n            </Alert>\n            <div id=\"btnNewJeu\">\n                <Container triggerText=\"Créer un nouveau jeu\" onSubmit={onSubmit} component={FormJeu}/>\n            </div>\n            <div style={{marginTop: `50px`}}>\n                <TableContainer columns={columns} data={listeJeux}/>\n            </div>\n        </div>\n    )\n}\n\n","import {isLogin} from \"../utils/utils\";\nimport {Route, Redirect} from \"react-router-dom\";\n\nconst PrivateRoute = ({component: Component, ...rest}) => {\n\n    return (\n        <Route {...rest} render={props => {\n\n            const redirection = {\n                pathname: \"/login\",\n                state: {\n                    from: props.location\n                }\n            }\n            return !isLogin() ? <Redirect to={redirection}/> : <Component {...props}/>\n        }}/>\n    )\n}\n\nexport default PrivateRoute\n","import './festival-games.css'\nimport {isLogin} from \"../../utils/utils\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faDice, faInfoCircle, faEyeSlash} from \"@fortawesome/free-solid-svg-icons\";\nimport React, {useEffect, useMemo, useState} from \"react\";\nimport Axios from \"axios\";\nimport {useHistory} from \"react-router\"\nimport TableContainer from \"../../components/tables/TableContainer\";\nimport {SelectColumnFilter} from \"../../components/tables/Filters\";\nimport {CardBody, CardLink, CardText, CardTitle} from \"reactstrap\";\nimport {Card, Form} from \"react-bootstrap\";\nimport Moment from \"moment\";\nimport {Link} from \"react-router-dom\";\n\nconst FestivalGames = () => {\n    const [listeJeux, setListeJeux] = useState([]);\n    const [editeursList, setEditeursList] = useState([]);\n    const [gameTypeList, setGameTypeList] = useState([]);\n    const [zoneList, setZoneList] = useState([]);\n\n    const history = useHistory();\n\n\n    //méthode qui s'appelle au chargement de la page\n    useEffect(() => {\n        //Récupérer les infos de tous les jeux\n        Axios.get(`/server/jeuxFestival/${localStorage.getItem(\"currentFestival\")}/allDetails`)\n            .then((res) => {\n                setListeJeux(res.data)\n                console.log(res.data)\n            });\n\n    }, []);\n\n    useEffect(() => {\n        //récupérer tous les éditeurs\n        Axios.get(\"/server/societe/allEditeurs\")\n            .then((res) => {\n                setEditeursList(res.data)\n            })\n    }, [])\n\n    useEffect(() => {\n        //Récupérer tous les types\n        Axios.get(\"/server/typeJeu/all\")\n            .then((res) => {\n                setGameTypeList(res.data)\n            })\n    }, [])\n\n    useEffect(() => {\n        Axios.get(`/server/zones/all/${localStorage.getItem(\"currentFestival\")}`)\n            .then((res) => {\n                setZoneList(res.data)\n            })\n    }, [])\n\n\n    //redirection page suivi éditeur\n    const goToExhibitorMonitoring = (soc_id) => {\n\n        history.push('/exhibitor-monitoring/' + soc_id);\n\n        window.location.reload(false)\n\n    }\n\n    // update Editeur\n    const updateEditeurId = (data, value) => {\n        Axios.post(`/server/Jeux/${data.j_id}/update-editeurId`, {\n            editeurId: value,\n        }).then((res) => {\n            console.log(res)\n        })\n    }\n\n    // updtate Type jeu\n    const updateGameTypeId = (data, value) => {\n        Axios.post(`/server/Jeux/${data.j_id}/update-typeId`, {\n            typeId: value,\n        }).then((res) => {\n            console.log(res)\n        })\n    }\n\n    //update prototype\n    const updatePrototype = (data, value) => {\n\n        Axios.post(`/server/jeuxFestival/update-prototype/${data.suivJ_id}`, {\n            suivJ_prototype: value,\n        })\n            .then((res) => {\n                console.log(res)\n            })\n    }\n\n    //update zone\n    const updateZone = (data, value) => {\n        Axios.post(`/server/jeuxFestival/update-zone/${data.suivJ_id}`, {\n            zo_id: value,\n        })\n            .then((res) => {\n                console.log(res)\n            })\n    }\n    //update place\n    const updatePlace = (data, value) => {\n        Axios.post(`/server/JeuxFestival/update-place/${data.suivJ_id}`, {\n            suivJ_place: value,\n        })\n            .then((res) => {\n                console.log(res)\n            })\n    }\n\n    //update tombola\n    const updateTombola = (data, value) => {\n\n        Axios.post(`/server/JeuxFestival/update-tombola/${data.suivJ_id}`, {\n            suivJ_tombola: value,\n        })\n            .then((res) => {\n                console.log(res)\n            })\n    }\n\n    //update dotation\n    const updateDotation = (data, value) => {\n        Axios.post(`/server/JeuxFestival/update-dotation/${data.suivJ_id}`, {\n            suivJ_dotation: value,\n        })\n            .then((res) => {\n                console.log(res)\n            })\n    }\n\n    //update nombre de jeux reçus\n    const updateNbJeuxRecus = (data, value) => {\n        Axios.post(`/server/JeuxFestival/update-nbJeuxRecus/${data.suivJ_id}`, {\n            suivJ_nbJeuxRecus: value,\n        })\n            .then((res) => {\n                console.log(res)\n            })\n    }\n\n    //update nombre de jeux exposés\n    const updateNbJeuxExposes = (data, value) => {\n        Axios.post(`/server/JeuxFestival/update-nbJeuxExposes/${data.suivJ_id}`, {\n            suivJ_nbJeuxExposes: value,\n        })\n            .then((res) => {\n                console.log(res)\n            })\n    }\n    //update ageMin\n    const updateageMin = (data, value) => {\n\n        Axios.post(`/server/Jeux/${data.j_id}/update-ageMin`, {\n            ageMin: value,\n        })\n    }\n    // update joueurs Min\n    const updatenbjMin = (data, value) => {\n\n        Axios.post(`/server/Jeux/${data.j_id}/update-nbjMin`, {\n            nbjMin: value,\n        })\n    }\n    // update joueurs Max\n    const updatenbjMax = (data, value) => {\n\n        Axios.post(`/server/Jeux/${data.j_id}/update-nbjMax`, {\n            nbjMax: value,\n        })\n    }\n\n    // update DUREE\n    const updateDuree = (data, value) => {\n\n        Axios.post(`/server/Jeux/${data.j_id}/update-duree`, {\n            duree: value,\n        })\n    }\n\n    //  update NOTICE\n    const updateNotice = (data, value) => {\n\n        Axios.post(`/server/Jeux/${data.j_id}/update-lienNotice`, {\n            lienNotice: value,\n        })\n    }\n\n    //update recu\n    const updateRecu = (data, value) => {\n\n        Axios.post(`/server/JeuxFestival/update-recu/${data.suivJ_id}`, {\n            suivJ_recu: value,\n        })\n    }\n\n    //update a renvoyer\n    const updateARenvoyer = (data, value) => {\n\n        Axios.post(`/server/JeuxFestival/update-aRenvoyer/${data.suivJ_id}`, {\n            suivJ_aRenvoyer: value,\n        })\n            .then((res) => {\n                console.log(res)\n            })\n    }\n\n    //update renvoyé\n    const updateRenvoye = (data, value) => {\n\n        Axios.post(`/server/JeuxFestival/update-renvoye/${data.suivJ_id}`, {\n            suivJ_renvoye: value,\n        })\n            .then((res) => {\n                console.log(res)\n            })\n    }\n\n//déclarer toutes les colonnes\n    const columns = useMemo(() => {\n\n        const result = [\n            {\n                //This column is used for displaying more/less details\n                Header: () => null,\n                id: 'expander', // 'id' is required\n\n                Cell: ({row}) => (\n                    <span {...row.getToggleRowExpandedProps()}>\n                            {row.isExpanded ? <FontAwesomeIcon className=\"faiconDetail\" icon={faEyeSlash}/> :\n                                <FontAwesomeIcon className=\"faiconDetail\" icon={faInfoCircle}/>}\n                        </span>\n                ),\n            },\n            {\n                Header: \"Nom\",\n                accessor: \"jeu.j_titre\",\n            },\n            {\n                Header: \"Éditeur\",\n                accessor: \"jeu.societe.soc_nom\",\n\n\n                Cell: row => {\n\n                    return (\n                        isLogin() ?\n                            <div>\n                                <Form.Group>\n                                    <Form.Control style={{width: 'auto'}} as=\"select\"\n                                                  onChange={(e) => updateEditeurId(row.row.original, e.target.value)}>\n                                        {editeursList.map((object, i) =>\n                                            <option selected={row.value === object.soc_nom} value={object.soc_id}\n                                                    key={object.soc_id}> {object.soc_nom}</option>\n                                        )}\n                                    </Form.Control>\n                                </Form.Group>\n                            </div>\n                            : <p>{row.value}</p>\n                    )\n                }\n            },\n            {\n                Header: \"Type\",\n                accessor: \"jeu.type_jeu.typJ_libelle\",\n\n                disableSortBy: true,\n                Filter: SelectColumnFilter,\n                filter: 'equals',\n\n                Cell: row => {\n                    return (\n                        isLogin() ?\n                            <div>\n                                <Form.Group>\n                                    <Form.Control style={{width: 'auto'}} as=\"select\"\n                                                  onChange={(e) => updateGameTypeId(row.row.original, e.target.value)}\n                                                  >\n                                        {gameTypeList.map((object, i) =>\n                                            <option selected={row.value === object.typJ_libelle}\n                                                    value={object.typJ_id}\n                                                    key={object.typJ_id}> {object.typJ_libelle}</option>\n                                        )}\n                                    </Form.Control>\n                                </Form.Group>\n                            </div>\n                            : <p>{row.value}</p>\n                    )\n                }\n            },\n\n            {\n                Header: \"Zone\",\n                accessor: \"zone.zo_libelle\",\n\n                disableSortBy: true,\n                Filter: SelectColumnFilter,\n                filter: 'equals',\n\n\n                Cell: row => {\n\n                    return (\n                        isLogin() ?\n                            <div>\n                                <Form.Group>\n                                    <Form.Control style={{width: 'auto'}} as=\"select\"\n                                                  onChange={(e) => updateZone(row.row.original, e.target.value)}>\n                                        {zoneList.map((object, i) =>\n                                            <option selected={row.value === object.zo_libelle} value={object.zo_id}\n                                                    key={object.zo_id}> {object.zo_libelle}</option>\n                                        )}\n                                    </Form.Control>\n                                </Form.Group>\n                            </div>\n                            : <p>{row.value}</p>\n                    )\n                }\n\n            },\n\n\n        ];\n\n        if (isLogin()) {\n            result.push(\n                {\n\n                    Header: \"Exposant\",\n                    accessor: \"reservation.societe.soc_nom\",\n\n                    Cell: row => {\n\n                        return (\n\n                            <a href=\"#\"\n                               onClick={() => goToExhibitorMonitoring(row.row.original.reservation.societe.soc_id)}>{row.value}</a>\n\n                        )\n                    }\n                },\n                {\n\n                    Header: \"Prototype\",\n                    accessor: d => d.suivJ_prototype != null ? d.suivJ_prototype.toString() : null, //required cast from boolea to string\n\n\n                    disableSortBy: true,\n                    Filter: SelectColumnFilter,\n                    filter: 'equals',\n\n                    Cell: row => {\n                        return (\n                            <div style={{'textAlign': 'center'}}>\n                                <input\n                                    type=\"checkbox\"\n                                    defaultChecked={row.value === \"true\"}\n                                    onChange={(event) => updatePrototype(row.row.original, event.target.checked)}/>\n                            </div>\n                        )\n                    },\n                },\n                {\n                    Header: \"Placé plan\",\n                    accessor: d => d.suivJ_place != null ? d.suivJ_place.toString() : null, //required cast from boolea to string\n\n\n                    disableSortBy: true,\n                    Filter: SelectColumnFilter,\n                    filter: 'equals',\n\n                    Cell: row => {\n                        return (\n                            <div style={{'textAlign': 'center'}}>\n                                <input\n                                    type=\"checkbox\"\n                                    defaultChecked={row.value === \"true\"}\n                                    onChange={(event) => updatePlace(row.row.original, event.target.checked)}/>\n                            </div>\n                        )\n                    },\n                },\n\n\n                {\n                    Header: \"Envoie ?\",\n                    accessor: d => d.reservation == null ? null : d.reservation.res_envoiDebut != null ? d.reservation.res_envoiDebut.toString() : null, //required cast from boolea to string\n\n                    disableSortBy: true,\n                    Filter: SelectColumnFilter,\n                    filter: 'equals',\n                },\n\n                {\n                    Header: \"Reçu ?\",\n                    accessor: d => d.suivJ_recu != null ? d.suivJ_recu.toString() : null, //required cast from boolea to string\n\n                    disableSortBy: true,\n                    Filter: SelectColumnFilter,\n                    filter: 'equals',\n\n                    Cell: row => {\n                        return (\n                            <div style={{'textAlign': 'center'}}>\n                                <input\n                                    type=\"checkbox\"\n                                    defaultChecked={row.value === \"true\"}\n                                    onChange={(event) => updateRecu(row.row.original, event.target.checked)}/>\n                            </div>\n                        )\n                    },\n                },\n                {\n                    Header: \"A renvoyer ?\",\n                    accessor: d => d.suivJ_aRenvoyer != null ? d.suivJ_aRenvoyer.toString() : null, //required cast from boolea to string\n\n                    disableSortBy: true,\n                    Filter: SelectColumnFilter,\n                    filter: 'equals',\n\n                    Cell: row => {\n                        return (\n                            <div style={{'textAlign': 'center'}}>\n                                <input\n                                    type=\"checkbox\"\n                                    defaultChecked={row.value === \"true\"}\n                                    onChange={(event) => updateARenvoyer(row.row.original, event.target.checked)}/>\n                            </div>\n                        )\n                    },\n                },\n                {\n                    Header: \"Renvoyé ?\",\n                    accessor: d => d.suivJ_renvoye != null ? d.suivJ_renvoye.toString() : null, //required cast from boolea to string\n\n                    disableSortBy: true,\n                    Filter: SelectColumnFilter,\n                    filter: 'equals',\n\n                    Cell: row => {\n                        return (\n                            <div style={{'textAlign': 'center'}}>\n                                <input\n                                    type=\"checkbox\"\n                                    defaultChecked={row.value === \"true\"}\n                                    onChange={(event) => updateRenvoye(row.row.original, event.target.checked)}/>\n                            </div>\n                        )\n                    },\n                },\n                {\n                    Header: \"Dernière modifications\",\n                    accessor: \"suivJ_dateSaisie\",\n\n                    Cell: row => {\n                        return (\n                            <div>\n                                {Moment(row.row.original.suivJ_dateSaisie).format('DD/MM/YYYY')}\n                            </div>\n                        )\n                    },\n                }\n            )\n        }\n        return result\n\n    }, [listeJeux, editeursList, zoneList])\n\n    /**\n     * This method is used to display more details for a given object\n     * It is actived when clicking on the first column for a specific row\n     *\n     * @param row\n     * @returns {JSX.Element}\n     */\n    const detailsGame = (row) => {\n        //Display the cards (more details)\n        return (\n            <Card className=\"CardGames\">\n                {isLogin() ?\n                    <div className=\"flex-item\">\n                        <CardTitle>\n                            <h5>Détails réservation </h5>\n                        </CardTitle>\n                        <CardText>\n                            <p>\n                                <label id=\"checboxCardGames\">Tombola:</label>\n                                <input\n                                    type=\"checkbox\"\n                                    defaultChecked={row.original.suivJ_tombola}\n                                    onChange={(event) => updateTombola(row.original, event.target.checked)}/>\n                            </p>\n                            <p>\n                                <label id=\"checboxCardGames\">Dotation:</label>\n                                <input\n                                    type=\"checkbox\"\n                                    defaultChecked={row.original.suivJ_dotation}\n                                    onChange={(event) => updateDotation(row.original, event.target.checked)}/>\n\n                            </p>\n                            <p>\n                                <label id=\"checboxCardGames\">Nombre de jeux reçus:</label>\n                                <input\n                                    type=\"number\"\n                                    min=\"0\"\n                                    defaultValue={row.original.suivJ_nbJeuxRecus}\n                                    onChange={(event) => updateNbJeuxRecus(row.original, event.target.value)}/>\n\n                            </p>\n                            <p>\n                                <label id=\"checboxCardGames\">Nombre de jeux exposés:</label>\n                                <input\n                                    type=\"number\"\n                                    min=\"0\"\n                                    defaultValue={row.original.suivJ_nbJeuxExposes}\n                                    onChange={(event) => updateageMin(row.original, event.target.value)}/>\n\n                            </p>\n                        </CardText>\n                    </div>\n                    : null}\n                <div className=\"flex-item\">\n                    <CardTitle>\n                        <h5> Détails jeu </h5>\n                    </CardTitle>\n                    <CardText>\n                        <p>\n                            <label id=\"checboxCardGames\">Age minimum:</label>\n                            {isLogin() ?\n                                <input\n                                    type=\"number\"\n                                    min=\"0\"\n                                    defaultValue={row.original.jeu.j_ageMin}\n                                    onChange={(event) => updateNbJeuxExposes(row.original, event.target.value)}/>\n                                : row.original.jeu.j_ageMin}\n                            an(s)\n                        </p>\n                        <p>\n                            <label id=\"checboxCardGames\">Nombre de joueurs minimum: </label>\n                            {isLogin() ?\n                                <input\n                                    type=\"number\"\n                                    min=\"0\"\n                                    defaultValue={row.original.jeu.j_nbMinJoueurs}\n                                    onChange={(event) => updatenbjMin(row.original, event.target.value)}/>\n                                : row.original.jeu.j_nbMinJoueurs}\n                        </p>\n                        <p>\n                            <label id=\"checboxCardGames\"> Nombre de joueurs maximum: </label>\n                            {isLogin() ?\n                                <input\n                                    type=\"number\"\n                                    min={row.original.jeu.j_nbMinJoueurs}\n                                    defaultValue={row.original.jeu.j_nbMaxJoueurs}\n                                    onChange={(event) => updatenbjMax(row.original, event.target.value)}/>\n                                : row.original.jeu.j_nbMaxJoueurs}\n                        </p>\n                        <p>\n                            <label id=\"checboxCardGames\">Durée: </label>\n                            {isLogin() ?\n                                <input\n                                    type=\"time\"\n                                    defaultValue={row.original.jeu.j_duree}\n                                    onChange={(event) => updateDuree(row.original, event.target.value)}/>\n                                : row.original.jeu.j_duree}\n                        </p>\n                        <p>\n                            {row.original.jeu.j_lienNotice !== \"'NULL'\" ? (\n                                <CardLink href={row.original.jeu.j_lienNotice}>Voir les règles du jeu</CardLink>\n                            ) : null}\n\n                        </p>\n                        {\n                            isLogin() ? <p><label id=\"checboxCardGames\"> Changer le lien des règles: </label>\n                                    <input\n                                        type=\"url\"\n                                        defaultValue={row.original.jeu.j_lienNotice}\n                                        onChange={(event) => updateNotice(row.original, event.target.value)}/>\n                                </p>\n                                : null\n                        }\n\n\n                    </CardText>\n                </div>\n            </Card>\n        )\n\n\n    }\n\n    return (\n        <div className=\"EspaceFooter\">\n            <div id=\"titlePageJeuxFestival\">\n                <h1>\n                    <FontAwesomeIcon className=\"faicon\" icon={faDice}/>\n                    Suivi des jeux du festival\n                </h1>\n            </div>\n            <div style={{marginTop: `50px`}}>\n                <TableContainer columns={columns} data={listeJeux} renderRowSubComponent={detailsGame}/>\n            </div>\n        </div>\n    )\n}\n\nexport default FestivalGames\n","import React, {useEffect, useState} from 'react';\nimport './formContact.css'\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n\n\nexport const FormContact = ({onSubmit}) => {\n\n    const [nom, setNom] = useState(\"\");\n    const [prenom, setPrenom] = useState(\"\");\n    const [telPortable, setTelPortable] = useState(\"\");\n    const [telFixe, setTelFixe] = useState(\"\");\n    const [email, setEmail] =useState(\"\");\n    const [rue, setRue] = useState(\"\");\n    const [ville, setVille] = useState(\"\");\n    const [codePostal, setCodePostal] = useState(\"\");\n    const [pays, setPays] = useState(\"\")\n    const [fonction, setFonction] = useState(\"\");\n    const [principal, setPrincipal] = useState(false);\n\n    function validateForm() {\n        return nom.length > 0 && prenom.length > 0;\n    }\n\n\n    return (\n\n        <Form onSubmit={onSubmit}>\n            <h4 id=\"titleGameForm\">Contact</h4>\n\n\n\n            <Form.Group size=\"lg\" controlId=\"nom\">\n                <Form.Label>Nom*</Form.Label>\n                <Form.Control autoFocus value={nom} onChange={(e) => setNom(e.target.value)}/>\n            </Form.Group>\n            <Form.Group size=\"lg\" controlId=\"prenom\">\n                <Form.Label>Prenom*</Form.Label>\n                <Form.Control autoFocus value={prenom}\n                              onChange={(e) => setPrenom(e.target.value)}/>\n            </Form.Group>\n            <Form.Group size=\"lg\" controlId=\"principal\">\n                <Form.Check inline label=\"Contact principal ?\"  value={principal} onChange={(e)=> setPrincipal(e.target.checked)} />\n            </Form.Group>\n            <Form.Group size=\"lg\" controlId=\"telPortable\">\n                <Form.Label>Téléphone protable</Form.Label>\n                <Form.Control autoFocus value={telPortable} type=\"tel\"\n                              onChange={(e) => setTelPortable(e.target.value)}/>\n            </Form.Group>\n            <Form.Group size=\"lg\" controlId=\"telFixe\">\n                <Form.Label>Téléphone fixe</Form.Label>\n                <Form.Control autoFocus value={telFixe} type=\"tel\"\n                              onChange={(e) => setTelFixe(e.target.value)}/>\n            </Form.Group>\n            <Form.Group  size=\"lg\" controlId=\"email\">\n                <Form.Label>Email</Form.Label>\n                <Form.Control autoFocus value={email} type=\"email\"\n                                       onChange={(e) => setEmail(e.target.value)}/>\n            </Form.Group>\n            <Form.Group size=\"lg\" controlId=\"rue\">\n                <Form.Label>Rue</Form.Label>\n                <Form.Control autoFocus value={rue}\n                              onChange={(e) => setRue(e.target.value)}/>\n            </Form.Group>\n            <Form.Group size=\"lg\" controlId=\"ville\">\n                <Form.Label>Ville</Form.Label>\n                <Form.Control autoFocus value={ville} onChange={(e) => setVille(e.target.value)}/>\n            </Form.Group>\n            <Form.Group size=\"lg\" controlId=\"codePostal\">\n                <Form.Label>Code postal</Form.Label>\n                <Form.Control autoFocus value={codePostal} onChange={(e) => setCodePostal(e.target.value)}/>\n            </Form.Group>\n            <Form.Group size=\"lg\" controlId=\"pays\">\n                <Form.Label>Pays</Form.Label>\n                <Form.Control autoFocus value={pays} onChange={(e) => setPays(e.target.value)}/>\n            </Form.Group>\n\n            <Form.Group size=\"lg\" controlId=\"fonction\">\n                <Form.Label>Fonction</Form.Label>\n                <Form.Control autoFocus value={fonction} onChange={(e) => setFonction(e.target.value)}/>\n            </Form.Group>\n\n\n\n            <p>* Champs obligatoire</p>\n\n            <div className=\"form-group\">\n                <Button id=\"btn-formContact\" block size=\"lg\" type=\"submit\" disabled={!validateForm()}>\n                    Valider\n                </Button>\n            </div>\n\n        </Form>\n    );\n};\nexport default FormContact;\n","import React, {useEffect, useState} from \"react\";\nimport Axios from \"axios\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n\nexport const FormGameReservation = ({onSubmit, res}) => {\n    const [gameList, setGameList] = useState([]);\n    const [j_id, setJ_id] = useState(\"\");\n    const [validateForm,setValidateForm] = useState(\"false\");\n\n    console.log(\"res_id du component\",res)\n\n    useEffect(() => {\n        //Récupérerles les jeux qui existent déjà\n\n        Axios.get(`/server/jeux/allTitres/${res.res_id}`)\n            .then((res) => {\n                console.log(\"GameList du component\", res.data)\n                if (res.data) {\n                    setGameList(res.data)\n                }\n\n            })\n    }, []);\n\n    return (\n\n        <Form onSubmit={onSubmit}>\n            <h4 id=\"titleGameForm\">Ajouter un jeu à la réservation</h4>\n            <Form.Group size=\"lg\"  controlId=\"j_id\">\n                <Form.Label>Choisir un jeu</Form.Label>\n                <Form.Control autoFocus value={j_id} as=\"select\" onChange={(e) => {setJ_id(e.target.value) && setValidateForm(true)}} >\n                    {gameList.map((object) =><option value={object.j_id}>{object.j_titre} </option> )}\n                </Form.Control>\n            </Form.Group>\n            <div className=\"form-group\">\n                <Button id=\"btn-formGame\" block size=\"lg\" type=\"submit\" disabled={!validateForm}>\n                    Valider\n                </Button>\n            </div>\n        </Form>\n    )\n}\nexport default FormGameReservation;","import React, {useEffect, useState} from \"react\";\nimport Axios from \"axios\";\nimport {Container} from \"../ModalForm/container\";\nimport FormGameReservation from \"./FormGameReservation\";\n\n\nconst GameExhibitor = (reservation) => {\n\nconsole.log(\"res_id du component\",reservation.res_id)\n    const [res_id, setRes_id] = useState(reservation)\n    const [reservationGames, setReservationGames] = useState([])\n\n    const onSubmit = (event) => {\n\n        //Ne pas oublier cette ligne!!!\n        event.preventDefault(event);\n\n        Axios.post(\"/server/jeuxFestival/add/game/${event.target.j_id.value}/reservation/${res_id}\", {\n          fes_id: localStorage.getItem(\"currentFestival\")\n        }).then((res) => {\n            console.log(res)\n        })\n\n\n    };\n\n//Récupérer toutes les infos /reservation/:res_id\n    useEffect(() => {\n        //Récupérer les infos des contacts\n        Axios.get(`/server/jeuxFestival /reservation/${res_id}`)\n            .then((res) => {\n                setReservationGames(res.data)\n\n            });\n\n    }, []);\n\n    return(\n        <>\n            <div id=\"btnNewJeu\">\n                <Container onSubmit={onSubmit} res={reservation} component={FormGameReservation}  triggerText=\"Ajouter un jeu à la réservation\" />\n            </div>\n        </>\n    )\n}\nexport default GameExhibitor;","import React, {useEffect, useMemo, useState} from \"react\";\nimport Axios from \"axios\";\nimport {useLocation, useParams} from \"react-router-dom\";\nimport Accordion from 'react-bootstrap/Accordion'\nimport Card from 'react-bootstrap/Card'\nimport './exhibitor-monitoring.css'\nimport {faCheckCircle} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Alert from \"react-bootstrap/Alert\";\nimport CardContact from \"../../components/contact/CardContact\";\nimport {Container} from \"../../components/ModalForm/container\";\nimport FormReservation from \"./reservationForm\";\nimport FormContact from \"../../components/contact/FormContact\";\nimport {isAdmin} from \"../../utils/utils\";\nimport Table from \"react-bootstrap/Table\";\nimport GameExhibitor from \"../../components/game/game-exhibitor-monitoring\";\n\n\nconst ExhibitorMonitoring = () => {\n\n    const {idExposant} = useParams();\n\n    const [contactList, setContactList] = useState([]);\n    const [name, setName] = useState(\"\");\n    const [show, setShow] = useState(false);\n    const [showCom,setShowCom] = useState(false)\n    const [showNewContact, setShowNewContact] = useState(false);\n    const [showAdress, setShowAdress] = useState(false);\n    const [soc_ville, setSoc_ville] = useState(\"\");\n    const [soc_rue, setSoc_rue] = useState(\"\");\n    const [soc_codePostal, setSoc_codePostal] = useState(\"\");\n    const [soc_pays, setSoc_pays] = useState(\"\");\n    const [detailSuivi, setDetailSuivi] = useState([]);\n    const [suivi, setSuivi] = useState([]);\n    const [reservation, setReservation] = useState([]);\n    const [commentaire, setCommentaire] = useState(\"\");\n    const [espaces, setEspaces] = useState([]);\n\n    const [resaExist, setResaExist] = useState(false);\n    const [res_id, setRes_id] = useState(reservation)\n    const [reservationGames, setReservationGames] = useState([])\n\n    const onSubmitGame = (event) => {\n\n        //Ne pas oublier cette ligne!!!\n        event.preventDefault(event);\n\n        Axios.post(\"/server/jeuxFestival/add/game/${event.target.j_id.value}/reservation/${res_id}\", {\n            fes_id: localStorage.getItem(\"currentFestival\")\n        }).then((res) => {\n            console.log(res)\n        })\n\n\n    };\n\n    //méthode qui s'appelle au chargement de la page\n    useEffect(() => {\n        //Récupérer les infos des contacts\n        Axios.get(`/server/societe/${idExposant}/contacts`)\n            .then((res) => {\n                setContactList(res.data)\n                setName(res.data.soc_nom)\n                setSoc_rue(res.data.soc_rue)\n                setSoc_ville(res.data.soc_ville)\n                setSoc_codePostal(res.data.soc_codePostal)\n                setSoc_pays(res.data.soc_pays)\n            });\n\n    }, []);\n\n    useEffect(() => {\n        //Récupérerles infos réservation\n        const fes_id = localStorage.getItem(\"currentFestival\")\n        Axios.get(`/server/reservations/festival/${fes_id}/societe/${idExposant}`).then((res) => {\n            if (res.data) {\n                setReservation(res.data)\n                if (res.data.length !== 0) {\n                    setResaExist(true)\n                }\n            }\n            console.log(\"RESERVATION\", res.data)\n        })\n    }, []);\n\n    useEffect(() => {\n        //Récupérerles infos de suivi\n        const fes_id = localStorage.getItem(\"currentFestival\")\n        Axios.get(`/server/suiviExposant/festival/${fes_id}/societe/${idExposant}`)\n            .then((res) => {\n                setSuivi(res.data)\n                setCommentaire(res.data.suivE_commentaire)\n            })\n    }, []);\n\n    useEffect(() => {\n        if (resaExist) {\n            const fes_id = localStorage.getItem(\"currentFestival\")\n            const res_id = reservation.res_id\n\n            Axios.get(`http://localhost:3000/server/localisation/${fes_id}/allEspace/reservation/${res_id}`)\n                .then((res) => {\n                    setEspaces(res.data)\n                    console.log(\"ESPACES\", res.data)\n                })\n        }\n\n    }, [resaExist]) //se declenche lorsque la valeur entre crochet cha   nfe\n\n    function validateForm() {\n        return name.length > 0;\n    }\n\n    function validateFormAdress() {\n        return soc_ville.length > 0 && soc_rue.length > 0 && soc_codePostal.length > 0 && soc_pays.length > 0\n    }\n\n    //changer le nom\n    const updateNom = (event) => {\n        event.preventDefault()\n\n        Axios.post(`/server/societe/${idExposant}/update-name`, {\n            name: name,\n        }).then((res) => {\n            setShow(true);\n        })\n    }\n\n    //update commentaire\n    const updateCommentaire = (event) => {\n        event.preventDefault()\n\n        Axios.post(`/server/suiviExposant/${idExposant}/update-commentaire`, {\n            fes_id: localStorage.getItem(\"currentFestival\"),\n            suivE_commentaire: commentaire,\n        }).then((res) => {\n            setShowCom(true);\n        })\n    }\n//ajouter un contact\n    const onSubmit = (event) => {\n\n        event.preventDefault(event);\n\n        console.log(\"EVENT\", event)\n\n        Axios.post(`/server/contacts/add/${idExposant}\"`, {\n            //récupérer les valeurs du formulaire\n            nom: event.target.nom.value,\n            prenom: event.target.prenom.value,\n            telPortable: event.target.telPortable.value,\n            telFixe: event.target.telFixe.value,\n            email: event.target.email.value,\n            rue: event.target.rue.value,\n            ville: event.target.ville.value,\n            codePostal: event.target.codePostal.value,\n            pays: event.target.pays.value,\n            fonction: event.target.fonction.value,\n            principal: event.target.principal.value,\n        }).then((res) => {\n            //afficher alert succes\n            setShowNewContact(true);\n\n\n        })\n    };\n\n    /*\n     //créer une réservation\n     const onSubmitReservation = (event) => {\n\n         //Ne pas oublier cette ligne!!!\n         event.preventDefault();\n         console.log(\"EVENT RESA\",event);\n         console.log(\"LOC\",event.target.length)\n         console.log(\"LOC\",event.target[1].value)\n         console.log(\"LOC\",event.target[2].value)\n         console.log(\"LOC\",event.target[3].value)\n     };\n     */\n\n    //créer une réservation v2 sans form\n    //const createReservation = () {\n    //Axios.post()\n    //}\n\n    //changer adresse exposant\n    const updateAdress = (event) => {\n        event.preventDefault()\n\n        Axios.post(`/server/societe/${idExposant}/update-adress`, {\n            soc_ville: soc_ville,\n            soc_rue: soc_rue,\n            soc_codePostal: soc_codePostal,\n            soc_pays: soc_pays\n        }).then((res) => {\n            setShowAdress(\"true\");\n        })\n    }\n\n    //changer date contact\n    const updateDateContact = (value, numeroRelance) => {\n\n        Axios.put(`/server/suiviExposant/updateDateContact/${numeroRelance}`, {\n            suivE_id: suivi.suivE_id,\n            suivE_dateContact: value\n        })\n    }\n\n    //changer nombre de bénévols\n    const updateNbBenevoles = (value) => {\n        Axios.put(\"/server/suiviExposant/updateNbBenevole\", {\n            suivE_id: suivi.suivE_id,\n            suivE_nbBenevoles: value\n        })\n    }\n\n    //update besoin de benevoles\n    const updateStatusBenevole = (value) => {\n        Axios.put(\"/server/suiviExposant/updateBenevole\", {\n            suivE_id: suivi.suivE_id,\n            suivE_benevole: value\n        })\n    }\n\n    //changer si il se déplace ou non\n    const updateStatusSeDeplace = (value) => {\n\n        console.log(\"VALUES DEPLPPOEPZOE\", value)\n        Axios.put(\"/server/suiviExposant/updateSeDeplace\", {\n            suivE_id: suivi.suivE_id,\n            suivE_deplacement: value\n        }).then((res) => console.log(res))\n\n    }\n\n    const updateFacture = (value) => {\n\n        Axios.put(\"/server/reservations/updateReservationFacture\", {\n            res_id: reservation.res_id,\n            res_facture: value\n        })\n    }\n\n    const updatePaiement = (value) => {\n\n        Axios.put(\"/server/reservations/updateReservationPaiement\", {\n            res_id: reservation.res_id,\n            res_paiement: value\n        })\n    }\n\n    const updateDatePaiement = (value) => {\n        Axios.put(\"/server/reservations/updateDatePaiement\", {\n            res_id: reservation.res_id,\n            res_datePaiement: value,\n        })\n    }\n\n\n    const updateDateFacturation = (value) => {\n        Axios.put(\"/server/reservations/updateDateFacturation\", {\n            res_id: reservation.res_id,\n            res_dateFacturation: value,\n        })\n    }\n\n    const updateEnvoieDebut = (value) => {\n        Axios.put(\"/server/reservations/updateEnvoieJeuxDebut\", {\n            res_id: reservation.res_id,\n            res_envoiDebut: value,\n        })\n    }\n\n    const updatePrixRetour = (value) => {\n        Axios.put(\"/server/reservations/updateReservationPrixRetour\", {\n            res_id: reservation.res_id,\n            res_prixRetour: value,\n        })\n    }\n\n    const CalculerPrixTOT = () => {\n        let prix = 0\n        espaces.map((e, i) => {\n            console.log(e)\n            if (e.espaces[0].esp_enTables) {\n                prix += e.loc_prixTable * e.espaces[0].esp_qte\n            } else {\n                prix += e.loc_prixM2 * e.espaces[0].esp_qte\n            }\n\n\n        })\n        return prix\n    }\n\n    const CalculerPrix = (e) => {\n\n        if (e.espaces[0].esp_enTables) {\n            return e.loc_prixTable * e.espaces[0].esp_qte\n        } else {\n            return e.loc_prixM2 * e.espaces[0].esp_qte\n        }\n\n    }\n\n    const updatePrixNegocie = (value) => {\n\n        Axios.put(\"/server/reservations/updateReservationPrixNegocie\", {\n            res_id: reservation.res_id,\n            res_prixNegocie: value\n        })\n    }\n\n    const updateQteEspace = (id, qte) => {\n        Axios.put(\"/server/espace/updateQte\", {\n            esp_id: id,\n            esp_qte: qte\n        })\n\n    }\n\n    const updateEnTables = (id, value) => {\n\n        Axios.put(\"/server/espace/updateEnTables\", {\n            esp_id: id,\n            esp_enTables: value\n        })\n    }\n\n    const createReservation = () => {\n        Axios.post(\"/server/reservations/add\", {\n            soc_id: idExposant,\n            fes_id: localStorage.getItem(\"currentFestival\")\n        })\n        window.location.reload(true)\n    }\n\n    return (\n        <div className=\"EspaceFooter\">\n            <div id=\"titlePageJeuxFestival\">\n                <h1>\n                    {name}\n                </h1>\n            </div>\n            <div className=\"flex-container-Contacts\">\n\n                <div className=\"flex-item\">\n                    <Form onSubmit={updateNom} id=\"nomExposant\">\n\n                        <label id=\"labelNomExposant\">Changer le nom: </label>\n                        <input value={name} onChange={(e) => {\n                            setName(e.target.value);\n                            setShow(false)\n                        }}/>\n                        <Button type=\"submit\" id=\"btnCheck\" disabled={!validateForm()}>\n                            <FontAwesomeIcon className=\"faicon\" id=\"validateButton\" icon={faCheckCircle}/>\n                        </Button>\n\n                        <Alert id=\"alertSucces\" variant=\"success\" show={show}>\n                            Nom modifié !\n                        </Alert>\n                        <Alert id=\"alerSucess\" variant=\"success\" show={showCom}>Commentaire modifié</Alert>\n                    </Form>\n                    <Alert id=\"alertSucces\" variant=\"success\" show={showAdress}>\n                        Adresse modifiée !\n                    </Alert>\n                    <Alert id=\"alertSucces\" variant=\"success\" show={showNewContact}>\n                        Contact ajouté !\n                    </Alert>\n\n                </div>\n\n\n                <div className=\"flex-item\">\n                    <Form onSubmit={updateCommentaire}>\n\n                    <textarea id=\"commentaireStickyNote\" value={commentaire} onChange={(e) => {\n                        setCommentaire(e.target.value)\n                    }}/>\n\n                        <Button type=\"submit\" id=\"btnCheck\">\n                            Mettre à jour la note\n                            <FontAwesomeIcon className=\"faicon\" id=\"validateButton\" icon={faCheckCircle}/>\n                        </Button>\n                    </Form>\n\n                </div>\n            </div>\n\n\n            <Accordion>\n                <Card>\n                    <Accordion.Toggle as={Card.Header} eventKey=\"0\">\n                        Contacts\n                    </Accordion.Toggle>\n                    <Accordion.Collapse eventKey=\"0\">\n                        <Card.Body className=\"flex-container-Contacts\">\n                            <div id=\"btnNewJeu\">\n                                <Container triggerText=\"Ajouter un contact\" onSubmit={onSubmit}\n                                           component={FormContact}/>\n                            </div>\n\n                            <Card className=\"flex-item\">\n                                <Card.Header>Adresse: {name}</Card.Header>\n                                <div id=\"cardContacts\">\n                                    <Form onSubmit={updateAdress}>\n                                        <div>\n                                            <textarea id=\"expoAdress\" value={soc_rue} onChange={(e) => {\n                                                setSoc_rue(e.target.value);\n                                                setShowAdress(false)\n                                            }}/>\n\n                                        </div>\n                                        <div>\n                                            <textarea id=\"expoAdress\" value={soc_codePostal}\n                                                      onChange={(e) => setSoc_codePostal(e.target.value)}/>\n\n                                        </div>\n\n                                        <div>\n                                            <textarea id=\"expoAdress\" value={soc_ville}\n                                                      onChange={(e) => setSoc_ville(e.target.value)}/>\n\n                                        </div>\n                                        <div>\n                                            <textarea id=\"expoAdress\" value={soc_pays}\n                                                      onChange={(e) => setSoc_pays(e.target.value)}/>\n\n                                        </div>\n\n                                        <Button type=\"submit\" id=\"btnCheck\" disabled={!validateFormAdress()}>\n                                            <FontAwesomeIcon className=\"faicon\" id=\"validateButton\"\n                                                             icon={faCheckCircle}/>\n                                        </Button>\n                                    </Form>\n                                </div>\n\n                            </Card>\n\n                            {contactList.contacts ? contactList.contacts.map((value, index) => {\n                                    return (\n                                        <Card className=\"flex-item\">\n                                            <Card.Header\n                                                style={{\"background-color\": value.co_principal ? \"#E74C3C \" : \"default\"}}>Contact</Card.Header>\n                                            <div id=\"cardContacts\"\n                                                 style={{\"background-color\": value.co_principal ? \"#EC7063\" : \"default\"}}>\n                                                <div>{value.co_prenom}</div>\n                                                <div>{value.co_nom}</div>\n                                                <div>{value.co_mail}</div>\n                                                <div>{value.co_telFixe}</div>\n                                                <div>{value.co_telPortable}</div>\n                                                <div>{value.co_rue}</div>\n                                                <div> {value.co_codePostal}{value.co_ville}{value.co_pays}</div>\n\n                                            </div>\n                                        </Card>\n                                    )\n                                }\n                            ) : null}\n\n\n                        </Card.Body>\n\n                    </Accordion.Collapse>\n                </Card>\n\n                <Card>\n                    <Accordion.Toggle as={Card.Header} eventKey=\"1\">\n                        Détails suivi\n                    </Accordion.Toggle>\n                    <Accordion.Collapse eventKey=\"1\">\n                        <Card.Body className=\"flex-container-Contacts\">\n                            <div className=\"flex-item\">\n                                <div>\n                                    <label>1er contact: </label>\n                                    <input id=\"labelNomExposant\" type=\"date\"\n                                           defaultValue={suivi.suivE_dateContact1}\n                                           onChange={(event) => updateDateContact(event.target.value, 1)}\n                                    />\n                                </div>\n                                <div>\n                                    <label>2ème contact: </label>\n                                    <input id=\"labelNomExposant\" type=\"date\"\n                                           defaultValue={suivi.suivE_dateContact2}\n                                           onChange={(event) => updateDateContact(event.target.value, 2)}\n                                    />\n                                </div>\n                                <div>\n                                    <label>3ème contact: </label>\n                                    <input id=\"labelNomExposant\" type=\"date\"\n                                           defaultValue={suivi.suivE_dateContact3}\n                                           onChange={(event) => updateDateContact(event.target.value, 3)}\n                                    />\n                                </div>\n                            </div>\n\n                            {\n                                reservation.length != 0 ?\n                                    <div className=\"flex-item\">\n                                        <div>\n                                            <label id=\"labelCheckbox\">Se déplace: </label>\n\n                                            <input\n                                                type=\"checkbox\"\n                                                defaultChecked={suivi.suivE_deplacement}\n                                                onClick={(e) => updateStatusSeDeplace(e.target.checked ? 1 : 0)}\n                                            />\n\n                                        </div>\n                                        <div>\n                                            <label id=\"labelCheckbox\">Besoin de bénévoles: </label>\n\n                                            <input\n                                                type=\"checkbox\"\n                                                defaultChecked={suivi.suivE_benevole}\n                                                onClick={(e) => updateStatusBenevole(e.target.checked ? 1 : 0)}\n                                            />\n\n                                        </div>\n                                        <div>\n                                            <label id=\"labelCheckbox\">Nombre de bénévols nécessaires: </label>\n\n                                            <input\n                                                type=\"number\"\n                                                min=\"0\"\n                                                defaultValue={suivi.suivE_nbBenevoles}\n                                                onChange={(event) => updateNbBenevoles(event.target.value)}\n                                            />\n                                        </div>\n                                        <div>\n\n                                            <label id=\"labelCheckbox\">Il envoie ses jeux ? </label>\n                                            <input\n                                                type=\"checkbox\"\n                                                defaultChecked={reservation.res_envoiDebut}\n                                                onClick={(e) => updateEnvoieDebut(e.target.checked ? 1 : 0)}\n                                            />\n\n                                        </div>\n                                        <label id=\"labelCheckbox\">Prix retour: </label>\n\n                                        <input\n                                            type=\"number\"\n                                            min=\"0\"\n                                            defaultValue={reservation.res_prixRetour}\n                                            onChange={(event) => updatePrixRetour(event.target.value)}\n                                        />\n                                        €\n                                        <div>\n\n                                        </div>\n\n                                        <div>\n                                            <label id=\"labelCheckbox\">A été facturé?</label>\n                                            <input\n                                                type=\"checkbox\"\n                                                defaultChecked={reservation.res_facture}\n                                                onClick={(event) => updateFacture(event.target.checked ? 1 : 0)}\n                                            />\n                                            <label id=\"labelCheckbox\">Date de facturation:</label>\n\n\n                                            <input type=\"date\"\n                                                   defaultValue={reservation.res_dateFacturation}\n                                                   onChange={(event) => updateDateFacturation(event.target.value)}\n                                            />\n\n                                        </div>\n                                        <div>\n                                            <label id=\"labelCheckbox\"> A payé? </label>\n                                            <input\n                                                type=\"checkbox\"\n                                                defaultChecked={reservation.res_paiement}\n                                                onClick={(event) => updatePaiement(event.target.checked ? 1 : 0)}\n\n                                            />\n\n                                            <label id=\"labelCheckbox\">Date de paiement:</label>\n\n                                            <input type=\"date\"\n                                                   defaultValue={reservation.res_datePaiement}\n                                                   onChange={(event) => updateDatePaiement(event.target.value)}\n                                            />\n\n                                        </div>\n\n\n                                    </div>\n                                    :\n\n                                    null\n\n                            }\n\n\n                        </Card.Body>\n                    </Accordion.Collapse>\n                </Card>\n                {\n                    isAdmin() ?\n\n                        <Card>\n                            <Accordion.Toggle as={Card.Header} eventKey=\"2\">\n                                Réservation\n                            </Accordion.Toggle>\n                            <Accordion.Collapse eventKey=\"2\">\n                                <Card.Body>\n                                    {\n                                        reservation.length != 0 ?\n                                            <div>\n                                                <Table responsive>\n                                                    <thead>\n                                                    <td className=\"tdUnderline\"></td>\n                                                    <td className=\"tdUnderline\"></td>\n                                                    <td className=\"tdUnderline\"></td>\n                                                    <td className=\"tdUnderline\">Prix calculé</td>\n                                                    </thead>\n                                                    <tbody>\n                                                    {espaces.map((e, i) => {\n                                                        return (\n                                                            <tr>\n                                                                <td className=\"tdUnderline\">{e.loc_libelle}</td>\n                                                                <td className=\"tdUnderline\">\n\n                                                                    <input\n                                                                        type=\"number\"\n                                                                        defaultValue={e.espaces[0].esp_qte}\n                                                                        style={{width: 'auto'}}\n                                                                        onChange={(event) => updateQteEspace(e.espaces[0].esp_id, event.target.value)}\n                                                                    />\n\n                                                                </td>\n                                                                <td className=\"tdUnderline\">\n                                                                    <Form.Control\n                                                                        style={{width: 'auto'}}\n                                                                        as=\"select\"\n                                                                        onChange={(event) => updateEnTables(e.espaces[0].esp_id, event.target.value ? 1 : 0)}>\n\n                                                                        <option selected={e.espaces[0].esp_enTables}\n                                                                                value={true}\n                                                                                key={e.espaces[0].esp_enTables}>tables\n                                                                        </option>\n                                                                        <option selected={e.espaces[0].esp_enTables}\n                                                                                value={false}\n                                                                                key={e.espaces[0].esp_enTables}>M²\n                                                                        </option>\n                                                                    </Form.Control>\n                                                                </td>\n                                                                <td className=\"tdUnderline\">{CalculerPrix(e)}</td>\n                                                            </tr>\n                                                        )\n                                                    })\n                                                    }\n\n                                                    <tr>\n                                                        <td>Prix TOTAL calculé</td>\n                                                        <td></td>\n                                                        <td></td>\n                                                        <td>{CalculerPrixTOT()} €</td>\n                                                    </tr>\n                                                    <tr id=\"prixNego\">\n                                                        <td>Prix TOTAL négocié</td>\n                                                        <td>\n                                                            <input\n                                                                id=\"prixNego\"\n                                                                type=\"number\"\n                                                                step={\".01\"}\n                                                                defaultValue={reservation.res_prixNegocie}\n                                                                onChange={(event) => updatePrixNegocie(event.target.value)}\n                                                            />€\n                                                        </td>\n\n\n                                                    </tr>\n                                                    </tbody>\n                                                </Table>\n                                            </div>\n\n\n                                            :\n                                            <div>\n                                                <div id=\"btnNewJeu\">\n                                                    {/*\n                                            <Container triggerText=\"Créer une réservation\"\n                                                       onSubmit={onSubmitReservation} component={FormReservation}/>\n*/}\n                                            <Button onClick={createReservation}>Créer une réservation </Button>\n\n                                                </div>\n                                            </div>\n                                    }\n                                </Card.Body>\n                            </Accordion.Collapse>\n                        </Card>\n                        : null\n                }\n                <Card>\n                    <Accordion.Toggle as={Card.Header} eventKey=\"3\">\n                        Jeux de la réservation\n                    </Accordion.Toggle>\n                    <Accordion.Collapse eventKey=\"3\">\n                        <Card.Body>\n                            <GameExhibitor reservation={reservation.res_id}/>\n                        </Card.Body>\n                    </Accordion.Collapse>\n                </Card>\n            </Accordion>\n        </div>\n    )\n}\nexport default ExhibitorMonitoring","import React, {useEffect, useState, useMemo} from \"react\";\nimport Axios from \"axios\"\nimport TableContainer from \"../../components/tables/TableContainer\";\nimport {SelectColumnFilter} from \"../../components/tables/Filters\";\n\nimport './AfficherSociete.css'\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faAddressBook, faEyeSlash, faInfoCircle, faUserTag} from \"@fortawesome/free-solid-svg-icons\";\nimport {Container} from \"../../components/ModalForm/container\";\nimport FormSociete from \"./formSociete\";\n\n\nexport default function AfficherSocieteRole() {\n\n    const [societe, setListSociete] = useState([])\n\n    /**\n     * This method is used to fetch data from DB every time it is been updated\n     */\n    useEffect(() => {\n        const fetchData = async () => {\n            const response = await Axios.get(`/server/festivals/affichageRole/${localStorage.getItem(\"currentFestival\")}`);\n            setListSociete(response.data[0].societes)\n        };\n        fetchData();\n    }, [])\n\n\n    /**\n     * This method is used to update the status (soc_estInactif) of a societe\n     *\n     * @param rowIndex\n     * @param columnId\n     * @param value\n     */\n    const updateStatusInactif = (data, value) => {\n        console.log(\"RESULT\", data, value)\n        Axios.put(\"/server/societe/updateStatusInactif\", {\n            soc_id: data.soc_id, //row id=0 <==> soc_id = 1 --> d'où le +1\n            soc_estInactif: value //'true' or 'false'\n        })\n    }\n\n    const updateStatusEditeur = (data, value) => {\n        console.log(\"RESULT\", data, value)\n\n        Axios.put(\"/server/societe/updateStatusEditeur\", {\n            soc_id: data.soc_id, //row id=0 <==> soc_id = 1 --> d'où le +1\n            fes_id: localStorage.getItem(\"currentFestival\"),\n            rolF_estEditeur: value //'true' or 'false'\n        })\n    }\n\n    const updateStatusExposant = (data, value) => {\n        console.log(\"RESULT\", data, value)\n\n        Axios.put(\"/server/societe/updateStatusExposant\", {\n            soc_id: data.soc_id, //row id=0 <==> soc_id = 1 --> d'où le +1\n            fes_id: localStorage.getItem(\"currentFestival\"),\n            rolF_estExposant: value //'true' or 'false'\n        })\n    }\n\n\n    const onSubmit = (event) => {\n        event.preventDefault(event);\n\n        const fes_id = localStorage.getItem(\"currentFestival\")\n        Axios.post(`http://localhost:3000/server/societe/add/${fes_id}`, {\n            soc_nom: event.target.nom.value,\n            soc_ville: event.target.ville.value,\n            soc_rue: event.target.rue.value,\n            soc_codePostal: event.target.codePostal.value,\n            soc_pays: event.target.pays.value\n        }).then((response) => {\n            console.log(response)\n        })\n    }\n    /**\n     * This method is declaring all the columns for the table\n     *\n     * @type {[{Header: (function(): null), id: string, Cell: (function({row: *}))}, {Header: string, accessor: string}, {filter: string, Header: string, Filter: (function({column: {filterValue: *, setFilter: *, preFilteredRows: *, id?: *}}): *), accessor: (function(*): string), id: string, disableSortBy: boolean, Cell: (function(*))}]}\n     */\n    const columns = useMemo(() => [\n            /*\n            {\n\n                //This column is used for displaying more/less details\n                Header: () => null,\n                id: 'expander', // 'id' is required\n\n                Cell: ({row}) => (\n                    <span {...row.getToggleRowExpandedProps()}>\n                        {row.isExpanded ? <FontAwesomeIcon className=\"faiconDetail\" icon={faEyeSlash}/> :\n                            <FontAwesomeIcon className=\"faiconDetail\" icon={faInfoCircle}/>}\n                    </span>\n                ),\n            },\n*/\n            {\n                Header: \"Nom\",\n                accessor: \"soc_nom\",\n            },\n            {\n                id: \"inactif\",\n                Header: \"Inactif\",\n                accessor: d => d.soc_estInactif == 1 ? 'oui' : 'non', //required cast from boolea to string\n\n                //Allows column to be sorted depending on all content type (true/false)\n                disableSortBy: true,\n                Filter: SelectColumnFilter,\n                filter: 'equals',\n\n                //Displays checkox for each row\n                //Calls updateStatusInactif every time a checkbox is been updated\n                Cell: row => {\n                    return (\n                        <div style={{'textAlign': 'center'}}>\n\n                            <input\n                                type=\"checkbox\"\n                                defaultChecked={row.value == 'oui' ? true : false}\n                                onChange={(event) => updateStatusInactif(row.row.original, event.target.checked ? 1 : 0)}/>\n                        </div>\n                    )\n                },\n            },\n            {\n                id: \"estExposant\",\n                Header: \"Exposant\",\n                accessor: d => d.role_festival.rolF_estExposant == 1 ? 'oui' : 'non', //required cast from boolean to string\n\n                //Allows column to be sorted depending on all content type (true/false)\n                disableSortBy: true,\n                Filter: SelectColumnFilter,\n                filter: 'equals',\n\n                Cell: row => {\n                    return (\n\n                        <div style={{'textAlign': 'center'}}>\n                            {\n                                console.log(\"ROW VALUE\", row)\n                            }\n                            <input\n                                type=\"checkbox\"\n                                defaultChecked={row.value == 'oui' ? true : false}\n                                onChange={(event) => updateStatusExposant(row.row.original, event.target.checked)}\n                            />\n                        </div>\n                    )\n                },\n            },\n            {\n                id: \"estEditeur\",\n                Header: \"Editeur\",\n                accessor: d => d.role_festival.rolF_estEditeur == 1 ? 'oui' : 'non', //required cast from boolean to string\n\n\n                //Allows column to be sorted depending on all content type (true/false)\n                disableSortBy: true,\n                Filter: SelectColumnFilter,\n                filter: 'equals',\n\n                Cell: row => {\n                    return (\n                        <div style={{'textAlign': 'center'}}>\n                            <input\n                                type=\"checkbox\"\n                                defaultChecked={row.value == 'oui' ? true : false}\n                                onChange={(event) => updateStatusEditeur(row.row.original, event.target.checked ? true : false)}\n                            />\n                        </div>\n                    )\n                },\n            },\n        ], []\n    )\n\n    /**\n     * This method is used to display more details for a given object\n     * It is actived when clicking on the first column for a specific row\n     *\n     * @param row\n     * @returns {JSX.Element}\n     */\n    const detailsSociete = (row) => {\n\n    };\n\n\n    /**\n     * Display the table\n     *\n     * required :\n     *      the columns set up above\n     *      the data (list of societes)\n     * optional :\n     *      {renderRowSubComponent} only if you want the ability to display more details\n     */\n    return (\n        <div style={{marginTop: `50px`}} className=\"EspaceFooter\">\n\n            <div id=\"titlePageJeux\">\n                <h1>\n                    <FontAwesomeIcon className=\"faicon\" icon={faUserTag}/>\n                    Gérer les sociétés\n                </h1>\n            </div>\n            <div id=\"btnNewJeu\">\n                <Container triggerText=\"Créer une societe\" onSubmit={(e) => onSubmit(e)} component={FormSociete}/>\n\n            </div>\n\n            <TableContainer columns={columns} data={societe} /*renderRowSubComponent={detailsSociete}*//>\n\n\n        </div>\n    )\n}\n\n","import React, {useEffect, useState, useMemo} from \"react\";\nimport Axios from \"axios\"\nimport TableContainer from \"../../components/tables/TableContainer\";\nimport {SelectColumnFilter} from \"../../components/tables/Filters\";\nimport {Form} from \"react-bootstrap\";\nimport {Link, useHistory} from \"react-router-dom\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faClipboardList, faFileInvoiceDollar} from \"@fortawesome/free-solid-svg-icons\";\n\n\nexport default function Reservation() {\n\n    const [listReservations, setListReservations] = useState([])\n    const [listLocalisation, setListLocalisation] = useState([])\n\n    const fes_id = localStorage.getItem(\"currentFestival\")\n    const history = useHistory()\n\n    useEffect(() => {\n        Axios.get(`/server/reservations/afficherAllReservation/${fes_id}`).then((result) => {\n                setListReservations(result.data)\n                console.log(result.data)\n            }\n        )\n    }, [])\n\n\n    useEffect(() => {\n\n        Axios.get(`/server/localisation/allDetails/${fes_id}`).then((result) => {\n            setListLocalisation(result.data)\n            console.log(result.data)\n\n        })\n    }, [])\n\n\n    const updateFacture = (data, value) => {\n        console.log(\"DATA\", data)\n\n        Axios.put(\"/server/reservations/updateReservationFacture\", {\n            res_id: data.res_id,\n            res_facture: value\n        })\n    }\n\n    const updatePaiement = (data, value) => {\n\n        console.log(\"DATA\", data)\n        Axios.put(\"/server/reservations/updateReservationPaiement\", {\n            res_id: data.res_id,\n            res_paiement: value\n        })\n    }\n\n    const updateEspaceReservation = (data, value) => {\n\n        console.log(\"DATA\", data)\n        Axios.put(\"/server/reservations/updateReservationLocalisation\", {\n            res_id: data.res_id,\n            loc_id: value\n        })\n    }\n\n    const updatePrixRetour = (data, value) => {\n\n        console.log(\"DATA\", data)\n        Axios.put(\"/server/reservations/updateReservationPrixRetour\", {\n            res_id: data.res_id,\n            res_prixRetour: value\n        })\n    }\n\n    const updatePrixNegocie = (data, value) => {\n\n        console.log(\"DATA\", data, value)\n        Axios.put(\"/server/reservations/updateReservationPrixNegocie\", {\n            res_id: data.res_id,\n            res_prixNegocie: value\n        })\n    }\n\n    const goToExhibitorMonitoring = (soc_id) => {\n        history.push('/exhibitor-monitoring/' + soc_id);\n        window.location.reload(false)\n\n    }\n\n    const columns = useMemo(() => [\n        {\n            Header: () => null,\n            id: \"expander\"\n\n        },\n        {\n            Header: \"Exposant\",\n            accessor: \"societe.soc_nom\",\n\n            Cell: row => {\n                return (\n                    <a href=\"#\" onClick={() => goToExhibitorMonitoring(row.row.original.societe.soc_id)}>{row.value}</a>\n                )\n            }\n        },\n        /*{\n            Header: \"Zone\",\n            accessor: \"espace.localisation.loc_id\",\n\n            disableSortBy: true,\n            Filter: SelectColumnFilter,\n            filter: 'equals',\n\n            Cell: row => {\n                return (\n                    <div>\n                        <Form.Control as={\"select\"}\n                                      onChange={(e) => updateEspaceReservation(row.row.original, e.target.value)}>\n                            {\n                                listLocalisation.length != 0 ?\n                                    listLocalisation.map((option) =>\n                                        <option value={option.loc_id}\n                                                selected={option.loc_id == parseInt(row.value)}\n                                                key={option.loc_id}>\n                                            {option.loc_libelle}\n                                        </option>\n                                    )\n                                    : null\n                            }\n                        </Form.Control>\n                    </div>\n                )\n            }\n        },*/\n        {\n            Header: \"Facture\",\n            accessor: d => d.res_facture ? 'true' : 'false',\n\n            disableSortBy: true,\n            Filter: SelectColumnFilter,\n            filter: 'equals',\n\n            Cell: row => {\n                return (\n                    <div style={{'textAlign': 'center'}}>\n                        <input\n                            type=\"checkbox\"\n                            disabled={row.value == null}\n                            defaultChecked={(row.value == null || row.value == 'false') ? false : true}\n                            onChange={(event) => updateFacture(row.row.original, event.target.checked ? 1 : 0)}\n                        />\n                    </div>)\n            },\n\n        },\n        {\n            Header: \"Paiement\",\n            accessor: d => d.res_paiement ? 'true' : 'false',\n\n            disableSortBy: true,\n            Filter: SelectColumnFilter,\n            filter: 'equals',\n\n            Cell: row => {\n                return (\n                    <div style={{'textAlign': 'center'}}>\n                        <input\n                            type=\"checkbox\"\n                            disabled={row.value == null}\n                            defaultChecked={(row.value == null || row.value == 'false') ? false : true}\n                            onChange={(event) => updatePaiement(row.row.original, event.target.checked ? 1 : 0)}\n                        />\n                    </div>)\n            },\n\n\n        },\n        {\n            Header: \"Prix retour\",\n            accessor: d => d.res_prixRetour,\n\n            Cell: row => {\n                return (\n                    <div style={{'textAlign': 'center'}}>\n                        {\n                            console.log(\"ROW\", row.value)\n                        }\n                        <input\n                            type=\"number\"\n                            step={\".01\"}\n                            disabled={row.value == null}\n                            defaultValue={row.value}\n                            onChange={(event) => updatePrixRetour(row.row.original, event.target.value)}\n                        />\n                    </div>)\n            },\n        },\n        {\n            Header: \"Prix Negocie\",\n            accessor: d => d.res_prixNegocie,\n\n            Cell: row => {\n                return (\n                    <div style={{'textAlign': 'center'}}>\n                        {\n                            console.log(\"ROW\", row.value)\n                        }\n                        <input\n                            type=\"number\"\n                            step={\".01\"}\n                            disabled={row.value == null}\n                            defaultValue={row.value}\n                            onChange={(event) => updatePrixNegocie(row.row.original, event.target.value)}\n                        />\n                    </div>)\n            },\n        }\n\n    ])\n\n    return (\n        <div>\n            <div id=\"titlePageJeux\">\n                <h1>\n                    <FontAwesomeIcon className=\"faicon\" icon={faClipboardList}/>\n                  Réservations\n                </h1>\n            </div>\n            <div style={{marginTop: `50px`}} className=\"EspaceFooter\">\n                <TableContainer columns={columns} data={listReservations}/>\n            </div>\n        </div>\n    )\n\n}\n","import {CardBody, CardText, CardTitle} from \"reactstrap\";\nimport {Card} from \"react-bootstrap\";\nimport React from \"react\";\n\n\nconst GameCard = (game, ...res) => {\n\n    const {\n        j_titre,\n        j_ageMin,\n        j_nbMaxJoueurs,\n        j_nbMinJoueurs,\n        j_lienNotice,\n        j_duree,\n    } = game.props\n\n    return (\n        <Card style={{width: '50%', margin: '0 auto', marginLeft: '1rem'}}>\n\n            <CardBody>\n\n                <CardTitle>\n                    <strong> {j_titre} </strong>\n                </CardTitle>\n\n                <CardText>\n                    Age Minimun : {j_ageMin}\n                    < br/>\n                    Nombre max de joueurs : {j_nbMaxJoueurs}\n                    < br/>\n                    Nombre min de joueurs : {j_nbMinJoueurs}\n                    < br/>\n                    Durée estimée : {j_duree}\n                    < br/>\n                    Lien notice : {j_lienNotice}\n                </CardText>\n\n            </CardBody>\n\n        </Card>\n    )\n}\n\n\nexport default GameCard\n","import React, {useEffect, useState, useMemo} from \"react\";\nimport Axios from \"axios\"\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faAddressBook, faEyeSlash, faInfoCircle, faShapes} from \"@fortawesome/free-solid-svg-icons\";\nimport TableContainer from \"../../components/tables/TableContainer\";\nimport {CardBody, CardTitle} from \"reactstrap\";\nimport CardContact from \"../../components/contact/CardContact\";\nimport {Card} from \"react-bootstrap\";\nimport GameCard from \"../../components/game/GameCard\";\n\nexport default function AfficherEditeur() {\n\n    const [societe, setListSociete] = useState([])\n\n\n    useEffect(() => {\n\n        Axios.get(`/server/festivals/affichageEditeur/${localStorage.getItem(\"currentFestival\")}`).then((result) => {\n            setListSociete(result.data[0].societes)\n            console.log(result.data[0].societes)\n        })\n    }, [])\n\n    const columns = useMemo(() => [\n            {\n                Header: () => null,\n                id: 'expander', // 'id' is required\n\n                Cell: ({row}) => (\n                    <span {...row.getToggleRowExpandedProps()}>\n                        {row.isExpanded ? <FontAwesomeIcon className=\"faiconDetail\" icon={faEyeSlash}/> :\n                            <FontAwesomeIcon className=\"faiconDetail\" icon={faInfoCircle}/>}\n                    </span>\n                ),\n            },\n            {\n                Header: \"Nom\",\n                accessor: \"soc_nom\",\n            },\n            {\n                Header: \"Adresse\",\n                accessor: d => `${d.soc_rue} - ${d.soc_ville} ${d.soc_codePostal}`,\n            },\n            {\n                Header: \"Nombre de jeux\",\n                accessor: d => d.jeus.length,\n            },\n\n        ]\n    )\n\n    const detailsEditeur = (row) => {\n\n        const games = row.original.jeus\n\n        return (\n            <div style={{columnCount: 2, display: 'flex', padding: '1rem'}}>\n                {\n                    games.map((game) => {\n                        return (\n                            <GameCard props={game}/>\n                        )\n                    })\n                }\n            </div>\n        )\n    }\n\n    return (\n        <div style={{marginTop: `50px`}} className=\"EspaceFooter\">\n            <div id=\"titlePageJeux\">\n                <h1>\n                    <FontAwesomeIcon className=\"faicon\" icon={faAddressBook}/>\n                    Editeurs\n                </h1>\n            </div>\n\n            <TableContainer columns={columns} data={societe} renderRowSubComponent={detailsEditeur}/>\n        </div>\n    )\n\n}\n","import React, {useEffect, useState, useMemo} from \"react\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faTh} from \"@fortawesome/free-solid-svg-icons\";\n\nexport default function ZonesFestivals() {\n\n    return (\n        <div style={{marginTop: `50px`}} className=\"EspaceFooter\">\n\n            <div id=\"titlePageJeux\">\n                <h1>\n                    <FontAwesomeIcon className=\"faicon\" icon={faTh}/>\n                    Zones du Festival\n                </h1>\n            </div>\n\n        </div>\n    )\n}\n","import React, {useEffect, useState, useMemo} from \"react\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faFileInvoiceDollar, faTh} from \"@fortawesome/free-solid-svg-icons\";\n\nexport default function Facturation() {\n\n    return (\n        <div style={{marginTop: `50px`}} className=\"EspaceFooter\">\n\n            <div id=\"titlePageJeux\">\n                <h1>\n                    <FontAwesomeIcon className=\"faicon\" icon={faFileInvoiceDollar}/>\n                    Factures\n                </h1>\n            </div>\n\n        </div>\n    )\n}\n","import React from \"react\";\nimport {BrowserRouter as Router, Switch, Route, Link} from \"react-router-dom\";\n\n\n//les pages accessibles depuis la navbar\nimport Home from \"../pages/home/home\";\nimport Login from \"../pages/login/login\";\nimport UpdatePassword from \"../pages/update-password/update-password\";\nimport AfficherExposant from \"../pages/societe/AfficherExposant\";\nimport HandleAccounts from \"../pages/handle-accounts/handle-accounts\";\nimport Festivals from \"../pages/festivals/Festivals\";\nimport TypeJeux from \"../pages/type-jeux/type-jeux\"\nimport {Jeux} from \"../pages/jeux/jeux\";\nimport PrivateRoute from \"./privateRoute\";\nimport FestivalGames from \"../pages/festival-games/festival-games\";\nimport ExhibitorMonitoring from \"../pages/exhibitor-monitoring/exhibitor-monitoring\";\nimport AfficherSocieteRole from \"../pages/societe/AfficherSocieteRole\";\nimport FormLocalisation from \"../components/festivals/FormLocalisation\";\nimport Reservation from \"../pages/reservation/Reservation\";\nimport AfficherEditeur from \"../pages/societe/AfficherEditeurs\";\nimport ZonesFestivals from \"../pages/zone-festival/AffichageZone\";\nimport Facturation from \"../pages/reservation/Facturation\";\n\n\n// DANS LE SWITCH\n//exact permet de dire que c'est la page par defaut\n//Private route = route accessibe que quand login\nfunction Routes() {\n    return (\n        <div className=\"App\">\n\n            <Switch>\n                <Route exact path='/' component={Home}/>\n                <Route path='/login' component={Login}/>\n                <Route path='/festival-games' component={FestivalGames}/>\n                <Route path='/reservations' component={Reservation}/>\n                <Route path='/festival-zones' component={ZonesFestivals}/>\n                <Route path='/facturation' component={Facturation}/>\n                <PrivateRoute path='/update-password' component={UpdatePassword}/>\n                <PrivateRoute path='/exposants' component={AfficherExposant}/>\n                <Route path='/editeurs' component={AfficherEditeur}/>\n                <PrivateRoute path='/societes' component={AfficherSocieteRole}/>\n                <PrivateRoute path='/handle-accounts' component={HandleAccounts}/>\n                <PrivateRoute path='/festivals' component={Festivals}/>\n                <PrivateRoute path='/localisation' component={FormLocalisation}/>\n                <PrivateRoute path='/jeux' component={Jeux}/>\n                <PrivateRoute path='/type-jeux' component={TypeJeux}/>\n                <PrivateRoute path='/exhibitor-monitoring/:idExposant' component={ExhibitorMonitoring}/>\n            </Switch>\n        </div>\n    )\n}\n\nexport default Routes\n","import {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faFacebook, faInstagram, faTwitter} from \"@fortawesome/free-brands-svg-icons\";\nimport {faEnvelope, faMapMarker, faPhone} from \"@fortawesome/free-solid-svg-icons\";\nimport logo from \"../../../assets/img/logo.png\";\nimport React from \"react\";\nimport './CustomFooter.css'\n\nfunction CustomFooter() {\n\n    return (\n        <div>\n            <footer className=\"footer\">\n                <div className=\"footer-left col-md-4 col-sm-6\">\n                    <p className=\"about\">\n                        <span> A propos</span> Depuis 2015, l’organisation du Festival du Jeu de Montpellier est\n                        soutenue par un collectif d’associations.\n\n                        Les bénévoles qui animent notre Festival sont bien souvent membres de ces associations. Et c’est\n                        bien normal, le reste de l’année, les joueurs jouent et se retrouvent lors d’événements\n                        organisés par leurs associations : soirées jeux, week-end jeux, festivals de jeux, etc.\n\n                    </p>\n                    <div className=\"icons\">\n                        <a href=\"https://www.facebook.com/festivaldujeudemontpellier/\"><FontAwesomeIcon\n                            icon={faFacebook}/></a>\n                        <a href=\"https://twitter.com/FestivalJeuMpl\"><FontAwesomeIcon icon={faTwitter}/></a>\n                        <a href=\"https://www.instagram.com/festivaldujeumontpellier/\"><FontAwesomeIcon\n                            icon={faInstagram}/></a>\n                    </div>\n                </div>\n                <div className=\"footer-center col-md-4 col-sm-6\">\n                    <div>\n                        <FontAwesomeIcon id=\"fa\" icon={faMapMarker}/>\n                        <p><span> Boulevard Charles Warnery</span> Montpellier, France</p>\n                    </div>\n                    <div>\n                        <FontAwesomeIcon id=\"fa\" icon={faPhone}/>\n                        <p> (+00) 0000 000 000</p>\n                    </div>\n                    <div>\n                        <FontAwesomeIcon id=\"fa\" icon={faEnvelope}/>\n                        <p>contact@festivaldujeu-montpellier.org</p>\n                    </div>\n                </div>\n                <div className=\"footer-right col-md-4 col-sm-6\">\n                    <img id=\"logoFestival\" src={logo}/>\n                    <p className=\"menu\">\n                        <a href=\"#\"> Home</a> |\n                        <a href=\"#\"> About</a> |\n                        <a href=\"#\"> Services</a> |\n                        <a href=\"#\"> Portfolio</a> |\n                        <a href=\"#\"> News</a> |\n                        <a href=\"#\"> Contact</a>\n                    </p>\n                    <p className=\"name\"> Festival du jeu de Montpellier &copy; 2021</p>\n                    <p className=\"name\"> Marine Téroitin - Laura Biasibetti - Aymeric Couprie</p>\n                </div>\n            </footer>\n        </div>\n    )\n}\n\n\nexport default CustomFooter\n","import React, {createContext, useEffect, useState} from \"react\";\n\n//pour avoir la navbar sur toutes les pages on l'a mise dans un component\nimport CustomHeader from \"./app/components/headerfooter/CustomHeader\";\nimport Routes from \"./app/routes/routes\"\nimport CustomFooter from \"./app/components/headerfooter/CustomFooter\"\nimport Axios from \"axios\";\n\n\nexport const FestivalContext = createContext({\n    selectedFestival: {\n        fes_id: 0,\n        fes_date: new Date()\n    },\n    setSelectedFestival: Function\n})\n\nfunction App() {\n\n    const [prochainFestival, setProchainFestival] = useState({\n        fes_id: 0,\n        fes_date: new Date()\n    });\n    const [isWhatever, setIsWhatever] = useState(false); // used to update the date in the header instead of reloading the page\n    const value = {selectedFestival: prochainFestival, setSelectedFestival: setProchainFestival}\n\n    //méthode qui s'appelle au chargement de la page\n    useEffect(() => {\n        Axios.get(\"/server/festivals/closest\")\n            .then((res) => {\n                //localStorage.setItem(\"currentFestival\", res.data.closestFestival[0].fes_id);\n                setProchainFestival(res.data.closestFestival[0]);\n            })\n    }, [isWhatever]);\n\n    return (\n        <div className=\"App\">\n            {prochainFestival &&\n            <FestivalContext.Provider value={value}>\n                <CustomHeader/>\n                <Routes/>\n                <CustomFooter/>\n            </FestivalContext.Provider>\n            }\n        </div>\n    );\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { BrowserRouter as Router} from 'react-router-dom';\nimport \"./index.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n      <Router>\n          <App/>\n      </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}