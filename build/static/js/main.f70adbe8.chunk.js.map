{"version":3,"sources":["app/utils/utils.js","app/components/headerfooter/CustomHeader.js","assets/img/logo.png","app/pages/home/home.js","app/pages/login/login.js","app/pages/update-password/update-password.js","app/components/tables/Filters.js","app/components/tables/TableContainer.js","app/components/ModalForm/modal.js","app/components/ModalForm/triggerButton.js","app/components/ModalForm/container.js","app/pages/societe/formSociete.js","app/components/contact/CardContact.js","app/pages/societe/AfficherExposant.js","app/pages/handle-accounts/registerForm.js","app/pages/handle-accounts/handle-accounts.js","app/components/festivals/FormLocalisation.js","app/pages/festivals/FormFestival.js","app/components/tables/SimpleTableContainer.js","app/components/festivals/CardFestival.js","app/pages/festivals/Festivals.js","app/pages/type-jeux/formType.js","app/pages/type-jeux/type-jeux.js","app/pages/jeux/formJeu.js","app/pages/jeux/jeux.js","app/routes/privateRoute.js","app/pages/festival-games/festival-games.js","app/pages/exhibitor-monitoring/reservationForm.js","app/components/contact/FormContact.js","app/pages/exhibitor-monitoring/exhibitor-monitoring.js","app/pages/societe/AfficherSocieteRole.js","app/pages/reservation/Reservation.js","app/pages/societe/AfficherEditeurs.js","app/routes/routes.js","app/components/headerfooter/CustomFooter.js","App.js","index.js"],"names":["isAdmin","token","localStorage","getItem","jwt_decode","user_estAdmin","isLogin","jwt","verify","err","decoded","email","user_email","CustomHeader","useState","setDateFestivalCourant","selectedFestival","useContext","FestivalContext","history","useHistory","useEffect","fes_id","Axios","get","then","res","data","festival","fes_date","Navbar","collapseOnSelect","fixed","expand","bg","variant","Toggle","aria-controls","Collapse","id","Nav","NavDropdown","title","className","to","Button","onClick","removeItem","push","window","location","reload","icon","faShapes","faChessKnight","faUser","faTheaterMasks","Moment","format","faCalendarAlt","faClipboardList","faFileInvoiceDollar","faAddressBook","faUserTag","faDice","faTh","Home","dateProchainFestival","setdateProchainFestival","setItem","closestFestival","src","logo","xmlns","width","height","fill","viewBox","d","Login","setEmail","password","setPassword","errortext","setErrortext","Form","onSubmit","event","dataToSend","JSON","stringify","fetch","method","body","headers","Accept","ok","json","responseJson","error","preventDefault","FormText","Group","size","controlId","Label","Control","autoFocus","type","value","onChange","e","target","block","disabled","length","UpdatePassword","olderPassword","setOlderPassword","newPassword","setNewPassword","confirmedPassword","setConfirmedPassword","show","setShow","Alert","success","Filter","column","style","marginTop","canFilter","render","DefaultColumnFilter","filterValue","setFilter","preFilteredRows","Input","undefined","placeholder","SelectColumnFilter","options","React","useMemo","Set","forEach","row","add","values","CustomInput","map","option","index","TableContainer","columns","renderRowSubComponent","useTable","defaultColumn","initialState","pageIndex","pageSize","useFilters","useSortBy","useExpanded","usePagination","getTableProps","getTableBodyProps","headerGroups","page","prepareRow","visibleColumns","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","state","generateSortingIndicator","isSorted","isSortedDesc","Table","bordered","hover","responsive","headerGroup","getHeaderGroupProps","getHeaderProps","getSortByToggleProps","cells","cell","getCellProps","isExpanded","colSpan","getRowProps","key","Row","maxWidth","margin","textAlign","Col","md","min","max","defaultValue","Number","Modal","onClickOutside","onKeyDown","modalRef","buttonRef","closeModal","Component","component","ReactDOM","createPortal","tag","role","tabIndex","aria-modal","ref","aria-label","aria-labelledby","document","Trigger","triggerText","showModal","Container","isShown","setState","closeButton","focus","toggleScrollLock","submit","console","log","props","TriggerButton","keyCode","modal","contains","querySelector","classList","toggle","Fragment","this","n","FormSociete","nom","setNom","ville","setVille","rue","setRue","codePostal","setCodePostal","pays","setPays","CardContact","contact","co_nom","co_prenom","co_telPortable","co_telFixe","co_principal","CardText","color","toUpperCase","marginRight","AfficherExposant","societe","setListSociete","optionsDiscussion","setOptionsDiscussion","libelle","response","societes","updateDateContact","suivE_id","numeroRelance","put","suivE_dateContact","Header","Cell","getToggleRowExpandedProps","faEyeSlash","faInfoCircle","accessor","href","soc_id","original","as","suivi_exposants","suivE_commentaire","suivD_id","toString","disableSortBy","filter","backgroundColor","find","element","parseInt","selected","suivD_libelle","reservations","String","espace","esp_qte","esp_enTables","suivE_benevole","defaultChecked","checked","suivE_nbBenevoles","suivE_deplacement","res_facture","res_id","suivE_dateContact1","suivE_dateContact2","suivE_dateContact3","contacts","soc_nom","soc_rue","soc_ville","soc_codePostal","columnCount","display","padding","Card","CardBody","CardTitle","RegisterForm","estAdmin","setEstAdmin","Check","inline","label","HandleAccounts","userList","setUserList","delete","post","FormLocalisation","loc_libelle","setLibelle","loc_prixTable","setPrixTable","loc_prixM2","setPrixM2","FormFestival","setDate","SimpleTableContainer","CardFestival","fes","updateDate","festivalDate","localisationList","setLocalList","setSelectedFestival","rowIndex","loc_id","new_priceTable","updatePriceTable","new_priceM2","updatePriceM2","Festivals","festivals","setListFestivals","allFestivals","updateDateFestival","new_date","a","fest","i","FormType","TypeJeu","gameTypeList","setGameTypeList","typJ_id","updateType","FormJeu","setTitle","minAge","setMinAge","duration","setDuration","maxNumPlayers","setMaxNumPlayers","minNumPlayers","setMinNumPlayers","rulesLink","setRulesLink","companyId","setCompanyId","gameTypeId","setGameTypeId","editeursList","setEditeursList","object","typJ_libelle","Jeux","listeJeux","setListeJeux","j_id","editeurId","typeId","updateGameTypeId","ageMin","updateageMin","nbjMin","updatenbjMin","j_nbMinJoueurs","nbjMax","updatenbjMax","duree","updateDuree","lienNotice","updateNotice","PrivateRoute","rest","redirection","pathname","from","FestivalGames","zoneList","setZoneList","result","suivJ_id","zo_id","zo_libelle","reservation","suivJ_prototype","suivJ_place","res_envoiDebut","suivJ_recu","suivJ_aRenvoyer","suivJ_renvoye","suivJ_dateSaisie","suivJ_tombola","suivJ_dotation","suivJ_nbJeuxRecus","suivJ_nbJeuxExposes","jeu","j_ageMin","j_nbMaxJoueurs","j_duree","j_lienNotice","CardLink","FormReservation","localisations","setLocalisations","FormContact","prenom","setPrenom","telPortable","setTelPortable","telFixe","setTelFixe","fonction","setFonction","principal","setPrincipal","ExhibitorMonitoring","idExposant","useParams","contactList","setContactList","name","setName","showNewContact","setShowNewContact","showAdress","setShowAdress","setSoc_ville","setSoc_rue","setSoc_codePostal","soc_pays","setSoc_pays","suivi","setSuivi","setReservation","commentaire","setCommentaire","espaces","setEspaces","resaExist","setResaExist","CalculerPrix","faCheckCircle","Accordion","eventKey","Body","co_mail","co_rue","co_codePostal","co_ville","co_pays","res_prixRetour","res_dateFacturation","res_paiement","res_datePaiement","prix","CalculerPrixTOT","res_prixNegocie","AfficherSocieteRole","fetchData","soc_estInactif","role_festival","rolF_estExposant","rolF_estEditeur","Reservation","listReservations","setListReservations","listLocalisation","setListLocalisation","step","AfficherEditeur","games","jeus","game","j_titre","Routes","exact","path","TypeJeux","CustomFooter","faFacebook","faTwitter","faInstagram","faMapMarker","faPhone","faEnvelope","createContext","Date","Function","App","prochainFestival","setProchainFestival","isWhatever","Provider","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f70adbe8.chunk.js","sourcesContent":["import jwt_decode from \"jwt-decode\";\nimport jwt from \"jsonwebtoken\";\n\nexport function isAdmin() {\n    const token = localStorage.getItem(\"userToken\");\n    return token ? jwt_decode(token).user_estAdmin : null;\n}\n\nexport function isLogin() {\n    const token = localStorage.getItem(\"userToken\");\n    if (token) {\n        return jwt.verify(token, \"secret\", (err, decoded) => {\n            return !err;\n        })\n\n    } else {\n        return false\n    }\n}\n\nexport function email(){\n    const token = localStorage.getItem(\"userToken\");\n    return token ? jwt_decode(token).user_email : null\n}\n\n","import {Container, Nav, Navbar, NavDropdown} from \"react-bootstrap\";\nimport {email, isAdmin, isLogin} from \"../../utils/utils\";\nimport Button from \"react-bootstrap/Button\";\nimport {useHistory} from \"react-router-dom\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {Link} from \"react-router-dom\"\n\nimport {\n    faUser,\n    faAddressBook,\n    faCalendarAlt,\n    faDice,\n    faClipboardList,\n    faFileInvoiceDollar,\n    faTh,\n    faShapes,\n    faTheaterMasks,\n    faChessKnight,\n    faUserTag\n} from \"@fortawesome/free-solid-svg-icons\";\nimport './CustomHeader.css'\nimport React, {useContext, useEffect, useState} from \"react\";\nimport Axios from \"axios\";\nimport Moment from \"moment\";\nimport {FestivalContext} from \"../../../App\";\n\n\nconst CustomHeader = () => {\n\n    const [dateFestivalCourant, setDateFestivalCourant] = useState(null);\n\n    const {selectedFestival} = useContext(FestivalContext)\n\n    const history = useHistory();\n\n    function logout() {\n        localStorage.removeItem(\"userToken\")\n        history.push(\"/\")\n        window.location.reload(false)\n    }\n\n    //méthode qui s'appelle au chargement de la page\n    useEffect(() => {\n\n        const fes_id = localStorage.getItem(\"currentFestival\");\n\n        Axios.get(`/server/festivals/${fes_id}`)\n            .then((res) => {\n                setDateFestivalCourant(res.data.festival.fes_date)\n            })\n\n\n    });\n\n\n    //mettre dans isAdmin les pages accecibles uniquement à l'admin\n//idem pour isLogin ---------------------------------- si on est connecté\n// à la fin les pages accéssibles à tous\n\n    return (\n        <div>\n            <header>\n                <Navbar collapseOnSelect fixed='top' expand='lg' bg='dark' variant='dark'>\n                    <Container>\n                        <Navbar.Toggle aria-controls='responsive-navbar-nav'/>\n                        <Navbar.Collapse id='responsive-navbar-nav'>\n                            {\n                                isLogin() ? (\n                                    <Nav>\n                                        <NavDropdown title={email()} id=\"who\">\n                                            <Link className=\"nav-link\" id=\"dropdownItem\" to='/update-password'>Changer\n                                                de mot de\n                                                passe\n                                            </Link>\n                                            <Button variant=\"link\" onClick={logout}>Se déconnecter</Button>\n                                        </NavDropdown>\n                                    </Nav>\n                                ) : (\n\n                                    <Nav>\n                                        <Link className=\"nav-link\" to='/login'>Se connecter</Link>\n                                    </Nav>\n                                )\n                            }\n                            {\n                                isLogin() ? (\n                                    <Nav>\n                                        <NavDropdown title=\"Paramètres\">\n                                            <Link  className=\"nav-link\"id =\"dropdownItem\" to='/type-jeux'>\n                                                <FontAwesomeIcon className=\"faicon\" icon={faShapes}/>\n                                                Types de jeux\n                                            </Link>\n                                            <Link  className=\"nav-link\" id=\"dropdownItem\" to='/jeux'>\n                                                <FontAwesomeIcon className=\"faicon\" icon={faChessKnight}/>\n                                                Jeux\n                                            </Link>\n\n                                            {\n                                                isAdmin() ? (\n                                                    <Link className=\"nav-link\" id=\"dropdownItem\" to='/handle-accounts'>\n                                                        <FontAwesomeIcon className=\"faicon\" icon={faUser}/>\n                                                        Gérer les comptes\n                                                    </Link>\n\n                                                ) : null\n                                            }\n\n                                        </NavDropdown>\n                                        <Nav>\n                                            <div id=\"fesC\">\n                                                <FontAwesomeIcon className=\"faicon\" icon={faTheaterMasks}/> Festival\n                                                courant:\n                                            </div>\n\n                                            <NavDropdown title={Moment(selectedFestival.fes_date).format('DD/MM/YYYY')}\n                                                         id=\"who\">\n                                                <Link  className=\"nav-link\" id=\"dropdownItem\" to='/festivals'>\n                                                    <FontAwesomeIcon className=\"faicon\" icon={faCalendarAlt}/>\n                                                    Festivals\n                                                </Link>\n                                            </NavDropdown>\n\n                                            <Link className=\"nav-link\" to='/reservations'>\n                                                <FontAwesomeIcon className=\"faicon\" icon={faClipboardList}/>\n                                                Reservations\n                                            </Link>\n                                            {\n                                                isAdmin() ? (\n                                                    <Link  className=\"nav-link\" to='/'>\n                                                        <FontAwesomeIcon className=\"faicon\" icon={faFileInvoiceDollar}/>\n                                                        Facture\n                                                    </Link>\n                                                ) : null\n                                            }\n                                        </Nav>\n                                    </Nav>\n                                ) : null\n                            }\n\n\n                            <Nav>\n\n                                <NavDropdown title={\"Gestion sociétés\"} id=\"who\">\n\n                                    <Link className=\"nav-link\" to='/exposants' id=\"dropdownItem\">\n                                        <FontAwesomeIcon className=\"faicon\" icon={faAddressBook}/>\n                                        Exposants\n                                    </Link>\n\n                                    <Link className=\"nav-link\" to='/societes' id=\"dropdownItem\">\n                                        <FontAwesomeIcon className=\"faicon\" icon={faUserTag}/>\n                                        Rôles Societes\n                                    </Link>\n\n                                    <Link className=\"nav-link\" to='/editeurs' id=\"dropdownItem\">\n                                        <FontAwesomeIcon className=\"faicon\" icon={faAddressBook}/>\n                                        Editeurs\n                                    </Link>\n                                </NavDropdown>\n\n\n                                <Link className=\"nav-link\" to='/festival-games'>\n                                    <FontAwesomeIcon className=\"faicon\" icon={faDice}/>\n                                    Jeux festival\n                                </Link>\n                                <Link className=\"nav-link\" to='/'>\n                                    <FontAwesomeIcon className=\"faicon\" icon={faTh}/>\n                                    Zones festival\n                                </Link>\n\n                            </Nav>\n\n                        </Navbar.Collapse>\n                    </Container>\n                </Navbar>\n            </header>\n        </div>\n    )\n}\n\nexport default CustomHeader\n","export default __webpack_public_path__ + \"static/media/logo.b3125042.png\";","import logo from \"../../../assets/img/logo.png\";\nimport React, {useEffect, useState} from \"react\";\nimport Axios from \"axios\";\nimport Moment from 'moment';\nimport './home.css';\n\nexport default function Home() {\n    const [dateProchainFestival, setdateProchainFestival] = useState(null);\n\n    //méthode qui s'appelle au chargement de la page\n    useEffect(() => {\n        Axios.get(\"/server/festivals/closest\")\n            .then((res) => {\n                localStorage.setItem(\"currentFestival\", res.data.closestFestival[0].fes_id);\n                setdateProchainFestival(res.data.closestFestival[0].fes_date);\n            })\n\n\n    });\n\n    return (\n\n        <>\n            <body className=\"home\">\n\n            <div className=\"flex-container\">\n                <div className=\"flex-item\">\n                    <img id=\"image\" src={logo}/>\n                </div>\n                <div className=\"flex-item\">\n                    <h1>SORTONS JOUER !</h1>\n                    <h2> RENDEZ VOUS</h2>\n                    <h3>\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\"\n                             className=\"bi bi-caret-right-fill\" viewBox=\"0 0 16 16\">\n                            <path\n                                d=\"M12.14 8.753l-5.482 4.796c-.646.566-1.658.106-1.658-.753V3.204a1 1 0 0 1 1.659-.753l5.48 4.796a1 1 0 0 1 0 1.506z\"/>\n                        </svg>\n                        {Moment(dateProchainFestival).format('DD/MM/YYYY')}\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\"\n                             className=\"bi bi-caret-left-fill\" viewBox=\"0 0 16 16\">\n                            <path\n                                d=\"M3.86 8.753l5.482 4.796c.646.566 1.658.106 1.658-.753V3.204a1 1 0 0 0-1.659-.753l-5.48 4.796a1 1 0 0 0 0 1.506z\"/>\n                        </svg>\n                    </h3>\n                    <p id=\"phraseGratuite\">Entrée libre et gratuite</p>\n                </div>\n            </div>\n\n            </body>\n        </>\n    );\n}\n","import React, {useState} from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport FormText from \"react-bootstrap/FormText\";\n\nimport {useHistory} from \"react-router\"\nimport \"./login.css\";\nimport logo from \"../../../assets/img/logo.png\";\n\n\n\n\nconst Login = () => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [errortext, setErrortext] = useState(\"\");\n\n    const history = useHistory();\n\n    function validateForm() {\n        return email.length > 0 && password.length > 0;\n    }\n\n    function handleSubmit(event) {\n        setErrortext(\"\")\n\n        //variable à envoyer au back sous format JSON\n        let dataToSend = JSON.stringify({\n            email,\n            password,\n        });\n\n        //appel au back\n        fetch(`/server/login`, {\n            method: \"POST\",\n            body: dataToSend,\n            headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n            },\n        }).then((res) => {\n            // If response was successful parse the json and dispatch an update\n            if (res.ok) {\n                res.json().then((responseJson) => {\n                    if (responseJson.token) {\n                        //stock le token en local\n                        //localStorage.getItem(\"userToken\") pour y acceder\n                        localStorage.setItem(\"userToken\", responseJson.token)\n                        history.push(\"/festivals\")\n                        window.location.reload(false)\n                    } else {\n                        setErrortext(responseJson.error);\n\n                    }\n                })\n            }\n        });\n\n        event.preventDefault();\n\n    }\n\n    return (\n        <div className=\"EspaceFooter\">\n            <img id=\"logo\" src={logo}/>\n            <div className=\"Login\">\n                <Form onSubmit={handleSubmit}>\n                    {/* equivalent du if/else */}\n                    {errortext !== \"\" ? (\n                        <FormText id=\"errorLabel\">{errortext}</FormText>\n                    ) : null}\n                    <Form.Group size=\"lg\" controlId=\"email\">\n                        <Form.Label>Email</Form.Label>\n                        <Form.Control\n                            autoFocus\n                            type=\"email\"\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                        />\n                    </Form.Group>\n                    <Form.Group size=\"lg\" controlId=\"password\">\n                        <Form.Label>Mot de passe</Form.Label>\n                        <Form.Control\n                            type=\"password\"\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                        />\n                    </Form.Group>\n                    <Button id=\"btn-connexion\" block size=\"lg\" type=\"submit\" disabled={!validateForm()}>\n                        Connexion\n                    </Button>\n\n                </Form>\n            </div>\n        </div>\n    );\n}\n\nexport default Login\n","import React, {useEffect, useState} from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport FormText from \"react-bootstrap/FormText\";\nimport Alert from 'react-bootstrap/Alert';\nimport logo from \"../../../assets/img/logo.png\";\nimport {email} from \"../../utils/utils\";\n\nimport './update-password.css'\n\nexport default function UpdatePassword(){\n    const [olderPassword, setOlderPassword] = useState(\"\");\n    const [newPassword, setNewPassword] = useState(\"\");\n    const [confirmedPassword, setConfirmedPassword] = useState(\"\");\n    const [errortext, setErrortext] = useState(\"\");\n    const [show, setShow] = useState(false)\n\n    function validateForm() {\n        return olderPassword.length > 0 && newPassword.length > 0 && confirmedPassword.length > 0;\n    }\n\n    function handleSubmit(event) {\n\n        if(newPassword != confirmedPassword){\n            setErrortext(\"Les deux mots de passe doivent être identiques\");\n        }else{\n            setErrortext(\"\");\n            //variable à envoyer au back sous format JSON\n            let dataToSend = JSON.stringify({\n                newPassword,\n                olderPassword\n            });\n            //appel au back\n            fetch(`/server/update-password/${email()}`, {\n                method: \"POST\",\n                body: dataToSend,\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                },\n            }).then((res) => {\n\n                // If response was successful parse the json and dispatch an update\n                if (res.ok) {\n                    res.json().then((responseJson) => {\n                        if (responseJson.success) {\n                            setShow(true)\n                        } else {\n                            setErrortext(responseJson.error);\n                        }\n                    })\n                }\n            });\n            event.preventDefault();\n        }\n\n    }\n    return(\n        <div className=\"EspaceFooter\">\n            <Alert id=\"alertSucces\" variant=\"success\" show={show}>\n                Mot de passe modifié avec succès!\n            </Alert>\n            <img id=\"logo\" src={logo} />\n            <div className=\"Password\">\n                <Form onSubmit={handleSubmit}>\n                    {/* equivalent du if/else */}\n                    {errortext !== \"\" ? (\n                        <FormText id=\"errorLabel\">{errortext}</FormText>\n                    ) : null}\n                    <Form.Group size=\"lg\" controlId=\"oldPassword\">\n                        <Form.Label>Ancien mot de passe</Form.Label>\n                        <Form.Control\n                            autoFocus\n                            type=\"password\"\n                            value={olderPassword}\n                            onChange={(e) => setOlderPassword(e.target.value)}\n                        />\n                    </Form.Group>\n                    <Form.Group size=\"lg\" controlId=\"newPassword\">\n                        <Form.Label>Nouveau mot de passe</Form.Label>\n                        <Form.Control\n                            type=\"password\"\n                            value={newPassword}\n                            onChange={(e) => setNewPassword(e.target.value)}\n                        />\n                    </Form.Group>\n                    <Form.Group size=\"lg\" controlId=\"confirmedPassword\">\n                        <Form.Label>Confirmer le nouveau mot de passe</Form.Label>\n                        <Form.Control\n                            type=\"password\"\n                            value={confirmedPassword}\n                            onChange={(e) => setConfirmedPassword(e.target.value)}\n                        />\n                    </Form.Group>\n                    <Button id=\"btn-validate\" block size=\"lg\" type=\"submit\" disabled={!validateForm()}>\n                        Valider\n                    </Button>\n                </Form>\n            </div>\n\n        </div>\n    );\n}","import React from 'react';\nimport {Input, CustomInput} from 'reactstrap';\n\nexport const Filter = ({column}) => {\n    return (\n        <div style={{marginTop: 5}}>\n            {column.canFilter && column.render('Filter')}\n        </div>\n    );\n};\n\n/**\n * Default filter --> Search menu\n *\n * @param filterValue\n * @param setFilter\n * @param length\n * @returns {JSX.Element}\n * @constructor\n */\nexport const DefaultColumnFilter = (\n    {\n        column: {\n            filterValue,\n            setFilter,\n            preFilteredRows: {length},\n        },\n    }) => {\n    return (\n        <Input\n            value={filterValue || ''}\n            onChange={(e) => {\n                setFilter(e.target.value || undefined);\n            }}\n            placeholder={`Rechercher...`}\n            //style={{width: 'auto'}}\n        />\n    );\n};\n\n/**\n * Type selector filter\n *        --> Selection between different types in column\n *\n * @param filterValue\n * @param setFilter\n * @param preFilteredRows\n * @param id\n * @returns {JSX.Element}\n * @constructor\n */\nexport const SelectColumnFilter = (\n    {\n        column: {filterValue, setFilter, preFilteredRows, id},\n    }) => {\n    const options = React.useMemo(() => {\n        const options = new Set();\n        preFilteredRows.forEach((row) => {\n            options.add(row.values[id]);\n        });\n        return [...options.values()];\n    }, [id, preFilteredRows]);\n\n    return (\n        <CustomInput\n            id='custom-select'\n            type='select'\n            value={filterValue}\n            //style={{width: 'auto'}}\n            onChange={(e) => {\n                setFilter(e.target.value || undefined);\n            }}\n        >\n            <option value=''>Tous</option>\n            {options.map((option, index) => (\n                <option key={option} value={option}> {option} </option>\n            ))}\n        </CustomInput>\n    );\n};\n","import React, {Fragment} from 'react';\nimport './TableContainer.css'\nimport {\n    useTable,\n    useSortBy,\n    useFilters,\n    useExpanded,\n    usePagination,\n} from 'react-table';\nimport {Table, Row, Col, Button, Input, CustomInput} from 'reactstrap';\nimport {Filter, DefaultColumnFilter} from './Filters';\n\nconst TableContainer = ({columns, data, renderRowSubComponent}) => {\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        page,\n        prepareRow,\n        visibleColumns,\n        canPreviousPage,\n        canNextPage,\n        pageOptions,\n        pageCount,\n        gotoPage,\n        nextPage,\n        previousPage,\n        setPageSize,\n        state: {pageIndex, pageSize},\n    } = useTable(\n        {\n            columns,\n            data,\n            defaultColumn: {Filter: DefaultColumnFilter},\n            initialState: {pageIndex: 0, pageSize: 10},\n        },\n        useFilters,\n        useSortBy,\n        useExpanded,\n        usePagination\n    );\n\n    const generateSortingIndicator = (column) => {\n        return column.isSorted ? (column.isSortedDesc ? ' 🔽' : ' 🔼') : '';\n    };\n\n    const onChangeInSelect = (event) => {\n        setPageSize(Number(event.target.value));\n    };\n\n    const onChangeInInput = (event) => {\n        const page = event.target.value ? Number(event.target.value) - 1 : 0;\n        gotoPage(page);\n    };\n\n    return (\n        <Fragment>\n            <Table bordered hover {...getTableProps()} responsive>\n\n                {/* En-tete du tableau (avec les menu de recherches/tris)*/}\n                <thead>\n                {headerGroups.map((headerGroup) => (\n                    <tr  {...headerGroup.getHeaderGroupProps()}>\n                        {headerGroup.headers.map((column) => (\n                            <th {...column.getHeaderProps()}>\n                                <div {...column.getSortByToggleProps()}>\n                                    {column.render('Header')}\n                                    {generateSortingIndicator(column)}\n                                </div>\n                                <Filter column={column}/>\n                            </th>\n                        ))}\n                    </tr>\n                ))}\n                </thead>\n\n\n                {/* Affichage des données*/}\n                <tbody {...getTableBodyProps()} style={{width: 'auto'}}>\n                {page.map((row) => {\n                    prepareRow(row);\n                    return (\n                        <Fragment key={row.getRowProps().key}>\n\n                            {/* Contenu pour chaque ligne*/}\n                            <tr >\n                                {row.cells.map((cell) => {\n                                    return (\n                                        <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                                    );\n                                })}\n                            </tr>\n\n                            {/* Affichage du contenu supplémentaire (details) */}\n                            {row.isExpanded && (\n                                <tr>\n                                    <td colSpan={visibleColumns.length}>\n                                        {renderRowSubComponent(row)}\n                                    </td>\n                                </tr>\n                            )}\n\n                        </Fragment>\n                    );\n                })}\n                </tbody>\n\n\n            </Table>\n\n\n            {/* Bas du tableau (changement de pages)*/}\n            <Row style={{maxWidth: 1000, margin: '0 auto', textAlign: 'center'}}>\n                {/* Most Left button --> Go back to page 0*/}\n\n                {/* go back buttons*/}\n                <Col md={3}>\n                    <Button\n                        id=\"pagination\"\n                        onClick={() => gotoPage(0)}\n                        disabled={!canPreviousPage}\n                    >\n                        {'<<'}\n                    </Button>\n\n                    {/* Left button --> Go to previous page*/}\n                    <Button\n                        id=\"pagination\"\n                        onClick={previousPage}\n                        disabled={!canPreviousPage}\n                    >\n                        {'<'}\n                    </Button>\n                </Col>\n\n\n                {/* Display the current page number*/}\n                <Col md={2} style={{marginTop: 7}}>\n                    Page{' '}\n                    <strong>\n                        {pageIndex + 1} sur {pageOptions.length}\n                    </strong>\n                </Col>\n\n                {/* TextField for selecting the page number*/}\n                <Col md={2}>\n                    <Input\n                        type='number'\n                        min={1}\n                        style={{width: 70}}\n                        max={pageOptions.length}\n                        defaultValue={pageIndex + 1}\n                        onChange={onChangeInInput}\n                    />\n                </Col>\n\n                {/* Slector for changing the number of items displayed per page */}\n                <Col md={2}>\n                    <CustomInput\n                        type='select'\n                        value={pageSize}\n                        id={\"selectionPage\"}\n                        onChange={onChangeInSelect}\n                    >\n                        {[10, 20, 30, 40, 50].map((pageSize) => (\n                            <option key={pageSize} value={pageSize}>\n                                Afficher {pageSize}\n                            </option>\n                        ))}\n                    </CustomInput>\n                </Col>\n\n\n                {/*Go forward buttons*/}\n                <Col md={3}>\n                    {/* Right button --> Go to next page*/}\n                    <Button id=\"pagination\" onClick={nextPage} disabled={!canNextPage}>\n                        {'>'}\n                    </Button>\n\n                    {/* Go to last page*/}\n                    <Button\n                        id=\"pagination\"\n                        onClick={() => gotoPage(pageCount - 1)}\n                        disabled={!canNextPage}\n                    >\n                        {'>>'}\n                    </Button>\n                </Col>\n            </Row>\n        </Fragment>\n    );\n};\n\nexport default TableContainer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport FocusTrap from 'focus-trap-react';\n\n\nexport const Modal = ({\n                          onClickOutside,\n                          onKeyDown,\n                          modalRef,\n                          buttonRef,\n                          closeModal,\n                          onSubmit,\n                          component: Component\n                      }) => {\n\n    return ReactDOM.createPortal(\n        <FocusTrap>\n            <aside\n                tag=\"aside\"\n                role=\"dialog\"\n                tabIndex=\"-1\"\n                aria-modal=\"true\"\n                className=\"modal-cover\"\n                onClick={onClickOutside}\n                onKeyDown={onKeyDown}\n            >\n                <div className=\"modal-area\" ref={modalRef}>\n                    <button\n                        ref={buttonRef}\n                        aria-label=\"Close Modal\"\n                        aria-labelledby=\"close-modal\"\n                        className=\"_modal-close\"\n                        onClick={closeModal}\n                    >\n            <span id=\"close-modal\" className=\"_hide-visual\">\n              Close\n            </span>\n                        <svg className=\"_modal-close-icon\" viewBox=\"0 0 40 40\">\n                            <path d=\"M 10,10 L 30,30 M 30,10 L 10,30\"/>\n                        </svg>\n                    </button>\n\n                    <div className=\"modal-body\">\n                        <Component onSubmit={onSubmit}/>\n                    </div>\n\n\n                </div>\n            </aside>\n        </FocusTrap>,\n        document.body\n    );\n};\n","import React from 'react';\nimport Button from \"react-bootstrap/Button\";\nimport './triggerButton.css'\n\n\nconst Trigger = ({ triggerText, buttonRef, showModal }) => {\n    return (\n        <Button id='buttonModal'\n            ref={buttonRef}\n            onClick={showModal}\n        >\n            {triggerText}\n        </Button>\n    );\n};\nexport default Trigger;","import React, {Component} from 'react';\nimport {Modal} from './modal';\nimport TriggerButton from './triggerButton';\n\nexport class Container extends Component {\n    state = {isShown: false};\n\n    showModal = () => {\n        this.setState({isShown: true}, () => {\n            this.closeButton.focus();\n        });\n        this.toggleScrollLock();\n    };\n\n    submit = (event) => {\n        console.log(this.props)\n        this.closeModal();\n        this.props.onSubmit(event);\n    }\n\n    closeModal = () => {\n        this.setState({isShown: false});\n        this.TriggerButton.focus();\n        this.toggleScrollLock();\n    };\n    onKeyDown = (event) => {\n        if (event.keyCode === 27) {\n            this.closeModal();\n        }\n    };\n    onClickOutside = (event) => {\n        if (this.modal && this.modal.contains(event.target)) return;\n        this.closeModal();\n    };\n\n    toggleScrollLock = () => {\n        document.querySelector('html').classList.toggle('scroll-lock');\n    };\n\n    render() {\n        return (\n            <React.Fragment>\n                <TriggerButton\n                    showModal={this.showModal}\n                    buttonRef={(n) => (this.TriggerButton = n)}\n                    triggerText={this.props.triggerText}\n                />\n                {this.state.isShown ? (\n                    <Modal\n                        onSubmit={this.submit}\n                        modalRef={(n) => (this.modal = n)}\n                        buttonRef={(n) => (this.closeButton = n)}\n                        closeModal={this.closeModal}\n                        onKeyDown={this.onKeyDown}\n                        onClickOutside={this.onClickOutside}\n                        component={this.props.component}\n                    />\n                ) : null}\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Container;\n\n","import Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport React, {useState} from \"react\";\n\nconst FormSociete = ({onSubmit}) => {\n\n    const [nom, setNom] = useState(\"\");\n    const [ville, setVille] = useState(\"\");\n    const [rue, setRue] = useState(\"\");\n    const [codePostal, setCodePostal] = useState(\"\");\n    const [pays, setPays] = useState(\"\");\n\n\n    function validateForm() {\n        return nom.length > 0;\n    }\n\n    return (\n        <Form onSubmit={onSubmit}>\n            <h4 id=\"titleGameForm\">Informations societe</h4>\n\n            <Form.Group size=\"lg\" controlId=\"nom\">\n                <Form.Label>Nom*</Form.Label>\n                <Form.Control autoFocus value={nom} onChange={(e) => setNom(e.target.value)}/>\n            </Form.Group>\n            <Form.Group size=\"lg\" controlId=\"ville\">\n                <Form.Label>Ville</Form.Label>\n                <Form.Control autoFocus value={ville} onChange={(e) => setVille(e.target.value)}/>\n            </Form.Group>\n            <Form.Group size=\"lg\" controlId=\"rue\">\n                <Form.Label>Rue</Form.Label>\n                <Form.Control autoFocus value={rue} onChange={(e) => setRue(e.target.value)}/>\n            </Form.Group>\n            <Form.Group size=\"lg\" controlId=\"codePostal\">\n                <Form.Label>Code Postal</Form.Label>\n                <Form.Control autoFocus value={codePostal} onChange={(e) => setCodePostal(e.target.value)}/>\n            </Form.Group>\n            <Form.Group size=\"lg\" controlId=\"pays\">\n                <Form.Label>Pays</Form.Label>\n                <Form.Control autoFocus value={pays} onChange={(e) => setPays(e.target.value)}/>\n            </Form.Group>\n\n            <p>* Champ obligatoire</p>\n            <div className=\"form-group\">\n                <Button id=\"btn-formGame\" block size=\"lg\" type=\"submit\" disabled={!validateForm()}>\n                    Submit\n                </Button>\n            </div>\n\n        </Form>\n    )\n}\n\nexport default FormSociete\n","import {CardBody, CardText} from \"reactstrap\";\n\nconst CardContact = (contact, ...res) => {\n\n    const {\n        co_nom,\n        co_prenom,\n        co_telPortable,\n        co_telFixe,\n        co_principal\n    } = contact.props\n\n    return (\n        <div>\n                <CardText style={{color: co_principal ? \"red\" : \"default\"}}>\n                    {co_nom.toUpperCase()} {co_prenom}\n                    <br/>\n                    <span style={{marginRight: '1rem'}}>\n                    Portable : {co_telPortable}\n                </span>\n                    <span>\n                    Fixe : {co_telFixe}\n                </span>\n                </CardText>\n        </div>\n    );\n}\n\nexport default CardContact;\n","import React, {useEffect, useState, useMemo} from \"react\";\nimport Axios from \"axios\"\n\nimport TableContainer from \"../../components/tables/TableContainer\";\nimport {SelectColumnFilter} from \"../../components/tables/Filters\";\nimport {Container} from \"../../components/ModalForm/container\";\nimport FormSociete from \"./formSociete\";\nimport CardContact from \"../../components/contact/CardContact\";\n\nimport './AfficherSociete.css'\n\nimport {Card, Form, Button} from \"react-bootstrap\";\nimport {CardBody, CardText, CardTitle} from \"reactstrap\";\n\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faEyeSlash, faInfoCircle} from \"@fortawesome/free-solid-svg-icons\";\nimport {useHistory} from \"react-router-dom\";\n\nexport default function AfficherExposant() {\n\n    const [societe, setListSociete] = useState([])\n    const [optionsDiscussion, setOptionsDiscussion] = useState([])\n\n    const history = useHistory()\n\n\n    const options = [\n        {id: 1, libelle: \"Absent\", color: \"rgb(200,56,56)\"},\n        {id: 2, libelle: \"Présence confirmée\", color: \"rgb(57,171,57)\"},\n        {id: 3, libelle: \"En discussion\", color: \"rgb(204, 255, 51)\"},\n        {id: 4, libelle: \"Présent (liste jeux demandée)\", color: \"rgb(57,171,57)\"},\n        {id: 5, libelle: \"Considéré absent\", color: \"rgb(255, 165, 0)\"},\n        {id: 6, libelle: \"Présent via distributeur\", color: \"rgb(57,171,57)\"},\n        {id: 7, libelle: \"Présent (liste jeux reçus)\", color: \"rgb(57,171,57)\"},\n        {id: 8, libelle: \"Non contacté\", color: \"rgb(212,226,234)\"}\n    ]\n\n\n    useEffect(() => {\n        Axios.get(`/server/festivals/affichageExposant/${localStorage.getItem(\"currentFestival\")}`)\n            .then((response) => {\n                setListSociete(response.data[0].societes)\n                console.log(response.data[0].societes)\n            })\n    }, [])\n\n    useEffect(() => {\n        Axios.get(\"/server/suiviExposant/getDiscussions\")\n            .then((response) => {\n                setOptionsDiscussion(response.data)\n                console.log(\"DISC\", response.data)\n            });\n    }, [])\n\n\n    const updateDateContact = (suivE_id, value, numeroRelance) => {\n        console.log(\"DATA\", suivE_id, numeroRelance)\n\n        Axios.put(`/server/suiviExposant/updateDateContact/${numeroRelance}`, {\n            suivE_id: suivE_id,\n            suivE_dateContact: value\n        })\n    }\n\n    const updateStatusFacture = (data, value) => {\n\n        Axios.put(\"/server/reservations/updateReservationFacture\", {\n            res_id: data.res_id, //row id=0 <==> soc_id = 1 --> d'où le +1\n            res_facture: value //'true' or 'false'\n        })\n    }\n\n    const updateStatusBenevole = (data, value) => {\n        Axios.put(\"/server/suiviExposant/updateBenevole\", {\n            suivE_id: data.suivE_id,\n            suivE_benevole: value\n        })\n    }\n\n    const updateStatusSeDeplace = (data, value) => {\n        console.log(data.suivE_id)\n        Axios.put(\"/server/suiviExposant/updateSeDeplace\", {\n            suivE_id: data.suivE_id,\n            suivE_deplacement: value\n        })\n    }\n\n    const updateNbBenevoles = (data, value) => {\n        Axios.put(\"/server/suiviExposant/updateNbBenevole\", {\n            suivE_id: data.suivE_id,\n            suivE_nbBenevoles: value\n        })\n    }\n\n\n    const updateStatusWorkflow = (data, value) => {\n        Axios.put(\"/server/suiviExposant/updateWorkflow\", {\n            suivE_id: data.suivE_id,\n            suivD_id: value\n        })\n\n        // const newSocietes = [...societe];\n        //\n        // const index = newSocietes.findIndex(s => s.soc_id === data.soc_id)\n        //\n        // newSocietes[index].suivD_id = value\n        //\n        // setListSociete(newSocietes)\n\n        window.location.reload()\n    }\n\n    const setAllAbsent = () => {\n        Axios.put(\"/server/suiviExposant/setAllAbsent\").then(\n            (response) => {\n                console.log(\"NOMBRE CONSIDERE ABS\", response)\n            }\n        )\n\n    }\n\n    const goToExhibitorMonitoring = (soc_id) => {\n        history.push('/exhibitor-monitoring/' + soc_id);\n        window.location.reload(false)\n\n    }\n\n\n    /**\n     * This method is declaring all the columns for the table\n     *\n     * @type {[{Header: (function(): null), id: string, Cell: (function({row: *}))}, {Header: string, accessor: string}, {filter: string, Header: string, Filter: (function({column: {filterValue: *, setFilter: *, preFilteredRows: *, id?: *}}): *), accessor: (function(*): string), id: string, disableSortBy: boolean, Cell: (function(*))}]}\n     */\n    const columns = useMemo(() => [\n            {\n                //This column is used for displaying more/less details\n                Header: () => null,\n                id: 'expander', // 'id' is required\n\n                Cell: ({row}) => (\n                    <span {...row.getToggleRowExpandedProps()}>\n                        {row.isExpanded ? <FontAwesomeIcon className=\"faiconDetail\" icon={faEyeSlash}/> :\n                            <FontAwesomeIcon className=\"faiconDetail\" icon={faInfoCircle}/>}\n                    </span>\n                ),\n            },\n            {\n                Header: \"Nom\",\n                accessor: \"soc_nom\",\n\n                Cell: row => {\n                    return (\n                        <a href=\"#\" onClick={() => goToExhibitorMonitoring(row.row.original.soc_id)}>{row.value}</a>\n                    )\n                }\n            },\n            {\n                Header: \"Commentaire\",\n                accessor: d => d,\n\n                Cell: row => {\n                    return (\n                        <Form.Control as={\"textarea\"}\n                                      value={row.value.suivi_exposants.length === 0 ? \"\" : row.value.suivi_exposants[0].suivE_commentaire}>\n                        </Form.Control>\n                    )\n                }\n            },\n\n            {\n                Header: \"WorkFlow\",\n                accessor: d => d.suivi_exposants.length === 0 ? null : d.suivi_exposants[0].suivD_id.toString(), //required cast from boolean to string\n\n                disableSortBy: true,\n                Filter: SelectColumnFilter,\n                filter: 'equals',\n\n                Cell: row => {\n                    return (\n                        <div>\n                            <Form.Control as={\"select\"}\n                                          onChange={(e) => updateStatusWorkflow(row.row.original.suivi_exposants[0], e.target.value)}\n                                          style={{backgroundColor: row.value == null ? 'default' : options.find(element => element.id === parseInt(row.value)).color}}>\n                                {\n                                    optionsDiscussion.map((option) =>\n                                        <option value={option.suivD_id}\n                                                selected={option.suivD_id === parseInt(row.value)}\n                                                key={option.suivD_id}\n                                                style={{backgroundColor: options.find(element => element.id === parseInt(option.suivD_id)).color}}>\n                                            {option.suivD_libelle}\n                                        </option>\n                                    )\n                                }\n                            </Form.Control>\n                        </div>\n                    )\n                }\n\n            },\n            {\n                id: \"espaceQte\",\n                Header: \"Tables\",\n                accessor: d => d.reservations.length == 0 ? \"NULL\" : String(`${d.reservations[0].espace.esp_qte}` + ' ' + `${d.reservations[0].espace.esp_enTables == 0 ? \"m²\" : \"Tables\"}`), //required cast from boolea to string\n            },\n            {\n                id: \"benevoles\",\n                Header: \"Bénévoles\",\n                accessor: d => d.suivi_exposants.length == 0 ? null : d.suivi_exposants[0].suivE_benevole.toString(), //required cast from boolean to string\n\n                //Allows column to be sorted depending on all content type (true/false)\n                disableSortBy: true,\n                Filter: SelectColumnFilter,\n                filter: 'equals',\n\n                Cell: row => {\n                    return (\n                        <div style={{'textAlign': 'center'}}>\n                            <input\n                                type=\"checkbox\"\n                                disabled={row.value == null}\n                                defaultChecked={(row.value == null || row.value == 'false') ? false : true}\n                                onChange={(event) => updateStatusBenevole(row.row.original.suivi_exposants[0], event.target.checked ? 1 : 0)}\n                            />\n                        </div>)\n                },\n            },\n\n            {\n                Header: \"Nb bénvoles\",\n                accessor: d => d.suivi_exposants.length == 0 ? null : d.suivi_exposants[0].suivE_nbBenevoles,\n\n                Cell: row => {\n                    return (\n                        <div style={{'textAlign': 'center'}}>\n                            <input\n                                type=\"number\"\n                                disabled={row.value == null}\n                                defaultValue={row.value}\n                                onChange={(event) => updateNbBenevoles(row.row.original.suivi_exposants[0], event.target.value)}\n                            />\n                        </div>)\n                },\n\n            },\n            {\n                Header: \"Se deplace\",\n                accessor: d => d.suivi_exposants.length == 0 ? null : d.suivi_exposants[0].suivE_deplacement.toString(),\n\n                disableSortBy: true,\n                Filter: SelectColumnFilter,\n                filter: 'equals',\n\n                Cell: row => {\n                    return (\n                        <div style={{'textAlign': 'center'}}>\n                            <input\n                                type=\"checkbox\"\n                                disabled={row.value == null}\n                                defaultChecked={(row.value == null || row.value == 'false') ? false : true}\n                                onChange={(event) => updateStatusSeDeplace(row.row.original.suivi_exposants[0], event.target.checked ? 1 : 0)}\n                            />\n                        </div>)\n                },\n\n\n            },\n            {\n                id: \"facture\",\n                Header: \"Facture\",\n                accessor: d => d.reservations.length == 0 ? 'NULL' : d.reservations[0].res_facture.toString(), //required cast from boolean to string\n\n\n                //Allows column to be sorted depending on all content type (true/false)\n                disableSortBy: true,\n                Filter: SelectColumnFilter,\n                filter: 'equals',\n\n                Cell: row => {\n                    return (\n                        <div style={{'textAlign': 'center'}}>\n                            <input\n                                disabled={row.value == null ? true : false}\n                                type=\"checkbox\"\n                                defaultChecked={(row.value == null || row.value == 'false') ? false : true}\n                                onChange={(event) => updateStatusFacture(row.row.original.reservations[0], event.target.checked ? 1 : 0)}\n                            />\n                        </div>)\n                },\n            },\n\n        ], [optionsDiscussion, societe]\n    )\n\n    /**\n     * This method is used to display more details for a given object\n     * It is actived when clicking on the first column for a specific row\n     *\n     * @param row\n     * @returns {JSX.Element}\n     */\n    const detailsExposant = (row) => {\n\n        let suivE_dateContact1 = null\n        let suivE_dateContact2 = null\n        let suivE_dateContact3 = null\n        let suivE_id = null\n\n        if (row.original.suivi_exposants.length != 0) {\n            suivE_dateContact1 = row.original.suivi_exposants[0].suivE_dateContact1;\n            suivE_dateContact2 = row.original.suivi_exposants[0].suivE_dateContact2;\n            suivE_dateContact3 = row.original.suivi_exposants[0].suivE_dateContact3;\n            suivE_id = row.original.suivi_exposants[0].suivE_id;\n\n        }\n\n        const contacts = row.original.contacts;\n\n        //Name of the attributes in a societe\n        const {\n            soc_nom,\n            soc_rue,\n            soc_ville,\n            soc_codePostal,\n            soc_id\n        } = row.original;\n\n        //Display the cards (more details)\n        return (\n            <div style={{columnCount: 2, display: 'flex', padding: '1rem'}}>\n                <Card style={{width: '50%', margin: '0 auto', marginRight: '1rem'}}>\n                    <CardBody>\n                        {\n                            console.log(\"SUIVE ID\", suivE_id)\n                        }\n                        <CardTitle>\n                            <strong>{`${soc_nom}`} </strong>\n                        </CardTitle>\n                        <CardText>\n                            <strong>Address : </strong>\n                            {`${soc_rue} ${soc_ville} - ${soc_codePostal}`}\n                        </CardText>\n                        <CardText>\n                            <strong>Date contact 1 </strong>\n                            <input type={'date'}\n                                   defaultValue={`${suivE_dateContact1}`}\n                                   onChange={(event) => updateDateContact(suivE_id, event.target.value, 1)}\n                            />\n                        </CardText>\n                        <CardText>\n                            <strong>Date contact 2 </strong>\n                            <input type={'date'}\n                                   defaultValue={`${suivE_dateContact2}`}\n                                   onChange={(event) => updateDateContact(suivE_id, event.target.value, 2)}\n                            />\n                        </CardText>\n                        <CardText>\n                            <strong>Date contact 3 </strong>\n                            <input type={'date'}\n                                   defaultValue={`${suivE_dateContact3}`}\n                                   onChange={(event) => updateDateContact(suivE_id, event.target.value, 3)}\n                            />\n                        </CardText>\n                    </CardBody>\n                </Card>\n\n\n                <Card style={{width: '50%', margin: '0 auto'}}>\n                    <CardBody>\n                        <CardTitle>\n                            <strong> Contacts </strong>\n                        </CardTitle>\n                        {\n                            contacts.map((contact) => {\n                                return (\n                                    <CardContact props={contact}/>\n                                )\n                            })\n                        }\n                    </CardBody>\n                </Card>\n            </div>\n        );\n    };\n\n    /*    const onSubmitContact = (event) => {\n            event.preventDefault(event);\n\n            console.log(\"CONTACT\", event)\n\n\n            Axios.post(`/server/contacts/add/${soc_id}`, {\n                co_nom: event.target.value.nom,\n                co_prenom: event.target.value.prenom,\n                co_telPortable: event.target.value.telPortable,\n                co_telFixe: event.target.value.telFixe,\n                co_rue: event.target.value.ville,\n                co_codePostal: event.target.value.codePostal,\n                co_fonction: event.target.value.fonction\n            }).then((response) => {\n                console.log(\"RESPONSE\", response)\n            })\n        }*/\n\n    const onSubmit = (event) => {\n        event.preventDefault(event);\n\n        console.log(\"PAS LA stp\")\n\n        Axios.post(\"/server/societe/add\", {\n            soc_nom: event.target.nom.value,\n            soc_ville: event.target.ville.value,\n            soc_rue: event.target.rue.value,\n            soc_codePostal: event.target.codePostal.value,\n            soc_pays: event.target.pays.value\n        }).then((response) => {\n            console.log(response)\n        })\n    }\n\n    /**\n     * Display the table\n     *\n     * required :\n     *      the columns set up above\n     *      the data (list of societes)\n     * optional :\n     *      {renderRowSubComponent} only if you want the ability to display more details\n     */\n    return (\n        <div style={{marginTop: `50px`}} className=\"EspaceFooter\">\n            <Button onClick={setAllAbsent}> Mettre tous les exposant absent </Button>\n            <TableContainer columns={columns} data={societe} renderRowSubComponent={detailsExposant}/>\n        </div>\n    )\n}\n\n","import Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport React, {useState} from \"react\";\n\n\nexport const RegisterForm = ({ onSubmit }) => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [estAdmin, setEstAdmin] = useState(false);\n\n    function validateForm() {\n        return email.length > 0 && password.length > 0;\n    }\n\n\n    return(\n\n        <Form onSubmit={onSubmit}>\n            <h4 id=\"titleGameForm\"> Créer un compte</h4>\n\n            <Form.Group size=\"lg\" controlId=\"email\">\n                <Form.Label>Email</Form.Label>\n                <Form.Control\n                    autoFocus\n                    type=\"email\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                />\n            </Form.Group>\n            <Form.Group size=\"lg\" controlId=\"password\">\n                <Form.Label>Mot de passe</Form.Label>\n                <Form.Control\n                    type=\"password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                />\n            </Form.Group>\n            <Form.Group size=\"lg\" controlId=\"role\">\n                <Form.Check inline label=\"admin\"  value={estAdmin} onChange={(e)=> setEstAdmin(e.target.checked)} />\n                <p>*Si cette case n'est pas coché, ce sera un compte organisateur.</p>\n            </Form.Group>\n            <div className=\"form-group\">\n            <Button id=\"btn-valider\" block size=\"lg\" type=\"submit\" disabled={!validateForm()}>\n                Créer le compte\n            </Button>\n            </div>\n        </Form>\n    );\n};\nexport default RegisterForm;","import React, {useEffect, useMemo, useState} from \"react\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faUser} from \"@fortawesome/free-solid-svg-icons\";\n\nimport './handle-accounts.css'\nimport Alert from \"react-bootstrap/Alert\";\nimport RegisterForm from \"./registerForm\"\nimport {Container} from \"../../components/ModalForm/container\";\nimport Axios from \"axios\";\nimport FormText from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\"\n\nimport TableContainer from \"../../components/tables/TableContainer\";\nimport {SelectColumnFilter} from \"../../components/tables/Filters\";\n\n\n\n\nexport default function HandleAccounts(){\n    const [errortext, setErrortext] = useState(\"\");\n    const [show, setShow] = useState(false)\n    const [userList,setUserList] = useState([]);\n\n    const onSubmit = (event) => {\n\n        //Ne pas oublier cette ligne!!!\n        event.preventDefault(event);\n\n\n        Axios.post(\"/server/register\", {\n            //récupérer les valeurs du formulaire\n            email: event.target.email.value,\n            password : event.target.password.value,\n            estAdmin : event.target.role.value,\n\n        }).then((res) => {\n            //afficher alert succes\n                    if (res.data.success) {\n                        //afficher message de réussite\n                        console.log(\"compte crée\")\n                        setShow(true)\n                    } else {\n                        setErrortext(res.data.error);\n                    }\n        })\n    };\n    //méthode qui s'appelle au chargement de la page\n    useEffect(() => {\n        //Récupérer les infos de tous les users\n        Axios.get(\"/server/allUsers\")\n            .then((res) => {\n                setUserList(res.data);\n            });\n\n    }, []);\n\n\n\n    const deleteUser = (data) => {\n\n        Axios.delete(`/server/delete-profile/${data.user_email}`)\n            .then(\n                //userList.splice(userList.indexOf(data),1)\n                window.location.reload(false)\n            )\n\n\n\n    }\n\n    const columns = useMemo(() => [\n        {\n            Header: \"User\",\n            accessor: \"user_email\"\n        },\n        {\n            Header: \"Admin\",\n            accessor: d => d.user_estAdmin != null ? d.user_estAdmin.toString() : null, //required cast from boolea to string\n\n            disableSortBy: true,\n            Filter: SelectColumnFilter,\n            filter: 'equals',\n\n        },\n        {\n            id: 'supprimer',\n\n            Cell: row => {\n                return (\n                    <div>\n                        <Button id=\"btndelete\" onClick={(e) => deleteUser(row.row.original)}>Supprimer</Button>\n                    </div>\n                    )\n            },\n\n\n        }\n        ], [userList])\n\n    return (\n        <div className=\"EspaceFooter\">\n            <div id=\"titlePageJeux\">\n                <h1>\n                    <FontAwesomeIcon className=\"faicon\" icon={faUser}/>\n                    Gérer les comptes\n                </h1>\n            </div>\n            <Alert id=\"alertSucces\" variant=\"success\" show={show}>\n                Compté crée avec succès!\n            </Alert>\n\n            {/* equivalent du if/else */}\n            {errortext !== \"\" ? (\n                <FormText id=\"errorLabel\">{errortext}</FormText>\n            ) : null}\n            <div id=\"btn-NewUser\">\n                <Container triggerText=\"Créer un nouveau compte\" onSubmit={onSubmit} component={RegisterForm}/>\n            </div>\n\n            <div style={{marginTop: `50px`}}>\n                <TableContainer columns={columns} data={userList}/>\n            </div>\n\n\n        </div>\n    );\n}\n","import React, {useEffect, useState} from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport {CardBody, CardText, CardTitle} from \"reactstrap\";\nimport Axios from \"axios\";\nimport NumberFormat from 'react-number-format';\nimport Moment from \"moment\";\nimport Form from \"react-bootstrap/Form\";\nimport Alert from \"react-bootstrap/Alert\";\nimport Button from \"react-bootstrap/Button\";\nimport FormText from \"react-bootstrap/FormText\";\n\nconst FormLocalisation = ({onSubmit}) => {\n    const [loc_libelle, setLibelle] = useState(\"\");\n    const [loc_prixTable, setPrixTable] = useState(0);\n    const [loc_prixM2, setPrixM2] = useState(0);\n\n    const [errortext, setErrortext] = useState(\"\");\n\n\n    function validateForm() {\n        return loc_libelle.length > 0;\n    }\n\n    return (\n        <div>\n            <div className=\"CreateFestival\">\n                <Form onSubmit={onSubmit}>\n                    {errortext !== \"\" ? (\n                        <FormText id=\"errorLabel\">{errortext}</FormText>\n                    ) : null}\n                    <h4 id=\"titleForm\">Création d'un espace</h4>\n                    <Form.Group size=\"lg\" controlId=\"loc_libelle\">\n                        <Form.Label>Nom de l'espace *</Form.Label>\n                        <Form.Control\n                            type=\"text\"\n                            value={loc_libelle}\n                            onChange={(e) => setLibelle(e.target.value)}\n                        />\n                    </Form.Group>\n                    <Form.Group size=\"lg\" controlId=\"loc_prixTable\">\n                        <Form.Label>Prix d'une table </Form.Label>\n                        <Form.Control\n                            type=\"text\"\n                            min=\"0\"\n                            value={loc_prixTable}\n                            onChange={(e) => setPrixTable(e.target.value)}\n                        />\n                    </Form.Group>\n                    <Form.Group size=\"lg\" controlId=\"loc_prixM2\">\n                        <Form.Label>Prix d'un m² </Form.Label>\n                        <Form.Control\n                            type=\"text\"\n                            min=\"0\"\n                            value={loc_prixM2}\n                            onChange={(e) => setPrixM2(e.target.value)}\n                        />\n                    </Form.Group>\n                    <p>* Champ obligatoire</p>\n                    <div className=\"form-group\">\n                        <Button id=\"btn-formFestival\" block size=\"lg\" type=\"submit\" disabled={!validateForm()}>\n                            Créer l'espace\n                        </Button>\n                    </div>\n                </Form>\n            </div>\n        </div>\n    );\n}\n\nexport default FormLocalisation;\n","import React, {useEffect, useState} from 'react';\nimport Alert from \"react-bootstrap/Alert\";\nimport Form from \"react-bootstrap/Form\";\nimport FormText from \"react-bootstrap/FormText\";\nimport {Input} from \"reactstrap\";\nimport Button from \"react-bootstrap/Button\";\n\nimport './FormFestival.css';\nimport FormLocalisation from \"../../components/festivals/FormLocalisation\";\nimport Axios from \"axios\";\n\n\nconst FormFestival = ({onSubmit}) => {\n\n    const [fes_date, setDate] = useState(\"\");\n    const [festival, setFestival] = useState();\n    const [errortext, setErrortext] = useState(\"\");\n\n    const [showFestival, setShowFestival] = useState(false);\n\n    function validateForm() {\n        return fes_date.length > 0;\n    }\n\n    /*\n    function submitFestival(event) {\n        //variable to send in json format\n        let dataToSend = JSON.stringify({\n            fes_date,\n            fes_nbTables\n        });\n\n        fetch(\"/server/festivals/add\", {\n            method: \"POST\",\n            body: dataToSend,\n            headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n            },\n        }).then((res) => {\n\n            // If response was successful parse the json and dispatch an update\n            if (res.ok) {\n                res.json().then((resJson) => {\n                    if (resJson.success) {\n                        //afficher message de réussite\n                        console.log(\"festival créé\")\n                        setShowFestival(true)\n                    } else {\n                        setErrortext(resJson.error);\n                    }\n                })\n            }\n        });\n    }\n*/\n\n    return (\n        <div>\n            <div className=\"CreateFestival\">\n                <Form onSubmit={onSubmit}>\n                    {errortext !== \"\" ? (\n                        <FormText id=\"errorLabel\">{errortext}</FormText>\n                    ) : null}\n                    <h4 id=\"titleFestivalForm\">Création d'un festival</h4>\n                    <Form.Group size=\"lg\" controlId=\"fes_date\">\n                        <Form.Label>Date du festival *</Form.Label>\n                        <Form.Control\n                            autoFocus\n                            type=\"date\"\n                            value={fes_date}\n                            onChange={(e) => setDate(e.target.value)}\n                        />\n                    </Form.Group>\n                    <p>* Champ obligatoire</p>\n                    <div className=\"form-group\">\n                        <Button id=\"btn-formFestival\" block size=\"lg\" type=\"submit\" disabled={!validateForm()}>\n                            Créer le festival\n                        </Button>\n                    </div>\n                </Form>\n            </div>\n        </div>\n    )\n};\n\nexport default FormFestival;","import React, {Fragment} from 'react';\nimport {\n    useTable,\n    useSortBy,\n    useExpanded,\n    usePagination,\n} from 'react-table';\nimport {Table, Row, Col, Button, Input, CustomInput} from 'reactstrap';\nimport {Filter} from './Filters';\n\nconst SimpleTableContainer = ({columns, data, renderRowSubComponent}) => {\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        page,\n        prepareRow,\n        visibleColumns,\n        state: {pageIndex}\n    } = useTable(\n        {\n            columns,\n            data,\n            initialState: {pageIndex: 0},\n        },\n        useSortBy,\n        useExpanded,\n        usePagination\n    );\n\n    const generateSortingIndicator = (column) => {\n        return column.isSorted ? (column.isSortedDesc ? ' 🔽' : ' 🔼') : '';\n    };\n\n    return (\n        <Fragment>\n            <Table bordered hover {...getTableProps()} style={{width: '100%'}}>\n\n                {/* En-tete du tableau (avec les menu de recherches/tris)*/}\n                <thead>\n                {headerGroups.map((headerGroup) => (\n                    <tr  {...headerGroup.getHeaderGroupProps()}>\n                        {headerGroup.headers.map((column) => (\n                            <th {...column.getHeaderProps()}>\n                                <div {...column.getSortByToggleProps()}>\n                                    {column.render('Header')}\n                                    {generateSortingIndicator(column)}\n                                </div>\n                                <Filter column={column}/>\n                            </th>\n                        ))}\n                    </tr>\n                ))}\n                </thead>\n\n\n                {/* Affichage des données*/}\n                <tbody {...getTableBodyProps()} style={{width: 'auto'}}>\n                {page.map((row) => {\n\n                    prepareRow(row);\n                    return (\n                        <Fragment key={row.getRowProps().key}>\n\n                            {/* Contenu pour chaque ligne*/}\n                            <tr>\n                                {row.cells.map((cell) => {\n                                    return (\n                                        <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                                    );\n                                })}\n                            </tr>\n\n                            {/* Affichage du contenu supplémentaire (details) */}\n                            {row.isExpanded && (\n                                <tr>\n                                    <td colSpan={visibleColumns.length}>\n                                        {renderRowSubComponent(row)}\n                                    </td>\n                                </tr>\n                            )}\n\n                        </Fragment>\n                    );\n                })}\n                </tbody>\n            </Table>\n        </Fragment>\n    );\n};\n\nexport default SimpleTableContainer;","import React, {useEffect, useState, useMemo, useContext} from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport {CardBody, CardText, CardTitle} from \"reactstrap\";\nimport Axios from \"axios\";\nimport Moment from \"moment\";\nimport FormLocalisation from \"./FormLocalisation\";\nimport {Container} from \"../ModalForm/container\";\nimport \"./CardFestival.css\";\nimport Alert from \"react-bootstrap/Alert\";\nimport SimpleTableContainer from \"../../components/tables/SimpleTableContainer\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport {FestivalContext} from \"../../../App\";\nimport {isAdmin, isLogin} from \"../../utils/utils\";\n\n\nconst CardFestival = ({fes, updateDate}) => {\n\n    const [festivalDate, setDate] = useState(fes.fes_date)\n    const [localisationList, setLocalList] = useState([])\n    const [show, setShow] = useState(false) // for the form of the localisation\n    const {selectedFestival, setSelectedFestival} = useContext(FestivalContext)\n\n    useEffect(() => {\n        // Get details for the festivals\n        Axios.get(`/server/localisation/allDetails/${fes.fes_id}`)\n            .then((res) => {\n                setLocalList(res.data)\n            })\n    }, []);\n\n    const changeDate = event => {\n        updateDate(fes.fes_id, event.target.value) // update in the database\n        setDate(event.target.value) // update the value of the input calendar\n    }\n\n    /*\n    const changeNbTables = event => {\n        updateNbTables(fes.fes_id, event.target.value)\n    }\n     */\n\n    const updateCurrentFestival = event => {\n        localStorage.setItem(\"currentFestival\", fes.fes_id)\n        setSelectedFestival(fes);\n    }\n\n    /**\n     * Method called when the form is validated\n     * @param event\n     */\n    const onSubmit = (event) => {\n\n        event.preventDefault(event);\n        //get the information of the form\n        console.log(\"front lib :\", event.target.loc_libelle.value);\n        console.log(\"front id : \", fes.fes_id);\n\n\n        Axios.post(`/server/localisation/add/${fes.fes_id}`, {\n            loc_libelle: event.target.loc_libelle.value,\n            loc_prixTable: event.target.loc_prixTable.value,\n            loc_prixM2: event.target.loc_prixM2.value\n        }).then((res) => {\n            // to show the success with an alert\n            setShow(true);\n        })\n\n        window.location.reload(true)\n    }\n\n    /**\n     * Method to update the unit price of the table\n     * @param rowIndex\n     * @param data\n     * @param value\n     */\n    function updatePriceTable(rowIndex, data, value) {\n        const loc_id = data[rowIndex].loc_id;\n        Axios.put(\"/server/localisation/updatePriceTable/\", {\n            loc_id: loc_id,\n            new_priceTable: value\n        });\n    }\n\n    /**\n     * Method to update the price of m²\n     * @param rowIndex\n     * @param data\n     * @param value\n     */\n    function updatePriceM2(rowIndex, data, value) {\n        const loc_id = data[rowIndex].loc_id;\n        Axios.put(\"/server/localisation/updatePriceM2/\", {\n            loc_id: loc_id,\n            new_priceM2: value\n        });\n    }\n\n    const columns = useMemo(() => [\n        {\n            Header: \"Nom\",\n            accessor: \"loc_libelle\"\n        }, {\n            Header: \"Prix table\",\n            accessor: \"loc_prixTable\",\n\n            Cell: row => {\n                return (\n                    <Form.Control\n                        autoFocus\n                        type=\"text\"\n                        min=\"0\"\n                        defaultValue={row.value}\n                        onChange={(e) => updatePriceTable(row.row.id, row.data, e.target.value)}\n                    />\n                )\n            }\n        }, {\n            Header: \"Prix m²\",\n            accessor: \"loc_prixM2\",\n\n            Cell: row => {\n                return (\n                    <Form.Control\n                        autoFocus\n                        type=\"text\"\n                        min=\"0\"\n                        defaultValue={row.value}\n                        onChange={(e) => updatePriceM2(row.row.id, row.data, e.target.value)}\n                    />\n                )\n            }\n        }\n    ], [localisationList])\n\n\n    return (\n        <div>\n            <Alert id=\"alertSucces\" variant=\"success\" show={show}>\n                Espace créé avec succès!\n            </Alert>\n            <Card className=\"card\">\n                <CardBody>\n                    <CardTitle>\n                        <strong>Festival du {Moment(festivalDate).format('DD/MM/YYYY')}</strong>\n                    </CardTitle>\n                    <CardText>\n                        <Button block size=\"lg\" type=\"submit\" onClick={updateCurrentFestival}>\n                            Définir en tant que festival courant\n                        </Button>\n                    </CardText>\n                    {isAdmin() ? // user has to be logged to access to this page festivals\n                        <CardText>\n                            Date\n                            <input type={'date'}\n                                   className=\"inputCss\"\n                                   value={festivalDate}\n                                   onChange={changeDate}\n                            />\n                        </CardText>\n                        : null}\n                    {isAdmin() ?\n                    <div className=\"tableLocalisation\">\n                        <SimpleTableContainer columns={columns} data={localisationList}/>\n                    </div>\n                        : null}\n                    {isAdmin() ?\n                    <Container triggerText=\"Créer un nouvel espace\" onSubmit={onSubmit}\n                               component={FormLocalisation}/>\n                    : null}\n                </CardBody>\n            </Card>\n\n        </div>\n    );\n}\n\nexport default CardFestival;\n","import {isAdmin} from \"../../utils/utils\";\n\nimport React, {useEffect, useState} from \"react\";\nimport './Festivals.css';\nimport FormFestival from './FormFestival';\nimport {Container} from \"../../components/ModalForm/container\";\nimport CardFestival from \"../../components/festivals/CardFestival\";\nimport Axios from \"axios\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faTheaterMasks} from \"@fortawesome/free-solid-svg-icons\";\nimport Alert from \"react-bootstrap/Alert\";\n//const CardFestival = require('')\n\nconst Festivals = () => {\n\n    const [form, setForm] = useState(false)\n    const [festivals, setListFestivals] = useState([]);\n    const [show, setShow] = useState(false)\n\n    /**\n     * Method which is called at the loading of the page\n     * to show all the festivals\n     */\n    useEffect(() => {\n        Axios.get(\"/server/festivals/allDetails\")\n            .then((res) => {\n                setListFestivals(res.data.allFestivals)\n            });\n    }, []);\n\n    /**\n     * Method called when the form is validated\n     * @param event\n     */\n    const onSubmit = (event) => {\n        event.preventDefault(event);\n        //get the information of the form\n        Axios.post(\"/server/festivals/add\", {\n            fes_date: event.target.fes_date.value\n        })\n            .then((res) => {\n                // to show the success with an alert\n                setShow(true);\n            })\n    };\n\n    /**\n     * Method called by the input date to update the date of the festival of the card\n     * @param old_date : the current date\n     * @param new_date : the new date of the festival\n     */\n    const updateDateFestival = async (fes_id, new_date) => {\n        const res = await Axios.put(\"/server/festivals/updateDate\", {\n            fes_id: fes_id,\n            new_date: new_date\n        })\n    }\n\n    /*\n     const updateNbTables = (fes_id, new_nbTables) => {\n         Axios.put(\"/server/festivals/updateNbTables\", {\n             fes_id : fes_id,\n             new_nbTables : new_nbTables\n         })\n     }\n   */\n\n    //ATTENTION : faire if  isAdmin la page admin else la page organisateur\n    return (\n        <>\n            <div className=\"EspaceFooter\">\n                <div id=\"titlePageFestivals\">\n                    <h1>\n                        <FontAwesomeIcon className=\"faicon\" icon={faTheaterMasks}/>\n                        Festivals\n                    </h1>\n\n                </div>\n                <Alert id=\"alertSucces\" variant=\"success\" show={show}>\n                    Le festival a été créé !\n                </Alert>\n                {isAdmin() ?\n                    <div id=\"btnNewFestival\">\n                        <Container triggerText=\"Créer un nouveau festival\" onSubmit={onSubmit}\n                                   component={FormFestival}/>\n                    </div>\n                    : null}\n                <div className=\"flex-container\">\n                    {festivals.map((fest, i) =>\n                        <div id={fest} className=\"flex-item\">\n                            <CardFestival fes={fest} updateDate={updateDateFestival}/>\n                        </div>\n                    )}\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default Festivals;\n","import React, {useState} from 'react';\n\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n\nexport const FormType = ({onSubmit}) => {\n    const [libelle, setLibelle] = useState(\"\");\n\n    function validateForm(){\n        return libelle.length > 0;\n    }\n\n    return(\n        <Form onSubmit={onSubmit}>\n            <h4 id=\"titleGameForm\">Détails du jeu</h4>\n\n            <Form.Group size=\"lg\"  controlId=\"libelle\">\n                <Form.Label>Type de jeu*</Form.Label>\n                <Form.Control autoFocus value={libelle} onChange={(e) => setLibelle(e.target.value)} />\n            </Form.Group>\n\n            <p>* Champ obligatoire</p>\n\n\n            <div className=\"form-group\">\n                <Button id=\"btn-formGame\" block size=\"lg\" type=\"submit\" disabled={!validateForm()}>\n                    Valider\n                </Button>\n            </div>\n\n        </Form>\n    );\n};\nexport default FormType;\n","import React, {useEffect, useState, useMemo} from \"react\";\nimport Axios from \"axios\"\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faShapes} from \"@fortawesome/free-solid-svg-icons\";\nimport TableContainer from \"../../components/tables/TableContainer\";\nimport Form from \"react-bootstrap/Form\";\nimport Alert from \"react-bootstrap/Alert\";\nimport {Container} from \"../../components/ModalForm/container\";\nimport FormType from './formType';\n\nconst TypeJeu = () => {\n\n    const [gameTypeList, setGameTypeList] = useState([]);\n    const [show, setShow] = useState(false)\n\n\n    useEffect(() => {\n        //Récupérer tous les types\n        Axios.get(\"/server/typeJeu/all\")\n            .then((res) => {\n                setGameTypeList(res.data)\n            })\n    }, [])\n\n\n    const onSubmit = (event) => {\n        //Ne pas oublier cette ligne!!!\n        event.preventDefault(event);\n\n        Axios.post(\"/server/typeJeu/add\", {\n            libelle: event.target.libelle.value\n        }).then((res) => {\n            //afficher alert succes\n            setShow(true);\n        })\n\n    }\n\n    const updateType = (rowIndex, data, value) => {\n        const typJ_id = data[rowIndex].typJ_id\n        Axios.post(`/server/typeJeu/${typJ_id}/update`,{\n            libelle: value,\n        })\n    }\n\n    const columns = useMemo ( () => [\n        {\n            Header: 'Type de jeu',\n            accessor: 'typJ_libelle',\n            Cell: row => {\n                return (\n                    <Form.Control autoFocus  defaultValue={row.value}\n                                  onChange={(e) => updateType(parseInt(row.row.id), row.data, e.target.value)}/>\n\n                )\n            },\n        }\n    ], [gameTypeList])\n\n    return(\n        <div className=\"EspaceFooter\">\n            <div id=\"titlePageJeux\">\n                <h1>\n                    <FontAwesomeIcon className=\"faicon\" icon={faShapes}/>\n                    Type de jeux</h1>\n            </div>\n            <Alert id=\"alertSucces\" variant=\"success\" show={show}>\n                Le type a été crée avec succès!\n            </Alert>\n            <div id=\"btnNewJeu\">\n                <Container triggerText=\"Créer un nouveau type\" onSubmit={onSubmit} component={FormType}/>\n            </div>\n            <div style={{marginTop: `50px`}}>\n                <TableContainer columns={columns} data={gameTypeList}/>\n            </div>\n        </div>\n    )\n}\nexport default TypeJeu","import React, {useEffect, useState} from 'react';\nimport './formJeu.css'\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Axios from \"axios\";\n\n\nexport const FormJeu = ({ onSubmit }) => {\n    const [title,setTitle] = useState(\"\");\n    const [minAge,setMinAge] = useState(\"\");\n    const [duration,setDuration] = useState(\"\");\n    const [maxNumPlayers,setMaxNumPlayers] = useState(\"\");\n    const [minNumPlayers,setMinNumPlayers] = useState(\"\");\n    const [rulesLink,setRulesLink] = useState(\"\");\n    const [companyId,setCompanyId] = useState(\"\");\n    const [gameTypeId,setGameTypeId] = useState(\"\");\n\n\n    const [gameTypeList,setGameTypeList] = useState([]);\n    const [editeursList,setEditeursList] = useState([]);\n\n\n\n\n    //méthode qui s'appelle au chargement de la page\n    useEffect(() => {\n        //Récupérer tous les types de jeux\n        Axios.get(\"/server/typeJeu/all\")\n            .then((res) => {\n               setGameTypeList(res.data)\n            })\n    }, []);\n\n    useEffect(() => {\n        //requetes tous les éditeurs\n        Axios.get(\"/server/societe/allEditeurs\")\n            .then((res) => {\n               setEditeursList(res.data)\n            })\n\n    }, []);\n\n    function validateForm() {\n        return title.length > 0 ;\n    }\n\n\n\n    return (\n\n        <Form onSubmit={onSubmit}>\n            <h4 id=\"titleGameForm\">Détails du jeu</h4>\n\n            <Form.Group size=\"lg\"  controlId=\"title\">\n                <Form.Label>Nom*</Form.Label>\n                <Form.Control autoFocus value={title} onChange={(e) => setTitle(e.target.value)} />\n            </Form.Group>\n            <Form.Group size=\"lg\"  controlId=\"minAge\">\n                <Form.Label>Age minimum</Form.Label>\n                <Form.Control autoFocus value={minAge} type=\"number\" min=\"0\"  onChange={(e) => setMinAge(e.target.value)} />\n            </Form.Group>\n            <Form.Group size=\"lg\"  controlId=\"duration\">\n                <Form.Label>Durée</Form.Label>\n                <Form.Control autoFocus value={duration} type=\"time\" onChange={(e) => setDuration(e.target.value)} />\n            </Form.Group>\n            <Form.Group size=\"lg\"  controlId=\"minNumPlayers\">\n                <Form.Label>Min joueurs</Form.Label>\n                <Form.Control autoFocus value={minNumPlayers} type=\"number\" min=\"0\" onChange={(e) => setMinNumPlayers(e.target.value)} />\n            </Form.Group>\n            <Form.Group size=\"lg\"  controlId=\"maxNumPlayers\">\n                <Form.Label>Max joueurs</Form.Label>\n                <Form.Control autoFocus value={maxNumPlayers} type=\"number\" min={minNumPlayers} onChange={(e) => setMaxNumPlayers(e.target.value)} />\n            </Form.Group>\n            <Form.Group size=\"lg\"  controlId=\"rulesLink\">\n                <Form.Label>Lien règles du jeu</Form.Label>\n                <Form.Control autoFocus value={rulesLink} type=\"url\" onChange={(e) => setRulesLink(e.target.value)} />\n            </Form.Group>\n            <Form.Group size=\"lg\"  controlId=\"gameTypeId\">\n                <Form.Label>Type de jeux</Form.Label>\n                <Form.Control autoFocus value={gameTypeId} as=\"select\" onChange={(e) => setGameTypeId(e.target.value)} >\n\n                {gameTypeList.map((object) =><option value={object.typJ_id}>{object.typJ_libelle} </option> )}\n                </Form.Control>\n            </Form.Group>\n            <Form.Group size=\"lg\"  controlId=\"companyId\">\n                <Form.Label>Éditeur</Form.Label>\n                <Form.Control autoFocus value={companyId} as=\"select\" onChange={(e) => setCompanyId(e.target.value)} >\n                    {editeursList.map((object) =><option value={object.soc_id}>{object.soc_nom} </option> )}\n                </Form.Control>\n            </Form.Group>\n\n            <p>* Champ obligatoire</p>\n\n\n            <div className=\"form-group\">\n                <Button id=\"btn-formGame\" block size=\"lg\" type=\"submit\" disabled={!validateForm()}>\n                    Valider\n                </Button>\n            </div>\n\n        </Form>\n    );\n};\nexport default FormJeu;\n","import './jeux.css'\nimport React, {useEffect, useState, useMemo} from \"react\";\nimport Axios from \"axios\"\n\nimport TableContainer from \"../../components/tables/TableContainer\";\nimport {SelectColumnFilter} from \"../../components/tables/Filters\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faChessKnight} from \"@fortawesome/free-solid-svg-icons\";\nimport {Container} from \"../../components/ModalForm/container\";\nimport FormJeu from \"./formJeu\";\nimport Form from \"react-bootstrap/Form\";\nimport Alert from \"react-bootstrap/Alert\";\n\nexport const Jeux = () => {\n\n\n\n    const [listeJeux, setListeJeux] = useState([]);\n    const [gameTypeList, setGameTypeList] = useState([]);\n    const [editeursList, setEditeursList] = useState([]);\n\n    const [show, setShow] = useState(false)\n\n\n    const onSubmit = (event) => {\n\n        //Ne pas oublier cette ligne!!!\n        event.preventDefault(event);\n\n        Axios.post(\"/server/jeux/add\", {\n            //récupérer les valeurs du formulaire\n            title: event.target.title.value,\n            minAge : event.target.minAge.value,\n            duration : event.target.duration.value,\n            maxNumPlayers : event.target.maxNumPlayers.value,\n            minNumPlayers : event.target.minNumPlayers.value,\n            rulesLink : event.target.rulesLink.value,\n            companyId : event.target.companyId.value,\n            gameTypeId : event.target.gameTypeId.value,\n        }).then((res) => {\n         //afficher alert succes\n            setShow(true);\n\n\n        })\n    };\n\n\n    //méthode qui s'appelle au chargement de la page\n    useEffect(() => {\n        //Récupérer les infos de tous les jeux\n        Axios.get(\"/server/Jeux/allDetails\")\n            .then((res) => {\n\n                setListeJeux(res.data)\n            });\n\n    }, []);\n\n    useEffect(() => {\n        //Récupérer tous les types\n        Axios.get(\"/server/typeJeu/all\")\n            .then((res) => {\n                setGameTypeList(res.data)\n            })\n    }, [])\n\n    useEffect(() => {\n        //récupérer tous les éditeurs\n        Axios.get(\"/server/societe/allEditeurs\")\n            .then((res) => {\n                setEditeursList(res.data)\n            })\n    }, [])\n\n\n    // update Editeur\n    const updateEditeurId = (data, value) => {\n        Axios.post(`/server/Jeux/${data.j_id}/update-editeurId`, {\n            editeurId: value,\n        })\n    }\n    // updtate Type jeu\n    const updateGameTypeId = (data, value) => {\n        const j_id = data.j_id\n        Axios.post(`/server/Jeux/${j_id}/update-typeId`, {\n            typeId: value,\n        })\n    }\n    //update ageMin\n    const updateageMin = (rowIndex, data, value) => {\n        const j_id = data[rowIndex].j_id\n        Axios.post(`/server/Jeux/${j_id}/update-ageMin`, {\n            ageMin: value,\n        })\n    }\n    // update joueurs Min\n    const updatenbjMin = (rowIndex, data, value) => {\n        const j_id = data[rowIndex].j_id\n        Axios.post(`/server/Jeux/${j_id}/update-nbjMin`, {\n            nbjMin: value,\n        })\n    }\n    // update joueurs Max\n    const updatenbjMax = (rowIndex, data, value) => {\n        const j_id = data[rowIndex].j_id\n        Axios.post(`/server/Jeux/${j_id}/update-nbjMax`, {\n            nbjMax: value,\n        })\n    }\n\n    // update DUREE\n    const updateDuree = (rowIndex, data, value) => {\n        const j_id = data[rowIndex].j_id\n        Axios.post(`/server/Jeux/${j_id}/update-duree`, {\n            duree: value,\n        })\n    }\n\n    //  update NOTICE\n    const updateNotice = (rowIndex, data, value) => {\n        const j_id = data[rowIndex].j_id\n        Axios.post(`/server/Jeux/${j_id}/update-lienNotice`, {\n            lienNotice: value,\n        })\n    }\n\n    //déclarer toutes les colonnes\n    const columns = useMemo(() => [\n\n        {\n            Header: \"Nom\",\n            accessor: \"j_titre\",\n        },\n        {\n            Header: \"Éditeur\",\n            accessor: \"societe.soc_nom\",\n\n\n            disableSortBy: true,\n            Filter: SelectColumnFilter,\n            filter: 'equals',\n\n\n            Cell: row => {\n\n                return (\n                    <div>\n                        <Form.Group>\n                            <Form.Control style={{width: 'auto'}} as=\"select\" onChange={(e) => updateEditeurId(row.row.original, e.target.value)}>\n                                {editeursList.map((object, i) =>\n                                    <option selected={row.value === object.soc_nom} value={object.soc_id} key={object.soc_id} > {object.soc_nom}</option>\n                                )}\n                            </Form.Control>\n                        </Form.Group>\n                    </div>\n                )\n            }\n\n\n        },\n        {\n            Header: \"Type de jeu\",\n            accessor: \"type_jeu.typJ_libelle\",\n\n            disableSortBy: true,\n            Filter: SelectColumnFilter,\n            filter: 'equals',\n\n\n            Cell: row => {\n                return (\n                    <div>\n                        <Form.Group>\n                            <Form.Control style={{width: 'auto'}} as=\"select\" onChange={(e) => updateGameTypeId(row.row.original, e.target.value)}>\n                                {gameTypeList.map((object, i) =>\n                                    <option selected={row.value === object.typJ_libelle} value={object.typJ_id} key={object.typJ_id} > {object.typJ_libelle}</option>\n                                )}\n                            </Form.Control>\n                        </Form.Group>\n                    </div>\n                )\n            }\n\n\n        },\n        {\n            Header: \"Age min\",\n            accessor: \"j_ageMin\",\n            Cell: row => {\n                return (\n                    <Form.Control  autoFocus type=\"number\" min=\"0\" defaultValue={row.value}\n                                  onChange={(e) => updateageMin(parseInt(row.row.id), row.data, e.target.value)}/>\n                )\n            },\n        },\n        {\n            Header: \"nb joueurs min\",\n            accessor: \"j_nbMinJoueurs\",\n            Cell: row => {\n                return (\n                    <Form.Control autoFocus type=\"number\" min=\"0\" defaultValue={row.value}\n                                  onChange={(e) => updatenbjMin(parseInt(row.row.id), row.data, e.target.value)}/>\n                )\n            },\n        },\n        {\n            Header: \"nb joueurs max\",\n            accessor: \"j_nbMaxJoueurs\",\n            Cell: row => {\n                return (\n                    <Form.Control autoFocus type=\"number\" min={row.row.original.j_nbMinJoueurs} defaultValue={row.value}\n                                  onChange={(e) => updatenbjMax(parseInt(row.row.id), row.data, e.target.value)}/>\n                )\n            },\n        },\n        {\n            Header: \"Durée\",\n            accessor: \"j_duree\",\n\n            Cell: row => {\n                return (\n                    <Form.Control autoFocus type=\"time\" defaultValue={row.value}\n                                  onChange={(e) => updateDuree(parseInt(row.row.id), row.data, e.target.value)}/>\n\n                )\n            },\n        },\n        {\n            Header: \"Notice\",\n            accessor: \"j_lienNotice\",\n\n            Cell: row => {\n                return (\n                    <Form.Control autoFocus type=\"url\" defaultValue={row.value}\n                                  onChange={(e) => updateNotice(parseInt(row.row.id), row.data, e.target.value)}/>\n\n                )\n            },\n        }\n    ], [listeJeux, editeursList, gameTypeList]) //les variables du tableau\n\n\n    return (\n        <div className=\"EspaceFooter\">\n            <div id=\"titlePageJeux\">\n                <h1>\n                    <FontAwesomeIcon className=\"faicon\" icon={faChessKnight}/>\n                    Jeux\n                </h1>\n\n            </div>\n            <Alert id=\"alertSucces\" variant=\"success\" show={show}>\n                Le jeu a été crée avec succès!\n            </Alert>\n            <div id=\"btnNewJeu\">\n                <Container triggerText=\"Créer un nouveau jeu\" onSubmit={onSubmit} component={FormJeu}/>\n            </div>\n            <div style={{marginTop: `50px`}}>\n                <TableContainer columns={columns} data={listeJeux}/>\n            </div>\n        </div>\n    )\n}\n\n","import {isLogin} from \"../utils/utils\";\nimport {Route, Redirect} from \"react-router-dom\";\n\nconst PrivateRoute = ({component: Component, ...rest}) => {\n\n    return (\n        <Route {...rest} render={props => {\n\n            const redirection = {\n                pathname: \"/login\",\n                state: {\n                    from: props.location\n                }\n            }\n            return !isLogin() ? <Redirect to={redirection}/> : <Component {...props}/>\n        }}/>\n    )\n}\n\nexport default PrivateRoute\n","import './festival-games.css'\nimport {isLogin} from \"../../utils/utils\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faDice, faInfoCircle, faEyeSlash} from \"@fortawesome/free-solid-svg-icons\";\nimport React, {useEffect, useMemo, useState} from \"react\";\nimport Axios from \"axios\";\nimport {useHistory} from \"react-router\"\nimport TableContainer from \"../../components/tables/TableContainer\";\nimport {SelectColumnFilter} from \"../../components/tables/Filters\";\nimport {CardBody, CardLink, CardText, CardTitle} from \"reactstrap\";\nimport {Card, Form} from \"react-bootstrap\";\nimport Moment from \"moment\";\nimport {Link} from \"react-router-dom\";\n\nconst FestivalGames = () => {\n    const [listeJeux, setListeJeux] = useState([]);\n    const [editeursList, setEditeursList] = useState([]);\n    const [gameTypeList, setGameTypeList] = useState([]);\n    const [zoneList, setZoneList] = useState([]);\n\n    const history = useHistory();\n\n\n    //méthode qui s'appelle au chargement de la page\n    useEffect(() => {\n        //Récupérer les infos de tous les jeux\n        Axios.get(`/server/jeuxFestival/${localStorage.getItem(\"currentFestival\")}/allDetails`)\n            .then((res) => {\n                setListeJeux(res.data)\n                console.log(res.data)\n            });\n\n    }, []);\n\n    useEffect(() => {\n        //récupérer tous les éditeurs\n        Axios.get(\"/server/societe/allEditeurs\")\n            .then((res) => {\n                setEditeursList(res.data)\n            })\n    }, [])\n\n    useEffect(() => {\n        //Récupérer tous les types\n        Axios.get(\"/server/typeJeu/all\")\n            .then((res) => {\n                setGameTypeList(res.data)\n            })\n    }, [])\n\n    useEffect(() => {\n        Axios.get(`/server/zones/all/${localStorage.getItem(\"currentFestival\")}`)\n            .then((res) => {\n                setZoneList(res.data)\n            })\n    }, [])\n\n\n    //redirection page suivi éditeur\n    const goToExhibitorMonitoring = (soc_id) => {\n\n        history.push('/exhibitor-monitoring/' + soc_id);\n\n        window.location.reload(false)\n\n    }\n\n    // update Editeur\n    const updateEditeurId = (data, value) => {\n        Axios.post(`/server/Jeux/${data.j_id}/update-editeurId`, {\n            editeurId: value,\n        }).then((res) => {\n            console.log(res)\n        })\n    }\n\n    // updtate Type jeu\n    const updateGameTypeId = (data, value) => {\n        Axios.post(`/server/Jeux/${data.j_id}/update-typeId`, {\n            typeId: value,\n        }).then((res) => {\n            console.log(res)\n        })\n    }\n\n    //update prototype\n    const updatePrototype = (data, value) => {\n\n        Axios.post(`/server/jeuxFestival/update-prototype/${data.suivJ_id}`, {\n            suivJ_prototype: value,\n        })\n            .then((res) => {\n                console.log(res)\n            })\n    }\n\n    //update zone\n    const updateZone = (data, value) => {\n        Axios.post(`/server/jeuxFestival/update-zone/${data.suivJ_id}`, {\n            zo_id: value,\n        })\n            .then((res) => {\n                console.log(res)\n            })\n    }\n    //update place\n    const updatePlace = (data, value) => {\n        Axios.post(`/server/JeuxFestival/update-place/${data.suivJ_id}`, {\n            suivJ_place: value,\n        })\n            .then((res) => {\n                console.log(res)\n            })\n    }\n\n    //update tombola\n    const updateTombola = (data, value) => {\n\n        Axios.post(`/server/JeuxFestival/update-tombola/${data.suivJ_id}`, {\n            suivJ_tombola: value,\n        })\n            .then((res) => {\n                console.log(res)\n            })\n    }\n\n    //update dotation\n    const updateDotation = (data, value) => {\n        Axios.post(`/server/JeuxFestival/update-dotation/${data.suivJ_id}`, {\n            suivJ_dotation: value,\n        })\n            .then((res) => {\n                console.log(res)\n            })\n    }\n\n    //update nombre de jeux reçus\n    const updateNbJeuxRecus = (data, value) => {\n        Axios.post(`/server/JeuxFestival/update-nbJeuxRecus/${data.suivJ_id}`, {\n            suivJ_nbJeuxRecus: value,\n        })\n            .then((res) => {\n                console.log(res)\n            })\n    }\n\n    //update nombre de jeux exposés\n    const updateNbJeuxExposes = (data, value) => {\n        Axios.post(`/server/JeuxFestival/update-nbJeuxExposes/${data.suivJ_id}`, {\n            suivJ_nbJeuxExposes: value,\n        })\n            .then((res) => {\n                console.log(res)\n            })\n    }\n    //update ageMin\n    const updateageMin = (data, value) => {\n\n        Axios.post(`/server/Jeux/${data.j_id}/update-ageMin`, {\n            ageMin: value,\n        })\n    }\n    // update joueurs Min\n    const updatenbjMin = (data, value) => {\n\n        Axios.post(`/server/Jeux/${data.j_id}/update-nbjMin`, {\n            nbjMin: value,\n        })\n    }\n    // update joueurs Max\n    const updatenbjMax = (data, value) => {\n\n        Axios.post(`/server/Jeux/${data.j_id}/update-nbjMax`, {\n            nbjMax: value,\n        })\n    }\n\n    // update DUREE\n    const updateDuree = (data, value) => {\n\n        Axios.post(`/server/Jeux/${data.j_id}/update-duree`, {\n            duree: value,\n        })\n    }\n\n    //  update NOTICE\n    const updateNotice = (data, value) => {\n\n        Axios.post(`/server/Jeux/${data.j_id}/update-lienNotice`, {\n            lienNotice: value,\n        })\n    }\n\n    //update recu\n    const updateRecu = (data, value) => {\n\n        Axios.post(`/server/JeuxFestival/update-recu/${data.suivJ_id}`, {\n            suivJ_recu: value,\n        })\n    }\n\n    //update a renvoyer\n    const updateARenvoyer = (data, value) => {\n\n        Axios.post(`/server/JeuxFestival/update-aRenvoyer/${data.suivJ_id}`, {\n            suivJ_aRenvoyer: value,\n        })\n            .then((res) => {\n                console.log(res)\n            })\n    }\n\n    //update renvoyé\n    const updateRenvoye = (data, value) => {\n\n        Axios.post(`/server/JeuxFestival/update-renvoye/${data.suivJ_id}`, {\n            suivJ_renvoye: value,\n        })\n            .then((res) => {\n                console.log(res)\n            })\n    }\n\n//déclarer toutes les colonnes\n    const columns = useMemo(() => {\n\n        const result = [\n            {\n                //This column is used for displaying more/less details\n                Header: () => null,\n                id: 'expander', // 'id' is required\n\n                Cell: ({row}) => (\n                    <span {...row.getToggleRowExpandedProps()}>\n                            {row.isExpanded ? <FontAwesomeIcon className=\"faiconDetail\" icon={faEyeSlash}/> :\n                                <FontAwesomeIcon className=\"faiconDetail\" icon={faInfoCircle}/>}\n                        </span>\n                ),\n            },\n            {\n                Header: \"Nom\",\n                accessor: \"jeu.j_titre\",\n            },\n            {\n                Header: \"Éditeur\",\n                accessor: \"jeu.societe.soc_nom\",\n\n\n                Cell: row => {\n\n                    return (\n                        isLogin() ?\n                            <div>\n                                <Form.Group>\n                                    <Form.Control style={{width: 'auto'}} as=\"select\"\n                                                  onChange={(e) => updateEditeurId(row.row.original, e.target.value)}>\n                                        {editeursList.map((object, i) =>\n                                            <option selected={row.value === object.soc_nom} value={object.soc_id}\n                                                    key={object.soc_id}> {object.soc_nom}</option>\n                                        )}\n                                    </Form.Control>\n                                </Form.Group>\n                            </div>\n                            : <p>{row.value}</p>\n                    )\n                }\n            },\n            {\n                Header: \"Type\",\n                accessor: \"jeu.type_jeu.typJ_libelle\",\n\n                disableSortBy: true,\n                Filter: SelectColumnFilter,\n                filter: 'equals',\n\n                Cell: row => {\n                    return (\n                        isLogin() ?\n                            <div>\n                                <Form.Group>\n                                    <Form.Control style={{width: 'auto'}} as=\"select\"\n                                                  onChange={(e) => updateGameTypeId(row.row.original, e.target.value)}>\n                                        {gameTypeList.map((object, i) =>\n                                            <option selected={row.value === object.typJ_libelle}\n                                                    value={object.typJ_id}\n                                                    key={object.typJ_id}> {object.typJ_libelle}</option>\n                                        )}\n                                    </Form.Control>\n                                </Form.Group>\n                            </div>\n                            : <p>{row.value}</p>\n                    )\n                }\n            },\n\n            {\n                Header: \"Zone\",\n                accessor: \"zone.zo_libelle\",\n\n                disableSortBy: true,\n                Filter: SelectColumnFilter,\n                filter: 'equals',\n\n\n                Cell: row => {\n\n                    return (\n                        isLogin() ?\n                            <div>\n                                <Form.Group>\n                                    <Form.Control style={{width: 'auto'}} as=\"select\"\n                                                  onChange={(e) => updateZone(row.row.original, e.target.value)}>\n                                        {zoneList.map((object, i) =>\n                                            <option selected={row.value === object.zo_libelle} value={object.zo_id}\n                                                    key={object.zo_id}> {object.zo_libelle}</option>\n                                        )}\n                                    </Form.Control>\n                                </Form.Group>\n                            </div>\n                            : <p>{row.value}</p>\n                    )\n                }\n\n            },\n\n\n        ];\n\n        if (isLogin()) {\n            result.push(\n                {\n\n                    Header: \"Exposant\",\n                    accessor: \"reservation.societe.soc_nom\",\n\n                    Cell: row => {\n\n                        return (\n\n                            <a href=\"#\"\n                               onClick={() => goToExhibitorMonitoring(row.row.original.reservation.societe.soc_id)}>{row.value}</a>\n\n                        )\n                    }\n                },\n                {\n\n                    Header: \"Prototype\",\n                    accessor: d => d.suivJ_prototype != null ? d.suivJ_prototype.toString() : null, //required cast from boolea to string\n\n\n                    disableSortBy: true,\n                    Filter: SelectColumnFilter,\n                    filter: 'equals',\n\n                    Cell: row => {\n                        return (\n                            <div style={{'textAlign': 'center'}}>\n                                <input\n                                    type=\"checkbox\"\n                                    defaultChecked={row.value === \"true\"}\n                                    onChange={(event) => updatePrototype(row.row.original, event.target.checked)}/>\n                            </div>\n                        )\n                    },\n                },\n                {\n                    Header: \"Placé plan\",\n                    accessor: d => d.suivJ_place != null ? d.suivJ_place.toString() : null, //required cast from boolea to string\n\n\n                    disableSortBy: true,\n                    Filter: SelectColumnFilter,\n                    filter: 'equals',\n\n                    Cell: row => {\n                        return (\n                            <div style={{'textAlign': 'center'}}>\n                                <input\n                                    type=\"checkbox\"\n                                    defaultChecked={row.value === \"true\"}\n                                    onChange={(event) => updatePlace(row.row.original, event.target.checked)}/>\n                            </div>\n                        )\n                    },\n                },\n\n\n                {\n                    Header: \"Envoie ?\",\n                    accessor: d => d.reservation == null ? null : d.reservation.res_envoiDebut != null ? d.reservation.res_envoiDebut.toString() : null, //required cast from boolea to string\n\n                    disableSortBy: true,\n                    Filter: SelectColumnFilter,\n                    filter: 'equals',\n                },\n\n                {\n                    Header: \"Reçu ?\",\n                    accessor: d => d.suivJ_recu != null ? d.suivJ_recu.toString() : null, //required cast from boolea to string\n\n                    disableSortBy: true,\n                    Filter: SelectColumnFilter,\n                    filter: 'equals',\n\n                    Cell: row => {\n                        return (\n                            <div style={{'textAlign': 'center'}}>\n                                <input\n                                    type=\"checkbox\"\n                                    defaultChecked={row.value === \"true\"}\n                                    onChange={(event) => updateRecu(row.row.original, event.target.checked)}/>\n                            </div>\n                        )\n                    },\n                },\n                {\n                    Header: \"A renvoyer ?\",\n                    accessor: d => d.suivJ_aRenvoyer != null ? d.suivJ_aRenvoyer.toString() : null, //required cast from boolea to string\n\n                    disableSortBy: true,\n                    Filter: SelectColumnFilter,\n                    filter: 'equals',\n\n                    Cell: row => {\n                        return (\n                            <div style={{'textAlign': 'center'}}>\n                                <input\n                                    type=\"checkbox\"\n                                    defaultChecked={row.value === \"true\"}\n                                    onChange={(event) => updateARenvoyer(row.row.original, event.target.checked)}/>\n                            </div>\n                        )\n                    },\n                },\n                {\n                    Header: \"Renvoyé ?\",\n                    accessor: d => d.suivJ_renvoye != null ? d.suivJ_renvoye.toString() : null, //required cast from boolea to string\n\n                    disableSortBy: true,\n                    Filter: SelectColumnFilter,\n                    filter: 'equals',\n\n                    Cell: row => {\n                        return (\n                            <div style={{'textAlign': 'center'}}>\n                                <input\n                                    type=\"checkbox\"\n                                    defaultChecked={row.value === \"true\"}\n                                    onChange={(event) => updateRenvoye(row.row.original, event.target.checked)}/>\n                            </div>\n                        )\n                    },\n                },\n                {\n                    Header: \"Dernière modifications\",\n                    accessor: \"suivJ_dateSaisie\",\n\n                    Cell: row => {\n                        return (\n                            <div>\n                                {Moment(row.row.original.suivJ_dateSaisie).format('DD/MM/YYYY')}\n                            </div>\n                        )\n                    },\n                }\n            )\n        }\n        return result\n\n    }, [listeJeux, editeursList, zoneList])\n\n    /**\n     * This method is used to display more details for a given object\n     * It is actived when clicking on the first column for a specific row\n     *\n     * @param row\n     * @returns {JSX.Element}\n     */\n    const detailsGame = (row) => {\n        //Display the cards (more details)\n        return (\n            <Card className=\"CardGames\">\n                {isLogin() ?\n                    <div className=\"flex-item\">\n                        <CardTitle>\n                            <h5>Détails réservation </h5>\n                        </CardTitle>\n                        <CardText>\n                            <p>\n                                <label id=\"checboxCardGames\">Tombola:</label>\n                                <input\n                                    type=\"checkbox\"\n                                    defaultChecked={row.original.suivJ_tombola}\n                                    onChange={(event) => updateTombola(row.original, event.target.checked)}/>\n                            </p>\n                            <p>\n                                <label id=\"checboxCardGames\">Dotation:</label>\n                                <input\n                                    type=\"checkbox\"\n                                    defaultChecked={row.original.suivJ_dotation}\n                                    onChange={(event) => updateDotation(row.original, event.target.checked)}/>\n\n                            </p>\n                            <p>\n                                <label id=\"checboxCardGames\">Nombre de jeux reçus:</label>\n                                <input\n                                    type=\"number\"\n                                    min=\"0\"\n                                    defaultValue={row.original.suivJ_nbJeuxRecus}\n                                    onChange={(event) => updateNbJeuxRecus(row.original, event.target.value)}/>\n\n                            </p>\n                            <p>\n                                <label id=\"checboxCardGames\">Nombre de jeux exposés:</label>\n                                <input\n                                    type=\"number\"\n                                    min=\"0\"\n                                    defaultValue={row.original.suivJ_nbJeuxExposes}\n                                    onChange={(event) => updateageMin(row.original, event.target.value)}/>\n\n                            </p>\n                        </CardText>\n                    </div>\n                    : null}\n                <div className=\"flex-item\">\n                    <CardTitle>\n                        <h5> Détails jeu </h5>\n                    </CardTitle>\n                    <CardText>\n                        <p>\n                            <label id=\"checboxCardGames\">Age minimum:</label>\n                            {isLogin() ?\n                                <input\n                                    type=\"number\"\n                                    min=\"0\"\n                                    defaultValue={row.original.jeu.j_ageMin}\n                                    onChange={(event) => updateNbJeuxExposes(row.original, event.target.value)}/>\n                                : row.original.jeu.j_ageMin}\n                            an(s)\n                        </p>\n                        <p>\n                            <label id=\"checboxCardGames\">Nombre de joueurs minimum: </label>\n                            {isLogin() ?\n                                <input\n                                    type=\"number\"\n                                    min=\"0\"\n                                    defaultValue={row.original.jeu.j_nbMinJoueurs}\n                                    onChange={(event) => updatenbjMin(row.original, event.target.value)}/>\n                                : row.original.jeu.j_nbMinJoueurs}\n                        </p>\n                        <p>\n                            <label id=\"checboxCardGames\"> Nombre de joueurs maximum: </label>\n                            {isLogin() ?\n                                <input\n                                    type=\"number\"\n                                    min={row.original.jeu.j_nbMinJoueurs}\n                                    defaultValue={row.original.jeu.j_nbMaxJoueurs}\n                                    onChange={(event) => updatenbjMax(row.original, event.target.value)}/>\n                                : row.original.jeu.j_nbMaxJoueurs}\n                        </p>\n                        <p>\n                            <label id=\"checboxCardGames\">Durée: </label>\n                            {isLogin() ?\n                                <input\n                                    type=\"time\"\n                                    defaultValue={row.original.jeu.j_duree}\n                                    onChange={(event) => updateDuree(row.original, event.target.value)}/>\n                                : row.original.jeu.j_duree}\n                        </p>\n                        <p>\n                            {row.original.jeu.j_lienNotice !== \"'NULL'\" ? (\n                                <CardLink href={row.original.jeu.j_lienNotice}>Voir les règles du jeu</CardLink>\n                            ) : null}\n\n                        </p>\n                        {\n                            isLogin() ? <p><label id=\"checboxCardGames\"> Changer le lien des règles: </label>\n                                    <input\n                                        type=\"url\"\n                                        defaultValue={row.original.jeu.j_lienNotice}\n                                        onChange={(event) => updateNotice(row.original, event.target.value)}/>\n                                </p>\n                                : null\n                        }\n\n\n                    </CardText>\n                </div>\n            </Card>\n        )\n\n\n    }\n\n    return (\n        <div className=\"EspaceFooter\">\n            <div id=\"titlePageJeuxFestival\">\n                <h1>\n                    <FontAwesomeIcon className=\"faicon\" icon={faDice}/>\n                    Suivi des jeux du festival\n                </h1>\n            </div>\n            <div style={{marginTop: `50px`}}>\n                <TableContainer columns={columns} data={listeJeux} renderRowSubComponent={detailsGame}/>\n            </div>\n        </div>\n    )\n}\n\nexport default FestivalGames\n","import React, {useEffect, useState} from 'react';\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Axios from \"axios\";\nimport './reservationForm.css'\nimport Table from \"react-bootstrap/Table\"\n\n\nexport const FormReservation = ({onSubmit}) => {\n    const [localisations, setLocalisations] = useState([]);\n\n//récupérer toutes les localisations\n    useEffect(() => {\n        const fes_id = localStorage.getItem(\"currentFestival\");\n        Axios.get(`/server/localisation/allDetails/${fes_id}`)\n            .then((res) => {\n                setLocalisations(res.data)\n                console.log(\"LOCALISATIONS\", res.data)\n            })\n\n    }, []);\n\n\n    return (\n        <Form onSubmit={onSubmit}>\n\n            <div className=\"form-group\">\n                <h4 id=\"titleGameForm\">Nouvelle réservation</h4>\n\n                {\n                    localisations ?\n                        localisations.map((value, index) => {\n                            return (\n                                <div id=\"loc\">\n                                    <Table>\n                                        <tr>\n                                            <td>\n                                                <Form.Group size=\"lg\"  controlId=\"loc_id\" >\n                                                    <text value={value.loc_id}>{value.loc_libelle}</text>\n\n                                                </Form.Group>\n                                            </td>\n                                            <td>\n                                                <Form.Group size=\"lg\"  controlId=\"esp_qte\" >\n                                                     <input type=\"number\"\n                                                                min=\"0\"\n                                                                defaultValue=\"0\"\n                                                    />\n                                                </Form.Group>\n                                            </td>\n                                            <td>\n                                                <Form.Control autoFocus  as=\"select\" controlId=\"esp_enTables\"\n                                                              defaultValue={true}\n                                                >\n                                                    <option value={true}>Tables </option>\n                                                    <option value={false}>M²</option>\n                                                </Form.Control>\n                                            </td>\n                                        </tr>\n                                    </Table>\n\n\n\n                                </div>\n                            )\n                        })\n                        :\n                        <div>Y a un problème Arthur, ton festival n'a pas de localisations ..</div>\n                }\n\n\n                <Button id=\"btn-formGame\" block size=\"lg\" type=\"submit\" >\n                    Valider\n                </Button>\n            </div>\n        </Form>\n    );\n};\n\nexport default FormReservation","import React, {useEffect, useState} from 'react';\nimport './formContact.css'\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n\n\nexport const FormContact = ({onSubmit}) => {\n\n    const [nom, setNom] = useState(\"\");\n    const [prenom, setPrenom] = useState(\"\");\n    const [telPortable, setTelPortable] = useState(\"\");\n    const [telFixe, setTelFixe] = useState(\"\");\n    const [email, setEmail] =useState(\"\");\n    const [rue, setRue] = useState(\"\");\n    const [ville, setVille] = useState(\"\");\n    const [codePostal, setCodePostal] = useState(\"\");\n    const [pays, setPays] = useState(\"\")\n    const [fonction, setFonction] = useState(\"\");\n    const [principal, setPrincipal] = useState(false);\n\n    function validateForm() {\n        return nom.length > 0 && prenom.length > 0;\n    }\n\n\n    return (\n\n        <Form onSubmit={onSubmit}>\n            <h4 id=\"titleGameForm\">Contact</h4>\n\n\n\n            <Form.Group size=\"lg\" controlId=\"nom\">\n                <Form.Label>Nom*</Form.Label>\n                <Form.Control autoFocus value={nom} onChange={(e) => setNom(e.target.value)}/>\n            </Form.Group>\n            <Form.Group size=\"lg\" controlId=\"prenom\">\n                <Form.Label>Prenom*</Form.Label>\n                <Form.Control autoFocus value={prenom}\n                              onChange={(e) => setPrenom(e.target.value)}/>\n            </Form.Group>\n            <Form.Group size=\"lg\" controlId=\"principal\">\n                <Form.Check inline label=\"Contact principal ?\"  value={principal} onChange={(e)=> setPrincipal(e.target.checked)} />\n            </Form.Group>\n            <Form.Group size=\"lg\" controlId=\"telPortable\">\n                <Form.Label>Téléphone protable</Form.Label>\n                <Form.Control autoFocus value={telPortable} type=\"tel\"\n                              onChange={(e) => setTelPortable(e.target.value)}/>\n            </Form.Group>\n            <Form.Group size=\"lg\" controlId=\"telFixe\">\n                <Form.Label>Téléphone fixe</Form.Label>\n                <Form.Control autoFocus value={telFixe} type=\"tel\"\n                              onChange={(e) => setTelFixe(e.target.value)}/>\n            </Form.Group>\n            <Form.Group  size=\"lg\" controlId=\"email\">\n                <Form.Label>Email</Form.Label>\n                <Form.Control autoFocus value={email} type=\"email\"\n                                       onChange={(e) => setEmail(e.target.value)}/>\n            </Form.Group>\n            <Form.Group size=\"lg\" controlId=\"rue\">\n                <Form.Label>Rue</Form.Label>\n                <Form.Control autoFocus value={rue}\n                              onChange={(e) => setRue(e.target.value)}/>\n            </Form.Group>\n            <Form.Group size=\"lg\" controlId=\"ville\">\n                <Form.Label>Ville</Form.Label>\n                <Form.Control autoFocus value={ville} onChange={(e) => setVille(e.target.value)}/>\n            </Form.Group>\n            <Form.Group size=\"lg\" controlId=\"codePostal\">\n                <Form.Label>Code postal</Form.Label>\n                <Form.Control autoFocus value={codePostal} onChange={(e) => setCodePostal(e.target.value)}/>\n            </Form.Group>\n            <Form.Group size=\"lg\" controlId=\"pays\">\n                <Form.Label>Pays</Form.Label>\n                <Form.Control autoFocus value={pays} onChange={(e) => setPays(e.target.value)}/>\n            </Form.Group>\n\n            <Form.Group size=\"lg\" controlId=\"fonction\">\n                <Form.Label>Fonction</Form.Label>\n                <Form.Control autoFocus value={fonction} onChange={(e) => setFonction(e.target.value)}/>\n            </Form.Group>\n\n\n\n            <p>* Champs obligatoire</p>\n\n            <div className=\"form-group\">\n                <Button id=\"btn-formContact\" block size=\"lg\" type=\"submit\" disabled={!validateForm()}>\n                    Valider\n                </Button>\n            </div>\n\n        </Form>\n    );\n};\nexport default FormContact;\n","import React, {useEffect, useMemo, useState} from \"react\";\nimport Axios from \"axios\";\nimport {useLocation, useParams} from \"react-router-dom\";\nimport Accordion from 'react-bootstrap/Accordion'\nimport Card from 'react-bootstrap/Card'\nimport './exhibitor-monitoring.css'\nimport {faCheckCircle} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Alert from \"react-bootstrap/Alert\";\nimport CardContact from \"../../components/contact/CardContact\";\nimport {Container} from \"../../components/ModalForm/container\";\nimport FormReservation from \"./reservationForm\";\nimport FormContact from \"../../components/contact/FormContact\";\nimport {isAdmin} from \"../../utils/utils\";\nimport Table from \"react-bootstrap/Table\"\n\n\nconst ExhibitorMonitoring = () => {\n\n    const {idExposant} = useParams();\n\n    const [contactList, setContactList] = useState([]);\n    const [name, setName] = useState(\"\");\n    const [show, setShow] = useState(false);\n    const [showNewContact, setShowNewContact] = useState(false);\n    const [showAdress, setShowAdress] = useState(false);\n    const [soc_ville, setSoc_ville] = useState(\"\");\n    const [soc_rue, setSoc_rue] = useState(\"\");\n    const [soc_codePostal, setSoc_codePostal] = useState(\"\");\n    const [soc_pays, setSoc_pays] = useState(\"\");\n    const [detailSuivi, setDetailSuivi] = useState([]);\n    const [suivi, setSuivi] = useState([]);\n    const [reservation, setReservation] = useState([]);\n    const [commentaire, setCommentaire] = useState(\"\");\n    const [espaces, setEspaces] = useState([]);\n\n    const [resaExist, setResaExist] = useState(false);\n\n\n\n    //méthode qui s'appelle au chargement de la page\n    useEffect(() => {\n        //Récupérer les infos des contacts\n        Axios.get(`/server/societe/${idExposant}/contacts`)\n            .then((res) => {\n                setContactList(res.data)\n                setName(res.data.soc_nom)\n                setSoc_rue(res.data.soc_rue)\n                setSoc_ville(res.data.soc_ville)\n                setSoc_codePostal(res.data.soc_codePostal)\n                setSoc_pays(res.data.soc_pays)\n            });\n\n    }, []);\n\n    useEffect(() => {\n        //Récupérerles infos réservation\n        const fes_id = localStorage.getItem(\"currentFestival\")\n        Axios.get(`/server/reservations/festival/${fes_id}/societe/${idExposant}`).then((res) => {\n            if (res.data) {\n                setReservation(res.data)\n                setCommentaire(res.data.suivE_commentaire)\n                if(res.data.length !== 0) {\n                    setResaExist(true)\n                }\n            }\n            console.log(\"RESERVATION\", res.data)\n        })\n    }, []);\n\n    useEffect(() => {\n        //Récupérerles infos de suivi\n        const fes_id = localStorage.getItem(\"currentFestival\")\n        Axios.get(`/server/suiviExposant/festival/${fes_id}/societe/${idExposant}`)\n            .then((res) => {\n            setSuivi(res.data)\n            console.log(\"SUIVI\", res)\n        })\n    }, []);\n\n   useEffect(() => {\n       if(resaExist) {\n           const fes_id = localStorage.getItem(\"currentFestival\")\n           const res_id = reservation.res_id\n\n           Axios.get(`http://localhost:3000/server/localisation/${fes_id}/allEspace/reservation/${res_id}`)\n               .then((res) => {\n                   setEspaces(res.data)\n                   console.log(\"ESPACES\", res.data)\n               })\n       }\n\n   }, [resaExist]) //se declenche lorsque la valeur entre crochet cha   nfe\n\n    function validateForm() {\n        return name.length > 0;\n    }\n\n    function validateFormAdress() {\n        return soc_ville.length > 0 && soc_rue.length > 0 && soc_codePostal.length > 0 && soc_pays.length > 0\n    }\n\n    //changer le nom\n    const updateNom = (event) => {\n        event.preventDefault()\n\n        Axios.post(`/server/societe/${idExposant}/update-name`, {\n            name: name,\n        }).then((res) => {\n            setShow(\"true\");\n        })\n    }\n\n    //update commentaire\n    const updateCommentaire = (event) => {\n        event.preventDefault()\n\n        Axios.post(`/server/suiviExposant/${idExposant}/update-commentaire`, {\n            fes_id: localStorage.getItem(\"currentFestival\"),\n            suivE_commentaire: commentaire,\n        }).then((res) => {\n            console.log(res)\n        })\n    }\n//ajouter un contact\n    const onSubmit = (event) => {\n\n        event.preventDefault(event);\n\n        console.log(\"EVENT\", event)\n\n        Axios.post(`/server/contacts/add/${idExposant}\"`, {\n            //récupérer les valeurs du formulaire\n            nom: event.target.nom.value,\n            prenom: event.target.prenom.value,\n            telPortable: event.target.telPortable.value,\n            telFixe: event.target.telFixe.value,\n            email: event.target.email.value,\n            rue: event.target.rue.value,\n            ville: event.target.ville.value,\n            codePostal: event.target.codePostal.value,\n            pays: event.target.pays.value,\n            fonction: event.target.fonction.value,\n            principal: event.target.principal.value,\n        }).then((res) => {\n            //afficher alert succes\n            setShowNewContact(true);\n\n\n        })\n    };\n\n    //créer une réservation\n    const onSubmitReservation = (event) => {\n\n        //Ne pas oublier cette ligne!!!\n        event.preventDefault();\n        console.log(\"EVENT RESA\",event);\n        console.log(\"LOC\",event.target.length)\n        console.log(\"LOC\",event.target[1].value)\n        console.log(\"LOC\",event.target[2].value)\n        console.log(\"LOC\",event.target[3].value)\n\n        for(const i of event.target) {\n            let loc_id;\n            let esp_qte;\n            let esp_enTables;\n            if(i%1 === 0) {\n\n            }\n            const espace = {\n                loc_id: i.value,\n            }\n            console.log(i.value)\n        }\n        /*\n                Axios.post(\"/server/\", {\n                    //récupérer les valeurs du formulaire\n                    // title: event.target.title.value,\n\n                }).then((res) => {\n                    //afficher alert succes\n                    //setShow(true);\n\n\n                })*/\n    };\n\n    //changer adresse exposant\n    const updateAdress = (event) => {\n        event.preventDefault()\n\n        Axios.post(`/server/societe/${idExposant}/update-adress`, {\n            soc_ville: soc_ville,\n            soc_rue: soc_rue,\n            soc_codePostal: soc_codePostal,\n            soc_pays: soc_pays\n        }).then((res) => {\n            setShowAdress(\"true\");\n        })\n    }\n\n    //changer date contact\n    const updateDateContact = (value, numeroRelance) => {\n\n        Axios.put(`/server/suiviExposant/updateDateContact/${numeroRelance}`, {\n            suivE_id: suivi.suivE_id,\n            suivE_dateContact: value\n        })\n    }\n\n    //changer nombre de bénévols\n    const updateNbBenevoles = (value) => {\n        Axios.put(\"/server/suiviExposant/updateNbBenevole\", {\n            suivE_id: suivi.suivE_id,\n            suivE_nbBenevoles: value\n        })\n    }\n\n    //update besoin de benevoles\n    const updateStatusBenevole = (value) => {\n        Axios.put(\"/server/suiviExposant/updateBenevole\", {\n            suivE_id: suivi.suivE_id,\n            suivE_benevole: value\n        })\n    }\n\n    //changer si il se déplace ou non\n    const updateStatusSeDeplace = (value) => {\n\n        console.log(\"VALUES DEPLPPOEPZOE\", value)\n        Axios.put(\"/server/suiviExposant/updateSeDeplace\", {\n            suivE_id: suivi.suivE_id,\n            suivE_deplacement: value\n        }).then((res) => console.log(res))\n\n    }\n\n    const updateFacture = (value) => {\n\n        Axios.put(\"/server/reservations/updateReservationFacture\", {\n            res_id: reservation.res_id,\n            res_facture: value\n        })\n    }\n\n    const updatePaiement = (value) => {\n\n        Axios.put(\"/server/reservations/updateReservationPaiement\", {\n            res_id: reservation.res_id,\n            res_paiement: value\n        })\n    }\n\n    const updateDatePaiement = (value) => {\n        Axios.put(\"/server/reservations/updateDatePaiement\", {\n            res_id: reservation.res_id,\n            res_datePaiement: value,\n        })\n    }\n\n\n    const updateDateFacturation = (value) => {\n        Axios.put(\"/server/reservations/updateDateFacturation\", {\n            res_id: reservation.res_id,\n            res_dateFacturation: value,\n        })\n    }\n\n    const updateEnvoieDebut = (value) => {\n        Axios.put(\"/server/reservations/updateEnvoieJeuxDebut\", {\n            res_id: reservation.res_id,\n            res_envoiDebut: value,\n        })\n    }\n\n    const updatePrixRetour = (value) => {\n        Axios.put(\"/server/reservations/updatePrixRetour\", {\n            res_id: reservation.res_id,\n            res_prixRetour: value,\n        })\n    }\n\n    const CalculerPrixTOT = () => {\n        let prix = 0\n        espaces.map((e,i) => {\n            console.log(e)\n            if(e.espaces[0].esp_enTables){\n                prix += e.loc_prixTable * e.espaces[0].esp_qte\n            }else{\n                prix += e.loc_prixM2 * e.espaces[0].esp_qte\n            }\n\n\n        })\n        return prix\n    }\n\n    const CalculerPrix = (e) => {\n\n            if(e.espaces[0].esp_enTables){\n                return e.loc_prixTable * e.espaces[0].esp_qte\n            }else{\n               return e.loc_prixM2 * e.espaces[0].esp_qte\n            }\n\n    }\n\n    return (\n        <div className=\"EspaceFooter\">\n            <div id=\"titlePageJeuxFestival\">\n                <h1>\n                    {name}\n                </h1>\n            </div>\n            <div className=\"flex-container-Contacts\">\n\n                <div className=\"flex-item\">\n                    <Form onSubmit={updateNom} id=\"nomExposant\">\n\n                        <label id=\"labelNomExposant\">Changer le nom: </label>\n                        <input value={name} onChange={(e) => {\n                            setName(e.target.value);\n                            setShow(false)\n                        }}/>\n                        <Button type=\"submit\" id=\"btnCheck\" disabled={!validateForm()}>\n                            <FontAwesomeIcon className=\"faicon\" id=\"validateButton\" icon={faCheckCircle}/>\n                        </Button>\n\n                        <Alert id=\"alertSucces\" variant=\"success\" show={show}>\n                            Nom modifié !\n                        </Alert>\n                    </Form>\n                    <Alert id=\"alertSucces\" variant=\"success\" show={showAdress}>\n                        Adresse modifiée !\n                    </Alert>\n                    <Alert id=\"alertSucces\" variant=\"success\" show={showNewContact}>\n                        Contact ajouté !\n                    </Alert>\n\n                </div>\n\n\n                <div className=\"flex-item\">\n                    <Form onSubmit={updateCommentaire}>\n\n                    <textarea id=\"commentaireStickyNote\" value={commentaire} onChange={(e) => {\n                        setCommentaire(e.target.value)\n                    }}/>\n\n                        <Button type=\"submit\" id=\"btnCheck\">\n                            Mettre à jour la note\n                            <FontAwesomeIcon className=\"faicon\" id=\"validateButton\" icon={faCheckCircle}/>\n                        </Button>\n                    </Form>\n\n                </div>\n            </div>\n\n\n            <Accordion>\n                <Card>\n                    <Accordion.Toggle as={Card.Header} eventKey=\"0\">\n                        Contacts\n                    </Accordion.Toggle>\n                    <Accordion.Collapse eventKey=\"0\">\n                        <Card.Body className=\"flex-container-Contacts\">\n                            <div id=\"btnNewJeu\">\n                                <Container triggerText=\"Ajouter un contact\" onSubmit={onSubmit}\n                                           component={FormContact}/>\n                            </div>\n\n                            <Card className=\"flex-item\">\n                                <Card.Header>Adresse: {name}</Card.Header>\n                                <div id=\"cardContacts\">\n                                    <Form onSubmit={updateAdress}>\n                                        <div>\n                                            <textarea id=\"expoAdress\" value={soc_rue} onChange={(e) => {\n                                                setSoc_rue(e.target.value);\n                                                setShowAdress(false)\n                                            }}/>\n\n                                        </div>\n                                        <div>\n                                            <textarea id=\"expoAdress\" value={soc_codePostal}\n                                                      onChange={(e) => setSoc_codePostal(e.target.value)}/>\n\n                                        </div>\n\n                                        <div>\n                                            <textarea id=\"expoAdress\" value={soc_ville}\n                                                      onChange={(e) => setSoc_ville(e.target.value)}/>\n\n                                        </div>\n                                        <div>\n                                            <textarea id=\"expoAdress\" value={soc_pays}\n                                                      onChange={(e) => setSoc_pays(e.target.value)}/>\n\n                                        </div>\n\n                                        <Button type=\"submit\" id=\"btnCheck\" disabled={!validateFormAdress()}>\n                                            <FontAwesomeIcon className=\"faicon\" id=\"validateButton\"\n                                                             icon={faCheckCircle}/>\n                                        </Button>\n                                    </Form>\n                                </div>\n\n                            </Card>\n\n                            {contactList.contacts ? contactList.contacts.map((value, index) => {\n                                    return (\n                                        <Card className=\"flex-item\">\n                                            <Card.Header\n                                                style={{\"background-color\": value.co_principal ? \"#E74C3C \" : \"default\"}}>Contact</Card.Header>\n                                            <div id=\"cardContacts\"\n                                                 style={{\"background-color\": value.co_principal ? \"#EC7063\" : \"default\"}}>\n                                                <div>{value.co_prenom}</div>\n                                                <div>{value.co_nom}</div>\n                                                <div>{value.co_mail}</div>\n                                                <div>{value.co_telFixe}</div>\n                                                <div>{value.co_telPortable}</div>\n                                                <div>{value.co_rue}</div>\n                                                <div> {value.co_codePostal}{value.co_ville}{value.co_pays}</div>\n\n                                            </div>\n                                        </Card>\n                                    )\n                                }\n                            ) : null}\n\n\n                        </Card.Body>\n\n                    </Accordion.Collapse>\n                </Card>\n\n                <Card>\n                    <Accordion.Toggle as={Card.Header} eventKey=\"1\">\n                        Détails suivi\n                    </Accordion.Toggle>\n                    <Accordion.Collapse eventKey=\"1\">\n                        <Card.Body className=\"flex-container-Contacts\">\n                            <div className=\"flex-item\">\n                                <div>\n                                    <label>1er contact: </label>\n                                    <input id=\"labelNomExposant\" type=\"date\"\n                                           defaultValue={suivi.suivE_dateContact1}\n                                           onChange={(event) => updateDateContact(event.target.value, 1)}\n                                    />\n                                </div>\n                                <div>\n                                    <label>2ème contact: </label>\n                                    <input id=\"labelNomExposant\" type=\"date\"\n                                           defaultValue={suivi.suivE_dateContact2}\n                                           onChange={(event) => updateDateContact(event.target.value, 2)}\n                                    />\n                                </div>\n                                <div>\n                                    <label>3ème contact: </label>\n                                    <input id=\"labelNomExposant\" type=\"date\"\n                                           defaultValue={suivi.suivE_dateContact3}\n                                           onChange={(event) => updateDateContact(event.target.value, 3)}\n                                    />\n                                </div>\n                            </div>\n\n                            {\n                                reservation.length != 0 ?\n                                    <div className=\"flex-item\">\n                                        <div>\n                                            <label id=\"labelCheckbox\">Se déplace: </label>\n\n                                            <input\n                                                type=\"checkbox\"\n                                                defaultChecked={suivi.suivE_deplacement}\n                                                onClick={(e) => updateStatusSeDeplace(e.target.checked ? 1 : 0)}\n                                            />\n\n                                        </div>\n                                        <div>\n                                            <label id=\"labelCheckbox\">Besoin de bénévoles: </label>\n\n                                            <input\n                                                type=\"checkbox\"\n                                                defaultChecked={suivi.suivE_benevole}\n                                                onClick={(e) => updateStatusBenevole(e.target.checked ? 1 : 0)}\n                                            />\n\n                                        </div>\n                                        <div>\n                                            <label id=\"labelCheckbox\">Nombre de bénévols nécessaires: </label>\n\n                                            <input\n                                                type=\"number\"\n                                                min=\"0\"\n                                                defaultValue={suivi.suivE_nbBenevoles}\n                                                onChange={(event) => updateNbBenevoles(event.target.value)}\n                                            />\n                                        </div>\n                                        <div>\n\n                                            <label id=\"labelCheckbox\">Il envoie ses jeux ?  </label>\n                                            <input\n                                                type=\"checkbox\"\n                                                defaultChecked= {reservation.res_envoiDebut}\n                                                onClick={(e) => updateEnvoieDebut(e.target.checked ? 1 : 0)}\n                                            />\n\n                                        </div>\n                                        <label id=\"labelCheckbox\">Prix retour: </label>\n\n                                        <input\n                                            type=\"number\"\n                                            min=\"0\"\n                                            defaultValue={reservation.res_prixRetour}\n                                            onChange={(event) => updatePrixRetour(event.target.value)}\n                                        />\n                                        €\n                                        <div>\n\n                                        </div>\n\n                                        <div>\n                                            <label id=\"labelCheckbox\">A été facturé?</label>\n                                            <input\n                                                type=\"checkbox\"\n                                                defaultChecked={reservation.res_facture}\n                                                onClick={(event) => updateFacture(event.target.checked ? 1 : 0)}\n                                            />\n                                            <label id=\"labelCheckbox\">Date de facturation:</label>\n\n\n                                            <input  type=\"date\"\n                                                    defaultValue= {reservation.res_dateFacturation}\n                                                    onChange={(event) => updateDateFacturation(event.target.value)}\n                                            />\n\n                                        </div>\n                                        <div>\n                                            <label id=\"labelCheckbox\"> A payé? </label>\n                                            <input\n                                                type=\"checkbox\"\n                                                defaultChecked={reservation.res_paiement}\n                                                onClick={(event) => updatePaiement(event.target.checked ? 1 : 0)}\n\n                                            />\n\n                                            <label id=\"labelCheckbox\">Date de paiement:</label>\n\n                                            <input  type=\"date\"\n                                                   defaultValue={reservation.res_datePaiement}\n                                                   onChange={(event) => updateDatePaiement(event.target.value)}\n                                            />\n\n                                        </div>\n\n\n                                    </div>\n                                    :\n\n                                    null\n\n                            }\n\n\n                        </Card.Body>\n                    </Accordion.Collapse>\n                </Card>\n                {\n                    isAdmin() ?\n\n                <Card>\n                    <Accordion.Toggle as={Card.Header} eventKey=\"2\">\n                        Réservation\n                    </Accordion.Toggle>\n                    <Accordion.Collapse eventKey=\"2\">\n                        <Card.Body>\n                            {\n                                reservation.length != 0 ?\n                                    <div>\n                                        <Table responsive >\n                                            <thead>\n                                            <td className=\"tdUnderline\"></td>\n                                            <td className=\"tdUnderline\"></td>\n                                            <td className=\"tdUnderline\"></td>\n                                            <td className=\"tdUnderline\">Prix calculé</td>\n                                            </thead>\n                                            <tbody>\n                                            {espaces.map((e,i) => {\n                                                    return(\n                                                    <tr >\n                                                        <td className=\"tdUnderline\">{e.loc_libelle}</td>\n                                                        <td className=\"tdUnderline\">{e.espaces[0].esp_qte}</td>\n                                                        {e.espaces[0].esp_enTables ? <td className=\"tdUnderline\"> tables </td> : <td className=\"tdUnderline\">M²</td>}\n                                                        <td className=\"tdUnderline\">{CalculerPrix(e)}</td>\n                                                    </tr>\n                                                    )\n                                                })\n                                            }\n\n                                            <tr>\n                                                <td>Prix TOTAL calculé</td>\n                                                <td></td>\n                                                <td></td>\n                                                <td>{CalculerPrixTOT()} €</td>\n                                            </tr>\n                                            <tr id=\"prixNego\">\n                                                <td>Prix TOTAL négocié</td>\n                                                <td>{reservation.res_prixNegocie}€</td>\n\n\n                                            </tr>\n                                            </tbody>\n                                        </Table>\n                                    </div>\n\n\n                                    :\n                                    <div>\n                                        <div id=\"btnNewJeu\">\n                                            <Container triggerText=\"Créer une réservation\"\n                                                       onSubmit={onSubmitReservation} component={FormReservation}/>\n                                        </div>\n                                    </div>\n                            }\n                        </Card.Body>\n                    </Accordion.Collapse>\n                </Card>\n                        : null\n                }\n                <Card>\n                    <Accordion.Toggle as={Card.Header} eventKey=\"3\">\n                        Jeux de la réservation\n                    </Accordion.Toggle>\n                    <Accordion.Collapse eventKey=\"3\">\n                        <Card.Body>Hello! I'm another body</Card.Body>\n                    </Accordion.Collapse>\n                </Card>\n            </Accordion>\n        </div>\n    )\n}\nexport default ExhibitorMonitoring","import React, {useEffect, useState, useMemo} from \"react\";\nimport Axios from \"axios\"\nimport TableContainer from \"../../components/tables/TableContainer\";\nimport {SelectColumnFilter} from \"../../components/tables/Filters\";\n\nimport './AfficherSociete.css'\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faEyeSlash, faInfoCircle} from \"@fortawesome/free-solid-svg-icons\";\nimport {Container} from \"../../components/ModalForm/container\";\nimport FormSociete from \"./formSociete\";\n\n\nexport default function AfficherSocieteRole() {\n\n    const [societe, setListSociete] = useState([])\n\n    /**\n     * This method is used to fetch data from DB every time it is been updated\n     */\n    useEffect(() => {\n        const fetchData = async () => {\n            const response = await Axios.get(`/server/festivals/affichageRole/${localStorage.getItem(\"currentFestival\")}`);\n            setListSociete(response.data[0].societes)\n        };\n        fetchData();\n    }, [])\n\n\n    /**\n     * This method is used to update the status (soc_estInactif) of a societe\n     *\n     * @param rowIndex\n     * @param columnId\n     * @param value\n     */\n    const updateStatusInactif = (data, value) => {\n        console.log(\"RESULT\", data, value)\n        Axios.put(\"/server/societe/updateStatusInactif\", {\n            soc_id: data.soc_id, //row id=0 <==> soc_id = 1 --> d'où le +1\n            soc_estInactif: value //'true' or 'false'\n        })\n    }\n\n    const updateStatusEditeur = (data, value) => {\n        console.log(\"RESULT\", data, value)\n\n        Axios.put(\"/server/societe/updateStatusEditeur\", {\n            soc_id: data.soc_id, //row id=0 <==> soc_id = 1 --> d'où le +1\n            fes_id: localStorage.getItem(\"currentFestival\"),\n            rolF_estEditeur: value //'true' or 'false'\n        })\n    }\n\n    const updateStatusExposant = (data, value) => {\n        console.log(\"RESULT\", data, value)\n\n        Axios.put(\"/server/societe/updateStatusExposant\", {\n            soc_id: data.soc_id, //row id=0 <==> soc_id = 1 --> d'où le +1\n            fes_id: localStorage.getItem(\"currentFestival\"),\n            rolF_estExposant: value //'true' or 'false'\n        })\n    }\n\n\n    const onSubmit = (event) => {\n        event.preventDefault(event);\n\n        const fes_id = localStorage.getItem(\"currentFestival\")\n        Axios.post(`http://localhost:3000/server/societe/add/${fes_id}`, {\n            soc_nom: event.target.nom.value,\n            soc_ville: event.target.ville.value,\n            soc_rue: event.target.rue.value,\n            soc_codePostal: event.target.codePostal.value,\n            soc_pays: event.target.pays.value\n        }).then((response) => {\n            console.log(response)\n        })\n    }\n    /**\n     * This method is declaring all the columns for the table\n     *\n     * @type {[{Header: (function(): null), id: string, Cell: (function({row: *}))}, {Header: string, accessor: string}, {filter: string, Header: string, Filter: (function({column: {filterValue: *, setFilter: *, preFilteredRows: *, id?: *}}): *), accessor: (function(*): string), id: string, disableSortBy: boolean, Cell: (function(*))}]}\n     */\n    const columns = useMemo(() => [\n            /*\n            {\n\n                //This column is used for displaying more/less details\n                Header: () => null,\n                id: 'expander', // 'id' is required\n\n                Cell: ({row}) => (\n                    <span {...row.getToggleRowExpandedProps()}>\n                        {row.isExpanded ? <FontAwesomeIcon className=\"faiconDetail\" icon={faEyeSlash}/> :\n                            <FontAwesomeIcon className=\"faiconDetail\" icon={faInfoCircle}/>}\n                    </span>\n                ),\n            },\n*/\n            {\n                Header: \"Nom\",\n                accessor: \"soc_nom\",\n            },\n            {\n                id: \"inactif\",\n                Header: \"Inactif\",\n                accessor: d => d.soc_estInactif == 1 ? 'oui' : 'non', //required cast from boolea to string\n\n                //Allows column to be sorted depending on all content type (true/false)\n                disableSortBy: true,\n                Filter: SelectColumnFilter,\n                filter: 'equals',\n\n                //Displays checkox for each row\n                //Calls updateStatusInactif every time a checkbox is been updated\n                Cell: row => {\n                    return (\n                        <div style={{'textAlign': 'center'}}>\n\n                            <input\n                                type=\"checkbox\"\n                                defaultChecked={row.value == 'oui' ? true : false}\n                                onChange={(event) => updateStatusInactif(row.row.original, event.target.checked ? 1 : 0)}/>\n                        </div>\n                    )\n                },\n            },\n            {\n                id: \"estExposant\",\n                Header: \"Exposant\",\n                accessor: d => d.role_festival.rolF_estExposant == 1 ? 'oui' : 'non', //required cast from boolean to string\n\n                //Allows column to be sorted depending on all content type (true/false)\n                disableSortBy: true,\n                Filter: SelectColumnFilter,\n                filter: 'equals',\n\n                Cell: row => {\n                    return (\n\n                        <div style={{'textAlign': 'center'}}>\n                            {\n                                console.log(\"ROW VALUE\", row)\n                            }\n                            <input\n                                type=\"checkbox\"\n                                defaultChecked={row.value == 'oui' ? true : false}\n                                onChange={(event) => updateStatusExposant(row.row.original, event.target.checked)}\n                            />\n                        </div>\n                    )\n                },\n            },\n            {\n                id: \"estEditeur\",\n                Header: \"Editeur\",\n                accessor: d => d.role_festival.rolF_estEditeur == 1 ? 'oui' : 'non', //required cast from boolean to string\n\n\n                //Allows column to be sorted depending on all content type (true/false)\n                disableSortBy: true,\n                Filter: SelectColumnFilter,\n                filter: 'equals',\n\n                Cell: row => {\n                    return (\n                        <div style={{'textAlign': 'center'}}>\n                            <input\n                                type=\"checkbox\"\n                                defaultChecked={row.value == 'oui' ? true : false}\n                                onChange={(event) => updateStatusEditeur(row.row.original, event.target.checked ? true : false)}\n                            />\n                        </div>\n                    )\n                },\n            },\n        ], []\n    )\n\n    /**\n     * This method is used to display more details for a given object\n     * It is actived when clicking on the first column for a specific row\n     *\n     * @param row\n     * @returns {JSX.Element}\n     */\n    const detailsSociete = (row) => {\n\n    };\n\n\n    /**\n     * Display the table\n     *\n     * required :\n     *      the columns set up above\n     *      the data (list of societes)\n     * optional :\n     *      {renderRowSubComponent} only if you want the ability to display more details\n     */\n    return (\n        <div style={{marginTop: `50px`}} className=\"EspaceFooter\">\n\n            <TableContainer columns={columns} data={societe} /*renderRowSubComponent={detailsSociete}*//>\n\n            <Container triggerText=\"Créer une societe\" onSubmit={(e) => onSubmit(e)} component={FormSociete}/>\n\n        </div>\n    )\n}\n\n","import React, {useEffect, useState, useMemo} from \"react\";\nimport Axios from \"axios\"\nimport TableContainer from \"../../components/tables/TableContainer\";\nimport {SelectColumnFilter} from \"../../components/tables/Filters\";\nimport {Form} from \"react-bootstrap\";\nimport {useHistory} from \"react-router-dom\";\n\n\nexport default function Reservation() {\n\n    const [listReservations, setListReservations] = useState([])\n    const [listLocalisation, setListLocalisation] = useState([])\n\n    const fes_id = localStorage.getItem(\"currentFestival\")\n    const history = useHistory()\n\n    useEffect(() => {\n        Axios.get(`/server/reservations/afficherAllReservation/${fes_id}`).then((result) => {\n                setListReservations(result.data)\n                console.log(result.data)\n            }\n        )\n    }, [])\n\n\n    useEffect(() => {\n\n        Axios.get(`/server/localisation/allDetails/${fes_id}`).then((result) => {\n            setListLocalisation(result.data)\n            console.log(result.data)\n\n        })\n    }, [])\n\n\n    const updateFacture = (data, value) => {\n        console.log(\"DATA\", data)\n\n        Axios.put(\"/server/reservations/updateReservationFacture\", {\n            res_id: data.res_id,\n            res_facture: value\n        })\n    }\n\n    const updatePaiement = (data, value) => {\n\n        console.log(\"DATA\", data)\n        Axios.put(\"/server/reservations/updateReservationPaiement\", {\n            res_id: data.res_id,\n            res_paiement: value\n        })\n    }\n\n    const updateEspaceReservation = (data, value) => {\n\n        console.log(\"DATA\", data)\n        Axios.put(\"/server/reservations/updateReservationLocalisation\", {\n            res_id: data.res_id,\n            loc_id: value\n        })\n    }\n\n    const updatePrixRetour = (data, value) => {\n\n        console.log(\"DATA\", data)\n        Axios.put(\"/server/reservations/updateReservationPrixRetour\", {\n            res_id: data.res_id,\n            res_prixRetour: value\n        })\n    }\n\n    const updatePrixNegocie = (data, value) => {\n\n        console.log(\"DATA\", data, value)\n        Axios.put(\"/server/reservations/updateReservationPrixNegocie\", {\n            res_id: data.res_id,\n            res_prixNegocie: value\n        })\n    }\n\n    const goToExhibitorMonitoring = (soc_id) => {\n        history.push('/exhibitor-monitoring/' + soc_id);\n        window.location.reload(false)\n\n    }\n\n    const columns = useMemo(() => [\n        {\n            Header: () => null,\n            id: \"expander\"\n\n        },\n        {\n            Header: \"Exposant\",\n            accessor: \"societe.soc_nom\",\n\n            Cell: row => {\n                return (\n                    <a href=\"#\" onClick={() => goToExhibitorMonitoring(row.row.original.societe.soc_id)}>{row.value}</a>\n                )\n            }\n        },\n        {\n            Header: \"Zone\",\n            accessor: \"espace.localisation.loc_id\",\n\n            disableSortBy: true,\n            Filter: SelectColumnFilter,\n            filter: 'equals',\n\n            Cell: row => {\n                return (\n                    <div>\n                        <Form.Control as={\"select\"}\n                                      onChange={(e) => updateEspaceReservation(row.row.original, e.target.value)}>\n                            {\n                                listLocalisation.length != 0 ?\n                                    listLocalisation.map((option) =>\n                                        <option value={option.loc_id}\n                                                selected={option.loc_id == parseInt(row.value)}\n                                                key={option.loc_id}>\n                                            {option.loc_libelle}\n                                        </option>\n                                    )\n                                    : null\n                            }\n                        </Form.Control>\n                    </div>\n                )\n            }\n        },\n        {\n            Header: \"Facture\",\n            accessor: d => d.res_facture ? 'true' : 'false',\n\n            disableSortBy: true,\n            Filter: SelectColumnFilter,\n            filter: 'equals',\n\n            Cell: row => {\n                return (\n                    <div style={{'textAlign': 'center'}}>\n                        <input\n                            type=\"checkbox\"\n                            disabled={row.value == null}\n                            defaultChecked={(row.value == null || row.value == 'false') ? false : true}\n                            onChange={(event) => updateFacture(row.row.original, event.target.checked ? 1 : 0)}\n                        />\n                    </div>)\n            },\n\n        },\n        {\n            Header: \"Paiement\",\n            accessor: d => d.res_paiement ? 'true' : 'false',\n\n            disableSortBy: true,\n            Filter: SelectColumnFilter,\n            filter: 'equals',\n\n            Cell: row => {\n                return (\n                    <div style={{'textAlign': 'center'}}>\n                        <input\n                            type=\"checkbox\"\n                            disabled={row.value == null}\n                            defaultChecked={(row.value == null || row.value == 'false') ? false : true}\n                            onChange={(event) => updatePaiement(row.row.original, event.target.checked ? 1 : 0)}\n                        />\n                    </div>)\n            },\n\n\n        },\n        {\n            Header: \"Prix retour\",\n            accessor: d => d.res_prixRetour,\n\n            Cell: row => {\n                return (\n                    <div style={{'textAlign': 'center'}}>\n                        {\n                            console.log(\"ROW\", row.value)\n                        }\n                        <input\n                            type=\"number\"\n                            step={\".01\"}\n                            disabled={row.value == null}\n                            defaultValue={row.value}\n                            onChange={(event) => updatePrixRetour(row.row.original, event.target.value)}\n                        />\n                    </div>)\n            },\n        },\n        {\n            Header: \"Prix Negocie\",\n            accessor: d => d.res_prixNegocie,\n\n            Cell: row => {\n                return (\n                    <div style={{'textAlign': 'center'}}>\n                        {\n                            console.log(\"ROW\", row.value)\n                        }\n                        <input\n                            type=\"number\"\n                            step={\".01\"}\n                            disabled={row.value == null}\n                            defaultValue={row.value}\n                            onChange={(event) => updatePrixNegocie(row.row.original, event.target.value)}\n                        />\n                    </div>)\n            },\n        }\n\n    ])\n\n    return (\n        <div>\n            <div style={{marginTop: `50px`}} className=\"EspaceFooter\">\n                <TableContainer columns={columns} data={listReservations}/>\n            </div>\n        </div>\n    )\n\n}\n","import React, {useEffect, useState, useMemo} from \"react\";\nimport Axios from \"axios\"\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faEyeSlash, faInfoCircle} from \"@fortawesome/free-solid-svg-icons\";\nimport TableContainer from \"../../components/tables/TableContainer\";\nimport {CardBody, CardTitle} from \"reactstrap\";\nimport CardContact from \"../../components/contact/CardContact\";\nimport {Card} from \"react-bootstrap\";\n\nexport default function AfficherEditeur() {\n\n    const [societe, setListSociete] = useState([])\n\n\n    useEffect(() => {\n\n        Axios.get(`/server/festivals/affichageEditeur/${localStorage.getItem(\"currentFestival\")}`).then((result) => {\n            setListSociete(result.data[0].societes)\n            console.log(result.data[0].societes)\n        })\n    }, [])\n\n    const columns = useMemo(() => [\n            {\n                Header: () => null,\n                id: 'expander', // 'id' is required\n\n                Cell: ({row}) => (\n                    <span {...row.getToggleRowExpandedProps()}>\n                        {row.isExpanded ? <FontAwesomeIcon className=\"faiconDetail\" icon={faEyeSlash}/> :\n                            <FontAwesomeIcon className=\"faiconDetail\" icon={faInfoCircle}/>}\n                    </span>\n                ),\n            },\n            {\n                Header: \"Nom\",\n                accessor: \"soc_nom\",\n            },\n        ]\n    )\n\n    const detailsEditeur = (row) => {\n\n        const games = row.original.jeus\n\n        return (\n            <div>\n\n                {\n                    console.log(\"ORIGINAL\", row.original)\n                }\n\n                <Card style={{width: '50%', margin: '0 auto'}}>\n                    <CardBody>\n                        <CardTitle>\n                            <strong> Games </strong>\n                        </CardTitle>\n                        {\n                            games.map((game) => {\n                                return (\n                                    //<CardContact props={contact}/>\n                                    <span>\n                                    {game.j_titre}\n                                    </span>\n                                )\n                            })\n                        }\n                    </CardBody>\n                </Card>\n            </div>\n        )\n    }\n\n    return (\n        <div style={{marginTop: `50px`}} className=\"EspaceFooter\">\n            <TableContainer columns={columns} data={societe} renderRowSubComponent={detailsEditeur}/>\n        </div>\n    )\n\n}\n","import React from \"react\";\nimport {BrowserRouter as Router, Switch, Route, Link} from \"react-router-dom\";\n\n\n//les pages accessibles depuis la navbar\nimport Home from \"../pages/home/home\";\nimport Login from \"../pages/login/login\";\nimport UpdatePassword from \"../pages/update-password/update-password\";\nimport AfficherExposant from \"../pages/societe/AfficherExposant\";\nimport HandleAccounts from \"../pages/handle-accounts/handle-accounts\";\nimport Festivals from \"../pages/festivals/Festivals\";\nimport TypeJeux from \"../pages/type-jeux/type-jeux\"\nimport {Jeux} from \"../pages/jeux/jeux\";\nimport PrivateRoute from \"./privateRoute\";\nimport FestivalGames from \"../pages/festival-games/festival-games\";\nimport ExhibitorMonitoring from \"../pages/exhibitor-monitoring/exhibitor-monitoring\";\nimport AfficherSocieteRole from \"../pages/societe/AfficherSocieteRole\";\nimport FormLocalisation from \"../components/festivals/FormLocalisation\";\nimport Reservation from \"../pages/reservation/Reservation\";\nimport AfficherEditeur from \"../pages/societe/AfficherEditeurs\";\n\n\n// DANS LE SWITCH\n//exact permet de dire que c'est la page par defaut\n//Private route = route accessibe que quand login\nfunction Routes() {\n    return (\n        <div className=\"App\">\n\n            <Switch>\n                <Route exact path='/' component={Home}/>\n                <Route path='/login' component={Login}/>\n                <Route path='/festival-games' component={FestivalGames}/>\n                <Route path='/reservations' component={Reservation}/>\n                <PrivateRoute path='/update-password' component={UpdatePassword}/>\n                <PrivateRoute path='/exposants' component={AfficherExposant}/>\n                <PrivateRoute path='/editeurs' component={AfficherEditeur}/>\n                <PrivateRoute path='/societes' component={AfficherSocieteRole}/>\n                <PrivateRoute path='/handle-accounts' component={HandleAccounts}/>\n                <PrivateRoute path='/festivals' component={Festivals}/>\n                <PrivateRoute path='/localisation' component={FormLocalisation}/>\n                <PrivateRoute path='/jeux' component={Jeux}/>\n                <PrivateRoute path='/type-jeux' component={TypeJeux}/>\n                <PrivateRoute path='/exhibitor-monitoring/:idExposant' component={ExhibitorMonitoring}/>\n            </Switch>\n        </div>\n    )\n}\n\nexport default Routes\n","import {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faFacebook, faInstagram, faTwitter} from \"@fortawesome/free-brands-svg-icons\";\nimport {faEnvelope, faMapMarker, faPhone} from \"@fortawesome/free-solid-svg-icons\";\nimport logo from \"../../../assets/img/logo.png\";\nimport React from \"react\";\nimport './CustomFooter.css'\n\nfunction CustomFooter() {\n\n    return (\n        <div>\n            <footer className=\"footer\">\n                <div className=\"footer-left col-md-4 col-sm-6\">\n                    <p className=\"about\">\n                        <span> A propos</span> Depuis 2015, l’organisation du Festival du Jeu de Montpellier est\n                        soutenue par un collectif d’associations.\n\n                        Les bénévoles qui animent notre Festival sont bien souvent membres de ces associations. Et c’est\n                        bien normal, le reste de l’année, les joueurs jouent et se retrouvent lors d’événements\n                        organisés par leurs associations : soirées jeux, week-end jeux, festivals de jeux, etc.\n\n                    </p>\n                    <div className=\"icons\">\n                        <a href=\"https://www.facebook.com/festivaldujeudemontpellier/\"><FontAwesomeIcon\n                            icon={faFacebook}/></a>\n                        <a href=\"https://twitter.com/FestivalJeuMpl\"><FontAwesomeIcon icon={faTwitter}/></a>\n                        <a href=\"https://www.instagram.com/festivaldujeumontpellier/\"><FontAwesomeIcon\n                            icon={faInstagram}/></a>\n                    </div>\n                </div>\n                <div className=\"footer-center col-md-4 col-sm-6\">\n                    <div>\n                        <FontAwesomeIcon id=\"fa\" icon={faMapMarker}/>\n                        <p><span> Boulevard Charles Warnery</span> Montpellier, France</p>\n                    </div>\n                    <div>\n                        <FontAwesomeIcon id=\"fa\" icon={faPhone}/>\n                        <p> (+00) 0000 000 000</p>\n                    </div>\n                    <div>\n                        <FontAwesomeIcon id=\"fa\" icon={faEnvelope}/>\n                        <p>contact@festivaldujeu-montpellier.org</p>\n                    </div>\n                </div>\n                <div className=\"footer-right col-md-4 col-sm-6\">\n                    <img id=\"logoFestival\" src={logo}/>\n                    <p className=\"menu\">\n                        <a href=\"#\"> Home</a> |\n                        <a href=\"#\"> About</a> |\n                        <a href=\"#\"> Services</a> |\n                        <a href=\"#\"> Portfolio</a> |\n                        <a href=\"#\"> News</a> |\n                        <a href=\"#\"> Contact</a>\n                    </p>\n                    <p className=\"name\"> Festival du jeu de Montpellier &copy; 2021</p>\n                    <p className=\"name\"> Marine Téroitin - Laura Biasibetti - Aymeric Couprie</p>\n                </div>\n            </footer>\n        </div>\n    )\n}\n\n\nexport default CustomFooter\n","import React, {createContext, useEffect, useState} from \"react\";\n\n//pour avoir la navbar sur toutes les pages on l'a mise dans un component\nimport CustomHeader from \"./app/components/headerfooter/CustomHeader\";\nimport Routes from \"./app/routes/routes\"\nimport CustomFooter from \"./app/components/headerfooter/CustomFooter\"\nimport Axios from \"axios\";\n\n\nexport const FestivalContext = createContext({\n    selectedFestival: {\n        fes_id: 0,\n        fes_date: new Date()\n    },\n    setSelectedFestival: Function\n})\n\nfunction App() {\n\n    const [prochainFestival, setProchainFestival] = useState({\n        fes_id: 0,\n        fes_date: new Date()\n    });\n    const [isWhatever, setIsWhatever] = useState(false); // used to update the date in the header instead of reloading the page\n    const value = {selectedFestival: prochainFestival, setSelectedFestival: setProchainFestival}\n\n    //méthode qui s'appelle au chargement de la page\n    useEffect(() => {\n        console.log(\"je recharge\")\n        Axios.get(\"/server/festivals/closest\")\n            .then((res) => {\n                localStorage.setItem(\"currentFestival\", res.data.closestFestival[0].fes_id);\n                setProchainFestival(res.data.closestFestival[0]);\n            })\n    }, [isWhatever]);\n\n    return (\n        <div className=\"App\">\n            {prochainFestival &&\n            <FestivalContext.Provider value={value}>\n                <CustomHeader/>\n                <Routes/>\n                <CustomFooter/>\n            </FestivalContext.Provider>\n            }\n        </div>\n    );\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { BrowserRouter as Router} from 'react-router-dom';\nimport \"./index.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n      <Router>\n          <App/>\n      </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}